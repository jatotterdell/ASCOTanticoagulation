---
title: "Data Overview"
description: |
  Exploratory overview of ASCOT anticoagulation data.
author: "James Totterdell"
date: last-modified
---

```{r}
#| label: pkgs
library(tidyverse)
library(patchwork)
library(DT)
library(plotly)
library(knitr)
library(kableExtra)

theme_set(theme_minimal(base_size = 12))

source("r/summary_functions.r")
```

```{r}
#| label: load-data
source("r/derive_full_datasets.r")
all_data <- read_all_no_daily()
all_daily_data <- read_all_daily()
```

## Dictionary

```{r}
#| label: data-dict
#| column: page
source("r/read_raw_data.r")
dict <- read_dictionary() %>%
  select(HeadingName, DbField, FieldTitle, FieldFormatting, ValidationNotes)
datatable(dict)
```

## Data Completeness

```{r}
#| label: completeness-table
#| column: page
source("r/data_completeness.r")
completeness <- summarise_completeness_data(generate_completeness_data(all_daily_data))
completeness$combined %>%
  datatable() %>%
  formatStyle(2:10, 'text-align' = "right", "white-space" = "nowrap")
```

## Available Records

```{r}
#| label: tbl-available-records
#| tbl-cap: Patterns of record availability for all screened participants.
#| cap-location: margin
all_data %>%
  count(EL_rec, ENR_rec, BAS_rec, DIS_rec, D28_rec, WTH_rec) %>%
  kable("html") %>%
  kable_styling("striped", font_size = 14)
```

## Enrolment

```{r}
#| label: fig-enrolment
#| code-summary: Study enrolment
#| fig-cap-location: margin
#| fig-cap: |
#|   Cumulative enrolments to the platform, 
#|   vertical lines indicate timing of interim analyses
#| fig-height: 7
md <- get_interim_dates()
id <- get_intervention_dates()
p1 <- all_data %>%
  filter(ENR_rec == 1) %>%
  count(RandDate) %>%
  complete(RandDate = 
             seq.Date(min(RandDate, na.rm = TRUE), 
                      Sys.Date(), 
                      by = "1 day"),
           fill = list(n = 0)) %>%
  mutate(`Cumulative enrolments` = cumsum(n)) %>%
  rename(`Randomisation date` = RandDate) %>%
  ggplot(., aes(`Randomisation date`, `Cumulative enrolments`)) +
  geom_step() +
  geom_vline(data = md,
             aes(xintercept = as.numeric(meet_date)),
             linetype = 2) +
  labs(x = "")

p2 <- id %>%
  mutate(
    Intervention = fct_inorder(val_labels(Intervention))
  ) %>%
  ggplot(.) +
  facet_grid(Domain ~ ., drop = TRUE, scales = "free_y") +
  geom_point(aes(x = Intervention, y = endate), shape = 4) +
  geom_segment(
    aes(x = Intervention, xend = Intervention, 
        y = stdate, yend = endate))  +
  geom_hline(data = md,
             aes(yintercept = as.numeric(meet_date)),
             linetype = 2) +
  coord_flip() +
  labs(x = "", y = "Calendar date")

p1 / p2
```

```{r}
#| label: fig-enrolment-country
#| code-summary: Study enrolment by country
#| fig-cap-location: margin
#| fig-cap: |
#|   Cumulative enrolments to the platform by country, 
#|   vertical lines indicate timing of interim analyses
#| fig-height: 10
p1 <- all_data %>%
  filter(ENR_rec == 1) %>%
  count(Country = PT_CountryName, RandDate) %>%
  complete(
    Country, 
    RandDate = seq.Date(min(RandDate, na.rm = T), Sys.Date(), by = "1 day"),
    fill = list(n = 0)) %>%
  group_by(Country) %>%
  mutate(`Cumulative enrolments` = cumsum(n)) %>%
  rename(`Randomisation date` = RandDate) %>%
  ggplot(., aes(`Randomisation date`, `Cumulative enrolments`)) +
  facet_wrap( ~ Country, ncol = 1, scales = "free_y") +
  geom_step() +
  geom_vline(data = md,
             aes(xintercept = as.numeric(meet_date)),
             linetype = 2) +
  labs(x = "")
(p1 / p2) + plot_layout(heights = c(5, 2))
```

```{r}
#| label: enrolment-site
#| code-summary: Study enrolment by site
#| column: screen-inset-shaded
#| layout-nrow: 1
p1 <- all_data %>%
  filter(ENR_rec == 1) %>%
  count(Country = PT_CountryName, Site = PT_LocationName, RandDate) %>%
  complete(
    nesting(Country, Site),
    RandDate = seq.Date(min(RandDate), max(RandDate), by = "1 day"),
    fill = list(n = 0)) %>%
  group_by(Country, Site) %>%
  mutate(`Cumulative enrolments` = cumsum(n)) %>%
  rename(`Calendar date` = RandDate) %>%
  ggplot(., aes(`Calendar date`, `Cumulative enrolments`)) +
  facet_wrap( ~ paste(Country, Site, sep = ": "), 
              ncol = 5, scales = "free_y") +
  geom_step() +
  geom_vline(data = md,
             aes(xintercept = as.numeric(meet_date)),
             linetype = 2) +
  scale_y_continuous(breaks = function(x) 
    unique(floor(pretty(seq(0, (max(x) + 1) * 1.1)))))
ggplotly(p1, height = 1000)
```

## Intervention Assignments

```{r}
#| label: tbl-intervention-assignments-anticoagulation
#| tbl-cap: Counts of intervention assignments to anticoagulation
#| tbl-cap-location: margin
all_data %>%
  count(FAS_ITT, ACS_ITT, CAssignment) %>%
  kable() %>%
  kable_styling("striped", font_size = 14)
```

```{r}
#| label: tbl-intervention-assignments-both
#| tbl-cap: Counts of intervention assignments to regimen
#| tbl-cap-location: margin
all_data %>%
  count(FAS_ITT, ACS_ITT, AVS_ITT, AAssignment, CAssignment) %>%
  kable() %>%
  kable_styling("striped", font_size = 14)
```

```{r}
#| label: fig-intervention-assignment-overtime
#| code-summary: Intervention allocations overtime
#| fig-cap: |
#|   Allocation to interventions by calendar date.
p1 <- all_data %>%
  filter(ENR_rec == 1) %>%
  count(Intervention = CAssignment, RandDate) %>%
  complete(Intervention,
           RandDate = seq.Date(min(RandDate, na.rm = T),
                               max(Sys.Date(), na.rm = T),
                               by = "1 day"),
           fill = list(n = 0)) %>%
  group_by(Intervention) %>%
  mutate(cn = cumsum(n)) %>%
  ungroup() %>%
  ggplot(., aes(RandDate, cn)) +
  geom_step(aes(colour = Intervention)) +
  scale_color_viridis_d(option = "D") +
  labs(x = "", y = "Cumulative allocation")
p1 / p2
```

### Country

Allocations to interventions by country of enrolment.

```{r}
#| label: tbl-allocation-country
#| code-summary: Allocations by site
#| tbl-cap: |
#|   Allocation to anti-coagulation interventions by country
all_data %>%
  filter(ENR_rec == 1) %>%
  count(Country = PT_CountryName, Intervention = CAssignment) %>%
  group_by(Country) %>%
  mutate(p = n / sum(n)) %>%
  mutate(lab = sprintf("%i (%.2f)", n, p)) %>%
  select(-n, -p) %>%
  ungroup() %>%
  spread(Intervention, lab, fill = "0 (0.00)") %>%
  kable(align = "lrrrrr") %>%
  kable_styling(bootstrap_options = "striped", font_size = 12)
```

### Site

Allocations to interventions by site of enrolment.

```{r}
#| label: fig-allocation-site
#| code-summary: Allocations by site
#| fig-cap: |
#|   Allocation to anti-coagulation interventions by site
#| fig-height: 8
p <- all_data %>%
  filter(ENR_rec == 1) %>%
  count(Country = Country, 
        Site = Location,
        Intervention = CAssignment) %>%
  group_by(Site = paste(Country, Site, sep = ": ")) %>%
  mutate(p = n / sum(n)) %>%
  ggplot(., aes(Intervention, n)) +
  facet_wrap( ~ Site, scales = "free_y") +
  geom_col() +
  scale_y_continuous("Frequency",
    breaks = function(x) 
      unique(floor(pretty(seq(0, (max(x) + 1) * 1.1)))))
ggplotly(p)
```

## Baseline Factors

The following provides an overview of the baseline covariates collected for individuals.

There is an issue with the serum creatinine units for some participants. These have been reported as "umol/L" when in fact it is more likely they are in mg/dL (spike at values reported as umol/L and less than 1, noting that 1 mg/dL = 88.42 umol/L).

```{r}
#| label: fig-serum-creatinine
#| fig-cap: |
#|   Histogram of serum creatinine levels at 
#|   baseline by reported units.
all_data %>%
  filter(
    EL_SerumCreatinineUnits == "umol/L",
    EL_SerumCreatinineBlood <= 1.5
  ) %>%
  select(
    EligibilityCode, 
    StudyPatientID, 
    starts_with("EL_Serum")) %>%
  write_csv(file.path(ASCOT_DATA, "derived", "low_creatinine_values.csv"))
ggplot(all_data %>% 
         filter(!is.na(EL_SerumCreatinineUnits)), 
       aes(EL_SerumCreatinine_umolL)) +
  geom_histogram(bins = 50, boundary = 0) +
  facet_wrap( ~ EL_SerumCreatinineUnits) +
  xlim(0, 500)
```

### Demographics

Baseline demographics are summarised by intervention in the following table.

```{r}
#| label: tbl-demographics-table
#| code-summary: Demographics table
#| tbl-cap: |
#|   Baseline demographics for participants randomised into
#|   the anticoagulation domain.
sdat <- all_data %>%
    filter(ENR_rec == 1, CAssignment != "C0")
generate_baseline_demographics_table(sdat, format = "html")
```

### Co-morbidities

Baseline co-morbidities are summarised by anti-coagulation intervention in the following table.

```{r}
#| label: tbl-comorbidities-table
#| code-summary: Co-morbidities table
#| tbl-cap: |
#|   Baseline co-morbidities for participants randomised into
#|   then anticoagulation domain.
sdat <- all_data %>%
    filter(ENR_rec == 1, CAssignment != "C0")
generate_baseline_comorbidities_table(sdat, format = "html")
```

### Prognostics

Baseline prognostics are summarised by anti-coagulation intervention in the following table.

```{r}
#| label: tbl-prognostics-table
#| code-summary: Prognostics table
#| tbl-cap: |
#|   Baseline prognostic variables for 
#|   participants randomised into anticoagulation domain.
sdat <- all_data %>%
    filter(ENR_rec == 1, CAssignment != "C0")
generate_baseline_prognostics_table(sdat, format = "html")
```

### Age

```{r}
#| label: fig-age-hist
#| code-summary: Histogram of age
#| fig-cap: |
#|   Distribution of age
all_data %>%
  filter(ENR_rec == 1) %>%
  ggplot(., aes(AgeAtEntry)) + 
  geom_histogram(
    breaks = c(18, seq(20, 100, 5)), 
    colour = "white", 
    closed="left") +
  labs(
    x = "Age at randomisation (5-year bins, 30 to 34, 35 to 39, etc.)", 
    y = "Count") +
  scale_x_continuous(breaks = seq(20, 95, 5))
```

```{r}
#| label: fig-age-by-cassignment
#| code-summary: Histogram of age by anti-coagulation intervention
#| fig-cap: |
#|   Distribution of age by anti-coagulation intervention
#| fig-cap-location: bottom
#| column: screen-inset-shaded
#| layout-nrow: 1
p <- all_data %>%
  filter(ENR_rec == 1) %>%
  ggplot(., aes(AgeAtEntry)) + 
  facet_wrap( ~ CAssignment, scales = "free_y", ncol = 5) +
  geom_histogram(
    breaks = c(18, seq(20, 100, 5)), 
    colour = "white", 
    closed="left") +
  labs(
    x = "Age at randomisation (5-year bins, 30 to 34, 35 to 39, etc.)", 
    y = "Count") +
  scale_x_continuous(breaks = seq(20, 95, 5))
ggplotly(p, width = 1700, height = 400)
```

### 
