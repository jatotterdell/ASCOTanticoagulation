---
title: "7-7 mMRC Breathlessness scale"
description: |
  Analyse of the modified Medical Research Council breathlessness scale.
author: 
  - name: James Totterdell
    affiliation: University of Sydney
  - name: Rob Mahar
    affiliation: University of Melbourne
date: last-modified
---

## Preamble {#preamble}

```{r}
#| label: pkgs
#| code-summary: Load packages
library(tidyverse)
library(labelled)
library(kableExtra)
library(cmdstanr)
library(posterior)
library(bayestestR)
library(bayesplot)
library(matrixStats)
library(ggdist)
library(patchwork)
library(lubridate)

theme_set(theme_classic(base_size = 10, base_family = "Palatino") +
  theme(panel.grid = element_blank(),
        strip.background = element_blank()))
bayesplot_theme_set(theme_set(theme_classic(base_size = 10, base_family = "Palatino") +
  theme(panel.grid = element_blank(),
        strip.background = element_blank())))
```

```{r}
#| label: data
#| code-summary: Prepare dataset
devtools::load_all()
all_dat <- read_all_no_daily()

breath_labels <-c("Only breathless with strenuous exercise",
                  "Short of breath when hurrying on level ground or walking up a slight hill",
                  "Walks slower than most people of the same age because of breathlessness on level",
                  "Stops for breath after walking about 100 metres or after a few minutes on level ground",
                  "Too breathless to leave the house, or breathless when dressing or undressing")

breath_labels_short <-c("Only breathless with strenuous exercise",
                     "Short of breath up a slight hill",
                     "Walks slower than most people of the same age",
                     "Stops for breath after walking about 100 metres",
                     "Too breathless to leave the house")

acs_itt_dat <- all_dat %>% 
  filter_acs_itt() %>%
  transmute_model_cols_grp_aus_nz() %>%
  mutate(
    out_mmrc_lab = fct_explicit_na(
      factor(out_mmrc_scale, 
             levels = c(1:5, 0),
             labels = c(breath_labels_short, "Not asked"))))
acs_itt_nona_dat <- all_dat %>% 
  filter_acs_itt()  %>%
  filter(!is.na(out_mmrc_scale), out_mmrc_scale != 0) %>%
  transmute_model_cols_grp_aus_nz() %>%
  mutate(out_mmrc_lab = fct_explicit_na(
  factor(out_mmrc_scale, 
         levels = c(1:5, 0),
         labels = c(breath_labels_short, "Not asked"))))
acs_itt_nona2_dat <- all_dat %>% 
  filter_acs_itt()  %>%
  filter(!is.na(out_mmrc_scale)) %>%
  transmute_model_cols_grp_aus_nz() %>%
  mutate(out_mmrc_lab = fct_explicit_na(
  factor(out_mmrc_scale, 
         levels = c(1:5, 0),
         labels = c(breath_labels_short, "Not asked")))) %>%
  mutate(out_mmrc_scale = out_mmrc_scale + 1)

# Concurrent enrolments for C2
acs_itt_concurc2_dat <- acs_itt_dat %>%
  filter_concurrent_intermediate()
acs_itt_concurc2_nona_dat <- acs_itt_concurc2_dat %>% 
  filter(!is.na(out_mmrc_scale), out_mmrc_scale != 0)

# Concurrent enrolments for C3
acs_itt_concurc3_dat <- acs_itt_dat %>%
  filter_concurrent_std_aspirin()
acs_itt_concurc3_nona_dat <- acs_itt_concurc3_dat %>% 
  filter(!is.na(out_mmrc_scale), out_mmrc_scale != 0)

# Concurrent enrolments for C4
acs_itt_concurc4_dat <- acs_itt_dat %>%
  filter_concurrent_therapeutic()
acs_itt_concurc4_nona_dat <- acs_itt_concurc4_dat %>% 
  filter(!is.na(out_mmrc_scale), out_mmrc_scale != 0)
```

```{r}
#| label: load-models
#| code-summary: Compiles stan models.
seed <- 59579
model_tx           <- cmdstan_model(file.path("stan", "ordinal", "logistic_cumulative.stan"))
model_site         <- cmdstan_model(file.path("stan", "ordinal", "logistic_cumulative_site.stan"))
model_region_epoch <- cmdstan_model(file.path("stan", "ordinal", "logistic_cumulative_epoch.stan"))
model_site_epoch   <- cmdstan_model(file.path("stan", "ordinal", "logistic_cumulative_epoch_site.stan"))
```

```{r}
#| label: helper-functions
#| code-summary: Helper functions

# Makes stan data for ordinal outcome.
make_stan_data <- function(dat, vars, outcome, beta_sd_var, ctr = contr.orthonorm, p_mult = 2) {
  
  X <- make_X_design(dat, vars, ctr)
  attX <- attr(X, "contrasts")
  X <- X[, -1]
  attr(X, "contrasts") <- attX
  nXtrt <- sum(grepl("rand", colnames(X)))
  beta_sd <- c(rep(1, nXtrt), beta_sd_var)
  
  y <- as.integer(dat[[outcome]])
  N <- dim(X)[1]
  K <- dim(X)[2]  
  J <- max(y)
  
  epoch <- dat[["epoch"]]
  M_epoch <- max(dat[["epoch"]])
  region <- as.integer(dat[["ctry"]])
  M_region <- max(region)
  site <- dat[["site_num"]]
  M_site <- length(levels(dat[["site"]]))
  region_by_site <- dat %>% 
    dplyr::count(ctry_num, site_num) %>% 
    pull(ctry_num)
  
  list(
    N = N, K = K, X = X, y = y, J = J, p_par = rep(p_mult, J),
    M_region = M_region, region = region,
    M_site = M_site, site = site,
    M_epoch = M_epoch, epoch = epoch, 
    region_by_site = region_by_site,
    beta_sd = beta_sd)
}

# Wrapper to run stan
run_stan <- function(model, data, ...) {
  model[["sample"]](data = data,
                    seed = seed,
                    refresh = 0,
                    iter_sampling = 2500,
                    chains = 8,
                    parallel_chains = min(8, parallel::detectCores()),
                    ...
  )
}
```


The mMRC Breathlessness Scale was only asked of participants who reported that they had been "experiencing shortness of breath that is worse than or new since before they got COVID" (`D28_BreathSinceGettingCovid == Yes`). Therefore, the outcome as analysed is conditional on a patient having worse breathlessness than before.

Given that a patient who is not experiencing *worse* shortness of breath, may have still been experiencing *some* shortness of breath before they got COVID, it does not make sense to assign these participants to a score of 0 on the scale.

This means that most of the data is missing, as only about ~ 20% of participants responded "Yes" to experiencing worse shortness of breath. One option is to augment the scale and threat it as a measure of "worsening" of shortness of breath, where a "No" to `D28_BreathSinceGettingCovid` is taken as a score of -1, and for a "Yes", the score is taken as that reported for `D28_BreathScale`.

## Descriptive

```{r}
#| label: po-component-ordinal
#| code-summary: Summarise the ordinal component
descriptive_table <- acs_itt_dat %>% 
  dplyr::count(CAssignment, out_mmrc_lab) %>%
  spread(CAssignment, n, fill = 0) %>%
  mutate(
    Overall = C1 + C2 + C3 + C4,
    across(C1:Overall, ~ sprintf("%i (%.0f)", .x, 100 * .x / sum(.x)))
  ) %>%
  rename(
    Low = C1,
    Intermediate = C2,
    `Low\nwith aspirin` = C3,
    Therapeutic = C4
  )

tab <- kable(
  descriptive_table,
  format = "latex",
  booktabs = TRUE,
  escape = F,
  col.names = linebreak(c("mMRC breathlessness scale (day 28)", names(descriptive_table)[-1]), align = "c"),
  caption = "Secondary endpoint breakdown - mMRC breathlessness scale (day 28).",
  align = "lrrrrr") %>%
  kable_styling(font_size = 9, latex_options = "HOLD_position")
save_tex_table(tab, "outcomes/secondary/7-7_mmrc_scale_descriptive")

kable(
  descriptive_table,
  col.names = c("mMRC breathlessness scale (day 28)", names(descriptive_table)[-1]),
  caption = "Secondary endpoint breakdown - mMRC breathlessness scale (day 28).",
  align = "lrrrrr") %>%
  kable_styling(font_size = 11) %>%
  collapse_rows(1, valign = "top", latex_hline = 'custom', custom_latex_hline = 1)
```

```{r, fig.width=10, fig.height=4}
#| label: graph-clogits-ordinal
#| code-summary: Graph the sample cumulative logits
acs_itt_nona_dat %>% 
  group_by(CAssignment, out_mmrc_lab) %>%
  summarise(n = n()) %>%
  mutate(p = n/sum(n)) %>%
  select(-n) %>%
  spread(CAssignment, p, fill = 0) %>%
  mutate(across(C1:C4, ~ logit(cumsum(.x )))) %>%
  mutate(across(C2:C4, ~ .x/C1),
         across(C2:C4, ~ ifelse(.x == Inf, NA, .x))) %>% 
  select(-C1) %>%
  mutate(across(C2:C4, ~ .x/(mean(.x, na.rm = TRUE)))) %>%
  gather("id", "value", 2:4) %>%
  rename(Treatment = id, `Cumulative odds ratio` = value) %>%
  ggplot(., aes(reorder(out_mmrc_lab, desc(out_mmrc_lab)), `Cumulative odds ratio`, group = Treatment, col=Treatment)) + 
  geom_line() + geom_point() +  
  coord_flip() + 
  xlab("") + ylab("Mean centred cumulative odds ratio") + 
  labs(caption = "Note: cumulative odds for highest category do not exist.") +
  theme(plot.caption = element_text(hjust = 0))
```

## Analyses

### Primary Model

```{r}
fit_primary_model <- function(dat, ctr = contr.orthonorm) {
  
  mdat <- make_stan_data(
    dat = dat,
    vars = c("inelgc3", "agegte60", "ctry"),
    outcome = "out_mmrc_scale",
    beta_sd_var = c(10, 2.5, 1, 1),
    ctr = ctr)
  mfit <- run_stan(model_site_epoch, mdat, adapt_delta = 0.99)
  mdrws <- as_draws_rvars(
    mfit$draws(c("alpha", "beta", "gamma_site", "gamma_epoch", 
                 "tau_site", "tau_epoch", "y_ppc")))
  
  # Add names
  epoch_map <- dat %>% dplyr::count(epoch, epoch_lab)
  site_map <- dat %>% dplyr::count(site_num, site)
  names(mdrws$beta) <- colnames(mdat$X)
  names(mdrws$gamma_epoch) <- epoch_map$epoch_lab
  names(mdrws$gamma_site) <- site_map$site
  # Convert to treatment log odds ratios
  mdrws$Acon <- attr(mdat$X, "contrasts")$randA %**% 
    mdrws$beta[grepl("randA[0-9]", names(mdrws$beta))]
  mdrws$Ccon <- attr(mdat$X, "contrasts")$randC %**% 
    mdrws$beta[grepl("randC[0-9]", names(mdrws$beta))]
  mdrws$trtA <- mdrws$Acon[-1] - mdrws$Acon[1]
  mdrws$trtC <- mdrws$Ccon[-1] - mdrws$Ccon[1]
    mdrws$compare <- c(
    "Intermediate vs low" = exp(mdrws$trtC[1]),
    "Low with aspirin vs low" = exp(mdrws$trtC[2]),
    "Therapeutic vs low" = exp(mdrws$trtC[3]),
    "Intermediate vs low with aspirin" = exp(mdrws$trtC[1] - mdrws$trtC[2]),
    "Intermediate vs therapeutic" = exp(mdrws$trtC[1] - mdrws$trtC[3]),
    "Low with aspirin vs therapeutic" = exp(mdrws$trtC[2] - mdrws$trtC[3])
  )
  mdrws$OR <- c(
    setNames(exp(mdrws$trtC), c("Intermediate", "Low with aspirin", "Therapeutic")),
    "Ineligible aspirin" = exp(mdrws$beta[which(grepl("inelg", colnames(mdat$X)))]),
    "Age \u2265 60" = exp(mdrws$beta[which(grepl("age", colnames(mdat$X)))]),
    setNames(exp(mdrws$beta[which(grepl("ctry", colnames(mdat$X)))]), c("Australia/New Zealand", "Nepal"))
  )
  return(list(dat = mdat, fit = mfit, drws = mdrws))
}
res <- fit_primary_model(acs_itt_nona_dat)
```

```{r}
#| label: odds-ratio-summary-table-primary-model-save
#| code-summary: Odds ratio summary table
#| tbl-cap: Posterior summaries for model parameters (fixed-effects).
save_tex_table(
  odds_ratio_summary_table(res$drws$OR, "latex"),
  "outcomes/secondary/7-7-primary-model-acs-itt-summary-table")
odds_ratio_summary_table(res$drws$OR)
```

```{r}
#| code-summary: Odds ratio summary for epoch and site
#| fig-cap: Summary of epoch and site posterior odds ratios.
p <- plot_epoch_site_terms(
  exp(res$drws$gamma_epoch),
  exp(res$drws$gamma_site),
  factor(res$dat$region_by_site, 
         labels = c("India", "Australia\nNew Zealand", "Nepal"))
)
pth <- file.path("outputs", "figures", "outcomes", "secondary", "7-7-primary-model-epoch-site-terms.pdf")
ggsave(pth, p, width = 6, height = 4.5)
p
```

```{r}
#| code-summary: Posterior contrasts
#| fig-cap: Summaries on comparisons.
plot_or_densities(res$drws$compare)
```

:::{.callout-caution collapse="true"}
##### Diagnostics
```{r}
res$fit$summary(
  c("alpha", "beta", "gamma_epoch", "gamma_site", "tau_epoch", "tau_site")) %>%
  print(n = Inf)
res$fit$diagnostic_summary()
```
:::

:::{.callout-caution collapse="true"}
##### Trace plots
```{r}
mcmc_trace(res$drws["beta"])
mcmc_trace(res$drws["alpha"])
mcmc_trace(res$drws["gamma_site"])
mcmc_trace(res$drws["gamma_epoch"])
```
:::

#### Posterior Predictive

```{r}
y_ppc <- res$drws$y_ppc
ppc_dat <- bind_cols(acs_itt_nona_dat, tibble(y_ppc = y_ppc)) %>%
  mutate(CAssignment = factor(
    CAssignment, 
    levels = names(intervention_labels_short_break()$CAssignment),
    labels = intervention_labels_short_break()$CAssignment))


plot_grp_ppc <- function(dat, lab = "", xlab = "Probability") {
  ggplot(dat %>% 
           filter(response == "ypp", event == "eq"), 
         aes(y = out)) +
    facet_wrap( ~ grp, nrow = 1, scales = "free_x") +
    stat_pointinterval(aes(xdist = posterior), fatten_point = 1)  +
    geom_point(data = dat %>% filter(response == "y", event == "eq"), 
               aes(y = out, x = mean(posterior)),
               colour = "red",
               shape = 23) +
    scale_x_continuous(
      xlab, breaks = c(0, 0.3, 0.6),
      sec.axis = sec_axis(
        ~ . , name = lab, breaks = NULL, labels = NULL)) +
    scale_y_continuous("mMRC scale") +
    theme(strip.text = element_text(size = rel(0.7)),
          axis.title.x = element_text(size = rel(0.7)),
          axis.text.x = element_text(size = rel(0.65)),
          axis.title.y = element_text(size = rel(0.75)),
          axis.title.x.bottom = element_blank())
}

pp_C <- ordinal_grp_ppc(out_mmrc_scale, CAssignment, 1:5)
pp_ctry <- ordinal_grp_ppc(out_mmrc_scale, country, 1:5)
pp_epoch <- ordinal_grp_ppc(out_mmrc_scale, epoch, 1:5)
pp_site <- ordinal_grp_ppc(out_mmrc_scale, site, 1:5) %>%
  left_join(ppc_dat %>% dplyr::count(site, country), 
            by = c("grp" = "site"))

p1 <- plot_grp_ppc(pp_C, "Anticoagulation", "")
p2 <- plot_grp_ppc(pp_ctry, "Country", "") 
p3 <- plot_grp_ppc(pp_epoch, "Epoch", "")
p4 <- plot_grp_ppc(
  pp_site %>% filter(country == "IN"), "Sites India", "")
p5 <- plot_grp_ppc(
  pp_site %>% filter(country == "AU"), "Sites Australia", "")
p6 <- plot_grp_ppc(
  pp_site %>% filter(country == "NP"), "Sites Nepal", "")
p7 <- plot_grp_ppc(
  pp_site %>% filter(country == "NP"), "Sites New Zealand", "")

p <- (p1 | p2) / p3 / p4 / p5 / (p6 | p7)
pth <- file.path("outputs", "figures", "outcomes", "secondary",
                 "7-7-primary-model-acs-itt-ppc.pdf")
ggsave(pth, p, width = 6, height = 5.75)
p
```

### Sensitivity: Treatment Coding

```{r}
res <- fit_primary_model(acs_itt_nona_dat, contr.treatment)
```

```{r}
odds_ratio_summary_table(res$drws$OR)
```

### Sensitivity: Reduced Models

```{r, eval = F, include = F}
#| label: model-treatment
#| code-summary: Treatment only model
dat_tx <- make_stan_data(
  dat = acs_itt_nona_dat, 
  vars    = NULL,
  outcome = "out_mmrc_scale", 
  beta_sd_var = NULL)
stan_tx <- run_stan(model_tx, dat_tx)
stan_tx$cmdstan_diagnose()
stan_tx$summary(variables = c("p0", "alpha", "beta"))
```

```{r}
#| label: model-site
#| code-summary: Full design model plus site
dat_full <- make_stan_data(
  dat = acs_itt_nona_dat,
  vars    = c("inelgc3", "agegte60", "ctry"),
  outcome = "out_mmrc_scale",
  beta_sd = c(10, 2.5, 1, 1))
stan_region <- run_stan(model_site, dat_full)
stan_region$cmdstan_diagnose()
stan_region$summary(variables = c("p0", "alpha", "beta"))
```

### Expanded Outcome

```{r}
res <- fit_primary_model(acs_itt_nona2_dat)
```

```{r}
odds_ratio_summary_table(res$drws$OR)
```

```{r}
plot_or_densities(res$drws$compare)
```

```{r}
res <- fit_primary_model(acs_itt_nona2_dat, contr.treatment)
```

```{r}
odds_ratio_summary_table(res$drws$OR)
```

```{r}
plot_or_densities(res$drws$compare)
```
