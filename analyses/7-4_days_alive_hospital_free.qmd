---
title: Days alive and free of hospital by day 28
description: |
  This outcome was defined as the number of days alive and free of hospital 
  from randomisation to 28 days, calculated as 28 minus the number of days 
  spent in hospital.  All patients dying within 28 days will be assigned zero 
  free days.
author:
  - name: James Totterdell
    affiliation: University of Sydney
  - name: Rob Mahar
    affiliation: University of Melbourne
date: last-modified
---

# Preamble

```{r}
#| label: pkgs
#| code-summary: Load packages
library(tidyverse)
library(labelled)
library(kableExtra)
library(cmdstanr)
library(posterior)
library(bayestestR)
library(bayesplot)
library(matrixStats)
library(plotly)
library(lubridate)
library(ggdist)
library(patchwork)

theme_set(theme_classic(base_size = 10, base_family = "Palatino") +
  theme(panel.grid = element_blank(),
        strip.background = element_blank()))
bayesplot_theme_set(theme_set(theme_classic(base_size = 10, base_family = "Palatino") +
  theme(panel.grid = element_blank(),
        strip.background = element_blank())))

color_scheme_set("red")
options(digits = 4)
```

```{r}
#| label: data
#| code-summary: Prepare dataset
devtools::load_all()
all_dat <- read_all_no_daily()

fas_itt_dat <- all_dat %>% 
  filter_fas_itt() %>%
  transmute_model_cols_grp_aus_nz() %>%
  left_join(
    all_dat %>% 
      select(
        StudyPatientID, 
        D28_death,
        D28_OutcomeTotalDaysHospitalised, 
        DIS_day,
        out_dafh),
    by = "StudyPatientID")
fas_itt_nona_dat <- fas_itt_dat %>% 
  filter(!is.na(out_dafh))

acs_itt_dat <- all_dat %>% 
  filter_acs_itt() %>%
  transmute_model_cols_grp_aus_nz() %>%
  left_join(
    all_dat %>% 
      select(
        StudyPatientID, 
        D28_death, 
        D28_OutcomeTotalDaysHospitalised,
        DIS_day, 
        out_dafh),
    by = "StudyPatientID")
acs_itt_nona_dat <- acs_itt_dat %>% 
  filter(!is.na(out_dafh))
```

```{r}
#| label: models
#| code-summary: Load models
ordmod0 <- cmdstan_model("stan/logistic_cumulative_ordinal.stan")
ordmod <- cmdstan_model("stan/ordinal_site_epoch.stan")
```

```{r}
#| label: helper-functions
#| code-summary: Functions

make_model_data <- function(dat, ctr = contr.orthonorm, p_mult = 2) {
  
  epoch <- dat$epoch
  M_epoch <- max(dat$epoch)
  region <- dat$ctry_num
  M_region <- max(region)
  site <- dat$site_num
  M_site <- max(site)
  region_by_site <- dat %>% 
    dplyr::count(ctry_num, site_num) %>% 
    pull(ctry_num)
  
  X <- model.matrix(
    ~ CAssignment + AAssignment + agegte60 + inelgc3,
    data = dat,
    contrast = list(
      AAssignment = ctr,
      CAssignment = ctr
    )
  )[, -1]
  nCXassign <- sum(grepl("CAssignment", colnames(X)))
  nAXassign <- sum(grepl("AAssignment", colnames(X)))
  attr(X, "contrasts")$CAssignment = contr.orthonorm(nCXassign + 1)
  attr(X, "contrasts")$AAssignment = contr.orthonorm(nAXassign + 1)
  nXassign <- sum(grepl("Assignment", colnames(X)))
  y_raw <- ordered(dat$out_dafh)
  y_mod <- as.integer(y_raw)
  N <- dim(X)[1]
  K <- dim(X)[2]
  unique_y <- length(unique(y_mod))
  list(N = N, K = K, J = unique_y, X = X, y = y_mod, y_raw = y_raw,
       M_region = M_region, region = region,
       M_site = M_site, site = site,
       M_epoch = M_epoch, epoch = epoch,
       region_by_site = region_by_site,
       p_par = p_mult * rep(1 / unique_y, unique_y),
       beta_sd = c(rep(1, nXassign), 2.5, 10))  
}

make_reduced_model_data <- function(dat, ctr = contr.orthonorm) {
  X <- model.matrix(
    ~ CAssignment + AAssignment + agegte60 + inelgc3 + ctry,
    data = dat,
    contrast = list(
      AAssignment = ctr,
      CAssignment = ctr
    )
  )[, -1]
  nCXassign <- sum(grepl("CAssignment", colnames(X)))
  nAXassign <- sum(grepl("AAssignment", colnames(X)))
  attr(X, "contrasts")$CAssignment = contr.orthonorm(nCXassign + 1)
  attr(X, "contrasts")$AAssignment = contr.orthonorm(nAXassign + 1)
  nXassign <- sum(grepl("Assignment", colnames(X)))
  y_raw <- ordered(dat$out_dafh)
  y_mod <- as.integer(y_raw)
  N <- dim(X)[1]
  K <- dim(X)[2]
  unique_y <- length(unique(y_mod))
  list(N = N, K = K, J = unique_y, X = X, y = y_mod, y_raw = y_raw,
       p_par = 2 * rep(1 / unique_y, unique_y),
       beta_sd = c(rep(1, nXassign), 2.5, 10, rep(1, 2)))
}

add_treatment_rvs <- function(rvs, mdat) {
  
  Ca <- attr(mdat$X, "contrasts")$AAssignment
  Cc <- attr(mdat$X, "contrasts")$CAssignment
  nC <- ncol(Cc)
  Ct <-  contr.treatment(nC + 1)
  
  rvs$beta_uncon <- as.vector(Cc %**% rvs$beta[1:nC])
  rvs$beta_trt <- as.vector(
    transform_coding(Cc, Ct) %**% rvs$beta[1:nC])
  rvs$OR <- setNames(exp(rvs$beta_trt), c("C2 vs C1", "C3 vs C1", "C4 vs C1"))
  rvs$OR <- c(rvs$OR, "C2 vs C4" = rvs$OR[1] / rvs$OR[3])
  return(rvs)
}
```


# Outcome Derivation

The outcome is calculated for a patient as:

- missing, if day 28 mortality is unknown (`D28_PatientStatus`) or if the patient was known to have been alive
  at day 28 but number of days in hospital (`D28_OutcomeTotalDaysHospitalised`) is unknown
- 0 if they died by day 28 (`D28_PatientStatus`)
- 28 - min(28, `D28_OutcomeTotalDaysHospitalised`) otherwise

# Descriptive Analyses

## Overall

As a cross check, @fig-dis-day-vs-days-hospitalised plots the number of days hospitalised (as reported in `D28_OutcomeTotalDaysHospitalised`) against the day of discharge from the index admission.

```{r}
#| label: fig-dis-day-vs-days-hospitalised
#| fig-cap: |
#|   Number of days hospitalised against day of discharge from index admission.
#| fig-height: 4
pdat <- fas_itt_dat %>%
  dplyr::count(D28_day = pmin(28, D28_OutcomeTotalDaysHospitalised), DIS_day = pmin(28, DIS_day))
ggplot(pdat, aes(D28_day, DIS_day)) +
  geom_point(aes(size = n), shape = 21) +
  geom_abline() +
  scale_x_continuous("Number of days hospitalised (D28_OutcomeTotalDaysHospitalised)",
                     breaks = seq(0, 30, 2)) +
  scale_y_continuous("Day of discharge from index admission",
                     breaks = seq(0, 30, 2)) +
  labs(size = "Count")
pdat
```

The overall distribution of days alive and free of hospital (DAFH) are reported in @fig-dafh-dist for all participants in the ACS-ITT set.

```{r}
#| label: fig-dafh-dist
#| fig-cap: |
#|   Distribution of days alive and free of hospital.
#| fig-subcap: ACS-ITT
#| fig-height: 4
pdat <- acs_itt_dat %>%
  dplyr::count(dafh = addNA(ordered(out_dafh, levels = 0:27)), .drop = F) %>%
  mutate(p = n / sum(n))
ggplot(pdat, aes(dafh, p)) +
  geom_col() +
  labs(
    x = "Days alive and free of hospital", 
    y = "Proportion"
  )
```

```{r}
tdat <- acs_itt_dat %>%
  group_by(CAssignment = factor(CAssignment, labels = intervention_labels2()$CAssignment[-1])) %>%
  summarise(
    Patients = n(),
    Known = sum(!is.na(out_dafh)),
    Deaths = sprintf("%i (%.0f%%)", sum(D28_death, na.rm = TRUE), 100 * mean(D28_death, na.rm = TRUE)),
    `DAFH, Median (Q1, Q3)` = sprintf(
      "%.0f (%.0f, %.0f)", 
      median(out_dafh, na.rm = T), 
      quantile(out_dafh, 0.25, na.rm = TRUE), 
      quantile(out_dafh, 0.75, na.rm = TRUE))
  ) %>%
  bind_rows(
    acs_itt_dat %>%
  group_by(CAssignment = "Overall") %>%
  summarise(
    Patients = n(),
    Known = sum(!is.na(out_dafh)),
    Deaths = sprintf("%i (%.0f%%)", sum(D28_death, na.rm = TRUE), 100 * mean(D28_death, na.rm = TRUE)),
    `DAFH, Median (Q1, Q3)` = sprintf(
      "%.0f (%.0f, %.0f)", 
      median(out_dafh, na.rm = T), 
      quantile(out_dafh, 0.25, na.rm = TRUE), 
      quantile(out_dafh, 0.75, na.rm = TRUE))
  )
  ) %>%
  rename(`Anticoagulation\nintervention` = CAssignment)
tab <- kable(
  tdat,
  format = "latex",
  align = "lrrrr",
  booktabs = TRUE,
  linesep = ""
) %>%
  kable_styling(
    font_size = 9,
    latex_options = "HOLD_position"
  ) %>%
  row_spec(5, bold = T)
save_tex_table(tab, file.path("outcomes", "secondary", "7-4-anticoagulation-summary"))
```



## Age

```{r}
#| label: fig-dafh-dist-age
#| fig-cap: |
#|   Distribution of days alive and free of hospital by age group
#| fig-height: 4
pdat <- acs_itt_nona_dat %>%
  dplyr::count(
    agegrp = cut(AgeAtEntry, c(18, seq(25, 75, 5), 100), include.lowest = T, right = F),
    dafh = fct_rev(ordered(out_dafh, levels = 0:27)), 
    .drop = F) %>%
  group_by(agegrp) %>%
  mutate(p = n / sum(n))
pdat2 <- pdat %>%
  group_by(agegrp) %>%
  summarise(n = sum(n))

p1 <- ggplot(pdat2, aes(agegrp, n)) +
  geom_col(colour = "grey40", fill = "grey40") +
  geom_vline(xintercept = 60, linetype = 2) +
  labs(y = "Number of\nparticipants",
       x = "Age at entry") +
  geom_vline(xintercept = 8.5, linetype = 2) +
  theme(axis.text.x = element_text(hjust = 1, angle = 45))

p2 <- ggplot(pdat, aes(agegrp, p)) +
  geom_col(aes(fill = dafh)) +
  labs(x = "Age", y = "Cumulative\nproportion") +
  scale_fill_viridis_d("DAFH", option = "A", direction = -1) +
  guides(fill = guide_legend(reverse = TRUE)) +
  geom_vline(xintercept = 8.5, linetype = 2) +
  theme(axis.text.x = element_text(hjust = 1, angle = 45)) +
  theme(legend.key.size = unit(0.25, "lines"))
p <- p1 | p2
```

```{r}
path <- file.path("outputs", "figures", "outcomes", "secondary")
ggsave(file.path(path, "7-4-age.pdf"), p, height = 2.5, width = 6)
```

## Country

```{r}
#| label: fig-dafh-dist-country
#| fig-cap: |
#|   Distribution of days alive and free of hospital by country.
#| fig-height: 4
pdat <- acs_itt_nona_dat %>%
  dplyr::count(
    country,
    dafh = ordered(out_dafh, levels = 0:27), 
    .drop = F) %>%
  group_by(country) %>%
  mutate(p = n / sum(n)) %>%
  mutate(cp = cumsum(p)) %>%
  ungroup()
pdat2 <- pdat %>%
  group_by(country) %>%
  summarise(n = sum(n))

p1 <- ggplot(pdat2, aes(country, n)) +
  geom_col() +
    labs(
      y = "Number of\nparticipants", 
      x = "Country of enrolment")

p2 <- ggplot(pdat, aes(country, p)) +
  geom_col(aes(fill = fct_rev(dafh))) +
  labs(x = "Anticoagulation intervention", y = "Cumulative\nproportion") +
  scale_fill_viridis_d("DAFH", option = "A", direction = -1) +
  guides(fill = guide_legend(reverse = TRUE)) +
  theme(legend.key.size = unit(0.25, "lines"))
p <- p1 | p2
```

```{r}
path <- file.path("outputs", "figures", "outcomes", "secondary")
ggsave(file.path(path, "7-4-country.pdf"), p, height = 2.5, width = 6)
```

## Site

```{r}
#| label: fig-dafh-dist-site
#| fig-cap: |
#|   Distribution of days alive and free of hospital by study site
#| fig-height: 4
pdat <- all_dat %>%
  filter_acs_itt() %>%
  filter(!is.na(out_dafh)) %>%
  dplyr::count(
    Country = factor(PT_CountryName, levels = c("India", "Australia", "Nepal", "New Zealand"),
                     labels = c("India", "Australia", "Nepal", "New\nZealand")),
    Site = fct_infreq(Location),
    dafh = ordered(out_dafh, levels = 0:27)) %>%
  complete(dafh = ordered(0:27), nesting(Country, Site), fill = list(n = 0)) %>%
  group_by(Country, Site) %>%
  mutate(p = n / sum(n)) %>%
  mutate(cp = cumsum(p)) %>%
  ungroup() %>%
  mutate(
    Country = droplevels(Country),
    Site = droplevels(Site)
  )
pdat2 <- pdat %>%
  group_by(Country, Site) %>%
  summarise(n = sum(n)) %>%
  ungroup()

p1 <- ggplot(pdat2, aes(Site, n)) +
  facet_grid( ~ Country, scales = "free_x", space = "free_x") +
  geom_col() +
    labs(
      y = "Number of\nparticipants", 
      x = "") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1),
        panel.border = element_rect(fill = NA))

p2 <- ggplot(pdat, aes(Site, p)) +
  facet_grid( ~ Country, scales = "free_x", space = "free_x") +
  geom_col(aes(fill = fct_rev(dafh))) +
  labs(x = "Anticoagulation intervention", y = "Cumulative\nproportion") +
  scale_fill_viridis_d("DAFH", option = "A", direction = -1) +
  guides(fill = guide_legend(reverse = TRUE, ncol = 1)) +
  theme(axis.text.x = element_text(hjust = 1, angle = 45)) +
  theme(legend.key.size = unit(0.25, "lines"))

p <- p1 / p2 +
  plot_layout(guides = 'collect')
```

```{r}
path <- file.path("outputs", "figures", "outcomes", "secondary")
ggsave(file.path(path, "7-4-country-site.pdf"), p, height = 4, width = 6.25)
```

## Calendar Time

```{r}
#| label: fig-dafh-dist-calendar
#| fig-cap: |
#|   Distribution of days alive and free of hospital by calendar time.
#| fig-height: 4
pdat <- acs_itt_nona_dat %>%
  dplyr::count(
    yr = year(RandDate), mth = month(RandDate),
    dafh = ordered(out_dafh, levels = 0:27), 
    .drop = F) %>%
  group_by(yr, mth) %>%
  mutate(p = n / sum(n)) %>%
  mutate(cp = cumsum(p)) %>%
  ungroup()
p1 <- pdat %>%
  group_by(yr, mth) %>%
  summarise(n = sum(n)) %>%
  ggplot(., aes(mth, n))  +
  facet_grid( ~ yr, drop = T, scales = "free_x", space = "free") +
    geom_col() +
    labs(
      y = "Number of\nparticipants", 
      x = "Calendar date (month of year)") +
  scale_x_continuous(breaks = 1:12)
p2 <- ggplot(pdat, aes(mth, p)) +
  facet_grid( ~ yr, drop = T, scales = "free_x", space = "free") +
  geom_col(aes(fill = fct_rev(dafh))) +
  labs(x = "Calendar date (month of year)", y = "Cumulative\nproportion") +
  scale_fill_viridis_d("DAFH", option = "A", direction = -1) +
  guides(fill = guide_legend(reverse = TRUE)) +
  theme(legend.key.size = unit(0.25, "lines")) +
  scale_x_continuous(breaks = 1:12)
p <- p1 | p2
p
```

```{r}
path <- file.path("outputs", "figures", "outcomes", "secondary")
ggsave(file.path(path, "7-4-calendar-time.pdf"), p, height = 2, width = 6)
```

## Anti-coagulation

```{r}
#| label: fig-dafh-dist-anticoagulation
#| fig-cap: |
#|   Distribution of days alive and free of hospital by anti-coagulation intervention.
#| fig-height: 4
pdat <- acs_itt_nona_dat %>%
  dplyr::count(
    CAssignment = factor(CAssignment, labels = str_replace(intervention_labels()$CAssignment[-1], "<br>", "\n")),
    dafh = ordered(out_dafh, levels = 0:27), 
    .drop = F) %>%
  group_by(CAssignment) %>%
  mutate(p = n / sum(n)) %>%
  mutate(cp = cumsum(p)) %>%
  ungroup()
p <- ggplot(pdat, aes(CAssignment, p)) +
  geom_col(aes(fill = fct_rev(dafh))) +
  labs(x = "Anticoagulation intervention", y = "Cumulative proportion") +
  scale_fill_viridis_d("Days alive and\nfree of hospital", option = "A", direction = -1) +
  guides(fill = guide_legend(reverse = TRUE)) +
  theme(legend.key.size = unit(0.75, "lines"))
p
```

```{r}
pth <- file.path("outputs", "figures", "outcomes", "secondary")
ggsave(file.path(pth, "outcome-7-4-descriptive.pdf"), p, height = 3, width = 6)
```


```{r}
#| label: fig-dafh-dist-anticoagulation2
#| fig-cap: |
#|   Cumulative distribution of days alive and free of hospital by anti-coagulation intervention.
#| fig-height: 4
p <- ggplot(pdat, aes(dafh, cp)) +
  geom_step(aes(colour = CAssignment, group = CAssignment)) +
  labs(x = "Days alive and free of ventilation", y = "Cumulative proportion") +
  scale_colour_viridis_d(
    "Days alive and\nfree of hospital", option = "A", begin = 0, end = 0.8) +
  guides(fill = guide_legend(reverse = TRUE))
p
```

```{r}
pth <- file.path("outputs", "figures", "outcomes", "secondary")
ggsave(file.path(pth, "outcome-7-4-descriptive2.pdf"), p, height = 3, width = 6)
```


## Sample Cumulative Logits

Some evidence of a shift from proportional odds at higher values of DAFH.

```{r}
trt_counts <- acs_itt_nona_dat %>%
  dplyr::count(CAssignment, out_dafh) %>%
  complete(CAssignment, out_dafh, fill = list(n = 0)) %>%
  group_by(CAssignment) %>%
  mutate(p = n / sum(n))
trt_logit <- trt_counts %>% 
  group_by(CAssignment) %>% 
  mutate(clogit = logit(cumsum(p))) %>%
  group_by(out_dafh) %>%
  mutate(rel_clogit = clogit - mean(clogit)) %>%
  filter(out_dafh != 27)

ggplot(trt_logit, aes(CAssignment, rel_clogit)) +
  facet_wrap( ~ out_dafh) +
  geom_point() +
  labs(y = "Relative (to mean) sample cumulative logit")

ggplot(trt_logit, aes(out_dafh, rel_clogit)) +
  facet_wrap( ~ CAssignment) +
  geom_point() +
  labs(y = "Relative (to mean) sample cumulative logit")
```

# Modelling

## ACS-ITT

### Reduced Model (No site or epoch terms)

```{r}
#| label: fit-reduced-model
fit_reduced_model <- function(dat) {
  mdat0 <- make_reduced_model_data(acs_itt_nona_dat)
  snk <- capture.output(mfit0 <- ordmod0$sample(
    data = mdat0,
    seed = 733358,
    chains = 4,
    parallel_chains = 4,
    iter_sampling = 1000,
    refresh = 0
  ))
  mdrws0 <- as_draws_rvars(mfit0$draws())
  mdrws0 <- add_treatment_rvs(mdrws0, mdat0)
  
  # Prepare odds ratios for use in summary table
  mdrws0$OR <- c(mdrws0$OR, 
                 setNames(exp(mdrws0$beta[c(6, 8:9)]), 
                          c("Age 60+", "AU/NZ v IN", "NP v IN")))
  
  # Prepare outcome probability for comparison with observed proportions
  
  return(list(dat = mdat0, fit = mfit0, drws = mdrws0))
}
res <- fit_reduced_model(acs_itt_nona_dat)
```


```{r}
#| label: posterior-summary-table-reduced
#| tbl-cap: Posterior summaries for model parameters.
odds_ratio_summary_table(res$drws$OR)
```

```{r}
# Treatment specific level probabilities
p_C1 <- ordered_logit(res$drws$alpha - res$drws$beta_uncon[1])
p_C2 <- ordered_logit(res$drws$alpha - res$drws$beta_uncon[2])
p_C3 <- ordered_logit(res$drws$alpha - res$drws$beta_uncon[3])
p_C4 <- ordered_logit(res$drws$alpha - res$drws$beta_uncon[4])
p_df <- expand_grid(
  CAssignment = c("C1", "C2", "C3", "C4"),
  out_dafh = sort(unique(res$dat$y_raw))
) %>%
  mutate(
    p = c(p_C1, p_C2, p_C3, p_C4),
    med = median(p),
    lo = quantile(p, prob = 0.025)[1, ],
    hi = quantile(p, prob = 0.975)[1, ]
  )
```

```{r}
#| label: fig-model-simple-versus-observed
#| code-summary: Compare model level probabilities to observed
#| fig-cap: |
#|   Posterior probability of outcome levels by treatment group
#|   compared to observed proportions.
obs <- acs_itt_nona_dat %>%
  dplyr::count(CAssignment, out_dafh = ordered(out_dafh)) %>%
  complete(CAssignment, out_dafh, fill = list(n = 0)) %>%
  group_by(CAssignment) %>%
  mutate(p = n / sum(n))

ggplot(p_df, aes(out_dafh, med)) +
  facet_wrap( ~ CAssignment) +
  geom_pointrange(aes(ymin = lo, ymax = hi), fatten = 1, colour = "red") +
  geom_point(data = obs, aes(out_dafh, p), shape = 10) +
  labs(
    x = "WHO outcome scale",
    y = "Probability of outcome"
  )
```

### Primary Model

```{r}
#| label: fit-model-primary
fit_primary_model <- function(dat, ctr = contr.orthonorm) {
  mdat <- make_model_data(dat, ctr)
  snk <- capture.output(mfit <- ordmod$sample(
    data = mdat,
    seed = 813508,
    chains = 8,
    parallel_chains = 8,
    iter_warmup = 1000,
    iter_sampling = 2500,
    refresh = 0,
    adapt_delta = 0.98
  ))
  mdrws <- as_draws_rvars(mfit$draws())
  
  # Add names
  epoch_map <- dat %>% dplyr::count(epoch, epoch_lab)
  site_map <- dat %>% dplyr::count(site_num, site)
  names(mdrws$beta) <- colnames(mdat$X)
  names(mdrws$gamma_epoch) <- epoch_map$epoch_lab
  names(mdrws$gamma_site) <- site_map$site
  
  mdrws <- add_treatment_rvs(mdrws, mdat)

  mdrws$OR <- c(
    mdrws$OR, 
    "Age 60+" = exp(mdrws$beta[which(grepl("age", colnames(mdat$X)))]),
    "Ineligible aspirin" = exp(mdrws$beta[which(grepl("inelg", colnames(mdat$X)))]),
    setNames(exp(mdrws$beta_region[-1]), c("AU/NZ", "NP")),
    exp(mdrws$gamma_epoch),
    exp(mdrws$gamma_site)
  )
  return(list(dat = mdat, fit = mfit, drws = mdrws))
}

res <- fit_primary_model(acs_itt_nona_dat)
```

```{r}
#| label: posterior-summary-table-primary
#| tbl-cap: Posterior summaries for model parameters.
odds_ratio_summary_table_rev(res$drws$OR)
```

```{r}
#| label: odds-ratio-summary-table-primary-model-save
save_tex_table(
  odds_ratio_summary_table_rev(res$drws$OR[1:9], "latex"),
  "outcomes/secondary/7-4-primary-model-acs-itt-summary-table")
```


```{r}
#| label: odds-ratio-summary-primary-model-epoch-site-terms
rvs_epoch <- exp(res$drws$gamma_epoch)
rvs_site <- exp(res$drws$gamma_site)

orsdat <- tibble(
  Group = "Epoch",
  Parameter = fct_inorder(names(rvs_epoch)),
  posterior = rvs_epoch
)
p_epoch <- ggplot(orsdat, aes(xdist = posterior, y = Parameter)) +
  stat_pointinterval(.width = c(0.75, 0.95), fatten_point = 1.5) +
  geom_vline(xintercept = 1, linetype = 2) +
  scale_x_log10("Odds ratio (log scale)") +
  labs(y = "Epoch")

orsdat <- tibble(
  Group = "Site",
  Country = factor(res$dat$region_by_site, labels = c("India", "Australia\nNew Zealand", "Nepal")),
  Parameter = fct_inorder(names(rvs_site)),
  posterior = rvs_site
)
p_site <- ggplot(orsdat, aes(xdist = posterior, y = Parameter)) +
  facet_grid(Country ~ ., scales = "free_y", space = "free_y") +
  stat_pointinterval(.width = c(0.75, 0.95), fatten_point = 1.5) +
  geom_vline(xintercept = 1, linetype = 2) +
  scale_x_log10("Odds ratio (log scale)") +
  labs(y = "Site") +
  theme(panel.border = element_rect(fill = NA))

p <- p_epoch | p_site
p
```

```{r}
pth <- file.path("outputs", "figures", "outcomes", "secondary", "7-4-primary-model-epoch-site-terms.pdf")
ggsave(pth, p, width = 6, height = 4.5)
```


```{r}
# Using India and age < 60 as reference.
alpha <- res$drws$alpha
eta <- as.vector(contr.orthonorm(4) %**% res$drws$beta[1:3])
p1 <- ordered_logit(alpha - eta[1])
p2 <- ordered_logit(alpha - eta[2])
p3 <- ordered_logit(alpha - eta[3])
p4 <- ordered_logit(alpha - eta[4])

pdat <- expand_grid(
  CAssignment = fct_inorder(c("Standard", "Intermediate", "Standard plus aspirin", "Therapeutic")),
  DAFH = sort(unique(res$dat$y_raw))
)
pdat$posterior <- c(p1, p2, p3, p4)
pdat$mean = mean(pdat$posterior)

ggplot(pdat, aes(CAssignment, y = mean, fill = fct_rev(DAFH))) + 
  geom_col() + 
  scale_fill_viridis_d("Days alive and\nfree of hospital", option = "A", direction = -1) + 
  guides(fill = guide_legend(reverse = T))
```

```{r}
y_raw <- as.integer(levels(res$dat$y_raw))
y_ppc <- res$drws$y_ppc
y_ppc_raw <- rfun(\(x) y_raw[x])(y_ppc)
ppc_dat <- bind_cols(acs_itt_nona_dat, tibble(y_ppc = y_ppc_raw)) %>%
  select(
    StudyPatientID,
    AAssignment,
    CAssignment, 
    AgeAtEntry,
    inelgc3,
    ctry, 
    site, 
    epoch,
    out_dafh,
    y_ppc) 

ppc_C <- ppc_dat %>%
  group_by(grp = CAssignment) %>%
  summarise(
    n(),
    mean_y = mean(out_dafh),
    median_y = median(out_dafh),
    pr0_y = mean(out_dafh == 0),
    pr27_y = mean(out_dafh == 27),
    mean_ypp = rvar_mean(y_ppc),
    median_ypp = rvar_median(y_ppc),
    pr0_ypp = rvar_mean(y_ppc == 0),
    pr27_ypp = rvar_mean(y_ppc == 27),
  )
ppc_ctry <- ppc_dat %>%
  group_by(grp = ctry) %>%
  summarise(
    mean_y = mean(out_dafh),
    median_y = median(out_dafh),
    pr0_y = mean(out_dafh == 0),
    pr27_y = mean(out_dafh == 27),
    mean_ypp = rvar_mean(y_ppc),
    median_ypp = rvar_median(y_ppc),
    pr0_ypp = rvar_mean(y_ppc == 0),
    pr27_ypp = rvar_mean(y_ppc == 27),
  )

plot_grp_ppc <- function(dat, lab = "") {
  dat %>%
    ggplot(aes(y = grp, xdist = rvar_mean_y_ppc)) +
    stat_ccdfinterval(
      normalize = "groups", 
      slab_colour = "grey50",
      slab_size = 1,
      slab_fill = NA) +
    geom_segment(aes(x = mean_y, 
                     xend = mean_y,
                     y = 1:nrow(dat)-0.5,
                     yend = 2:(nrow(dat)+1)-0.5)) +
    labs(
      x = "Average predicted y", 
      y = lab)  
}
```


#### Prior Sensitivity

The model is re-fit with priors specified on the treatment contrasts rather than the othornormal contrasts.

```{r}
#| label: fit-model-primary-prior-sens
res <- fit_primary_model(acs_itt_nona_dat, contr.treatment)
```

```{r}
#| label: posterior-summary-table-primary-prior-sens
#| tbl-cap: Posterior summaries for model parameters.
odds_ratio_summary_table_rev(res$drws$OR)
```

```{r}
#| label: odds-ratio-summary-primary-model-epoch-site-terms-prior-sens
rvs_epoch <- exp(res$drws$gamma_epoch)
rvs_site <- exp(res$drws$gamma_site)

orsdat <- tibble(
  Group = "Epoch",
  Parameter = fct_inorder(names(rvs_epoch)),
  posterior = rvs_epoch
)
p_epoch <- ggplot(orsdat, aes(xdist = posterior, y = Parameter)) +
  stat_pointinterval(.width = c(0.75, 0.95), fatten_point = 1.5) +
  geom_vline(xintercept = 1, linetype = 2) +
  scale_x_log10("Odds ratio (log scale)") +
  labs(y = "Epoch")

orsdat <- tibble(
  Group = "Site",
  Country = factor(res$dat$region_by_site, labels = c("India", "Australia\nNew Zealand", "Nepal")),
  Parameter = fct_inorder(names(rvs_site)),
  posterior = rvs_site
)
p_site <- ggplot(orsdat, aes(xdist = posterior, y = Parameter)) +
  facet_grid(Country ~ ., scales = "free_y", space = "free_y") +
  stat_pointinterval(.width = c(0.75, 0.95), fatten_point = 1.5) +
  geom_vline(xintercept = 1, linetype = 2) +
  scale_x_log10("Odds ratio (log scale)") +
  labs(y = "Site") +
  theme(panel.border = element_rect(fill = NA))

p <- p_epoch | p_site
p
```
