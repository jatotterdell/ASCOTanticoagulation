---
title: "7-4 Days alive and free of hospital by day 28"
description: |
  This outcome was defined as the number of days alive and free of hospital 
  from randomisation to 28 days, calculated as 28 minus the number of days 
  spent in hospital.  All patients dying within 28 days will be assigned zero 
  free days.
author:
  - name: James Totterdell
    affiliation: University of Sydney
  - name: Rob Mahar
    affiliation: University of Melbourne
date: last-modified
---

# Preamble

```{r}
#| label: pkgs
#| code-summary: Load packages
library(tidyverse)
library(labelled)
library(kableExtra)
library(cmdstanr)
library(posterior)
library(bayestestR)
library(bayesplot)
library(matrixStats)
library(plotly)
library(lubridate)
library(ggdist)
library(patchwork)

theme_set(theme_classic(base_size = 10, base_family = "Palatino") +
  theme(panel.grid = element_blank(),
        strip.background = element_blank()))
bayesplot_theme_set(theme_set(theme_classic(base_size = 10, base_family = "Palatino") +
  theme(panel.grid = element_blank(),
        strip.background = element_blank())))

color_scheme_set("red")
options(digits = 4)
```

```{r}
#| label: data
#| code-summary: Prepare dataset
devtools::load_all()
all_dat <- read_all_no_daily()

acs_itt_dat <- all_dat %>% 
  filter_acs_itt() %>%
  transmute_model_cols_grp_aus_nz() %>%
  left_join(
    all_dat %>% 
      select(
        StudyPatientID, 
        D28_death, 
        D28_OutcomeTotalDaysHospitalised,
        DIS_day, 
        out_dafh),
    by = "StudyPatientID")
acs_itt_nona_dat <- acs_itt_dat %>% 
  filter(!is.na(out_dafh))

# Concurrent enrolments for C2
acs_itt_concurc2_dat <- acs_itt_dat %>%
  filter_concurrent_intermediate()
acs_itt_concurc2_nona_dat <- acs_itt_concurc2_dat %>% 
  filter(!is.na(out_dafh))

# Concurrent enrolments for C3
acs_itt_concurc3_dat <- acs_itt_dat %>%
  filter_concurrent_std_aspirin()
acs_itt_concurc3_nona_dat <- acs_itt_concurc3_dat %>% 
  filter(!is.na(out_dafh))

# Concurrent enrolments for C4
acs_itt_concurc4_dat <- acs_itt_dat %>%
  filter_concurrent_therapeutic()
acs_itt_concurc4_nona_dat <- acs_itt_concurc4_dat %>% 
  filter(!is.na(out_dafh))
```

```{r}
#| label: models
#| code-summary: Load models
ordmod0 <- cmdstan_model("stan/logistic_cumulative_ordinal.stan") # No epoch or site
ordmod_epoch <- cmdstan_model("stan/logistic_cumulative_epoch.stan") # Epoch only
ordmod <- cmdstan_model("stan/logistic_cumulative_epoch_site.stan") # Full model
```

```{r}
#| label: helper-functions
#| code-summary: Functions

make_summary_table <- function(dat, format = "html") {
  tdat <- dat %>%
  group_by(CAssignment = factor(CAssignment, 
                                levels = c("C1", "C2", "C3", "C4"),
                                labels = intervention_labels2()$CAssignment[-1])) %>%
  summarise(
    Patients = n(),
    Known = sum(!is.na(out_dafh)),
    Deaths = sprintf("%i (%.0f%%)", sum(D28_death, na.rm = TRUE), 100 * mean(D28_death, na.rm = TRUE)),
    `DAFH, Median (Q1, Q3)` = sprintf(
      "%.0f (%.0f, %.0f)", 
      median(out_dafh, na.rm = T), 
      quantile(out_dafh, 0.25, na.rm = TRUE), 
      quantile(out_dafh, 0.75, na.rm = TRUE))
  ) %>%
  bind_rows(
    dat %>%
  group_by(CAssignment = "Overall") %>%
  summarise(
    Patients = n(),
    Known = sum(!is.na(out_dafh)),
    Deaths = sprintf("%i (%.0f%%)", sum(D28_death, na.rm = TRUE), 100 * mean(D28_death, na.rm = TRUE)),
    `DAFH, Median (Q1, Q3)` = sprintf(
      "%.0f (%.0f, %.0f)", 
      median(out_dafh, na.rm = T), 
      quantile(out_dafh, 0.25, na.rm = TRUE), 
      quantile(out_dafh, 0.75, na.rm = TRUE))
  )
  ) %>%
  rename(`Anticoagulation\nintervention` = CAssignment)
  kable(
    tdat,
    format = format,
    align = "lrrrr",
    booktabs = TRUE,
    linesep = ""
  ) %>%
    kable_styling(
      font_size = 9,
      latex_options = "HOLD_position"
    ) %>%
    row_spec(nrow(tdat), bold = T)
}

# Code the design matrix such that
# reference group are participants who
# were not randomised to an antiviral,
# and treatment contrasts are orthonormal
# within domains
make_primary_model_data <- function(
    dat, 
    vars = NULL,
    beta_sd_var = NULL,
    p_mult = 2) {
  
  # In ACS all randomised to C
  XC <- model.matrix(
  ~ randC,
  model.frame(~ randC, dat, na.action = na.pass),
  contrasts = list(randC = contr.orthonorm))
  attC <- attr(XC, "contrasts")$randC
  XC <- XC[, -1]
  
  # Some not randomised to A
  XA <- model.matrix(
  ~ randA,
  model.frame(~ randA, dat, na.action = na.pass),
  contrasts = list(randA = contr.orthonorm))
  # If not randomised to A then 0 for all terms
  XA[is.na(XA[, 2]), ] <- 0
  colnames(XA)[1] <- "randA"
  attA <- attr(XA, "contrasts")$randA
  
  if (!is.null(vars)) {
    Xother <- model.matrix(
     as.formula(paste(" ~ ", paste(vars, collapse = " + "))),
     data = dat
    ) [, -1]
  } else {
    Xother <- NULL
  }
  
  X <- cbind(XC, XA, Xother)
  attr(X, "contrasts")$randC <- attC
  attr(X, "contrasts")$randA <- attA
  nXtrt <- ncol(XC) + ncol(XA)
  
  beta_sd <- c(rep(1, nXtrt), beta_sd_var)
  
  epoch <- dat$epoch
  M_epoch <- max(dat$epoch)
  region <- dat$ctry_num
  M_region <- max(region)
  site <- dat$site_num
  M_site <- max(site)
  region_by_site <- dat %>% 
    dplyr::count(ctry_num, site_num) %>% 
    pull(ctry_num)

  y_raw <- ordered(dat$out_dafh)
  y_mod <- as.integer(y_raw)
  N <- dim(X)[1]
  K <- dim(X)[2]
  unique_y <- length(unique(y_mod))
  list(N = N, K = K, J = unique_y, X = X, y = y_mod, y_raw = y_raw,
       M_region = M_region,
       M_site = M_site, site = site,
       M_epoch = M_epoch, epoch = epoch,
       region_by_site = region_by_site,
       p_par = p_mult * rep(1 / unique_y, unique_y),
       beta_sd = beta_sd)  
}

make_reduced_model_data <- function(dat, ctr = contr.orthonorm) {
  X <- model.matrix(
    ~ CAssignment + AAssignment + agegte60 + inelgc3 + ctry,
    data = dat,
    contrast = list(
      AAssignment = ctr,
      CAssignment = ctr
    )
  )[, -1]
  nCXassign <- sum(grepl("CAssignment", colnames(X)))
  nAXassign <- sum(grepl("AAssignment", colnames(X)))
  attr(X, "contrasts")$CAssignment = contr.orthonorm(nCXassign + 1)
  attr(X, "contrasts")$AAssignment = contr.orthonorm(nAXassign + 1)
  nXassign <- sum(grepl("Assignment", colnames(X)))
  y_raw <- ordered(dat$out_dafh)
  y_mod <- as.integer(y_raw)
  N <- dim(X)[1]
  K <- dim(X)[2]
  unique_y <- length(unique(y_mod))
  list(N = N, K = K, J = unique_y, X = X, y = y_mod, y_raw = y_raw,
       p_par = 2 * rep(1 / unique_y, unique_y),
       beta_sd = c(rep(1, nXassign), 2.5, 10, rep(1, 2)))
}
```

# Outcome Derivation

The outcome is calculated for a patient as:

-   missing, if day 28 mortality is unknown (`D28_PatientStatus`) or if the patient was known to have been alive at day 28 but number of days in hospital (`D28_OutcomeTotalDaysHospitalised`) is unknown
-   0 if they died by day 28 (`D28_PatientStatus`)
-   28 - min(28, `D28_OutcomeTotalDaysHospitalised`) otherwise

# Descriptive Analyses

## Overall

As a cross check, @fig-dis-day-vs-days-hospitalised plots the number of days hospitalised (as reported in `D28_OutcomeTotalDaysHospitalised`) against the day of discharge from the index admission.

```{r}
#| label: fig-dis-day-vs-days-hospitalised
#| code-summary: Compare D28_OutcomeTotalDaysHospitalised to days hospitalised per dischage date.
#| fig-cap: |
#|   Number of days hospitalised against day of discharge from index admission.
#| fig-height: 4
pdat <- acs_itt_dat %>%
  dplyr::count(D28_day = pmin(28, D28_OutcomeTotalDaysHospitalised), DIS_day = pmin(28, DIS_day))
ggplot(pdat, aes(D28_day, DIS_day)) +
  geom_point(aes(size = n), shape = 21) +
  geom_abline() +
  scale_x_continuous("Number of days hospitalised (D28_OutcomeTotalDaysHospitalised)",
                     breaks = seq(0, 30, 2)) +
  scale_y_continuous("Day of discharge from index admission",
                     breaks = seq(0, 30, 2)) +
  labs(size = "Count")
```

The overall distribution of days alive and free of hospital (DAFH) are reported in @fig-dafh-dist for all participants in the ACS-ITT set.

```{r}
#| label: fig-dafh-dist
#| code-summary: Overall distribution of DAFH
#| fig-cap: |
#|   Distribution of days alive and free of hospital.
#| fig-subcap: ACS-ITT
#| fig-height: 4
pdat <- acs_itt_nona_dat %>%
  dplyr::count(dafh = ordered(out_dafh, levels = 0:27), .drop = F) %>%
  mutate(p = n / sum(n))
p <- ggplot(pdat, aes(dafh, p)) +
  geom_col() +
  labs(
    x = "Days alive and free of hospital", 
    y = "Proportion"
  )
path <- file.path("outputs", "figures", "outcomes", "secondary")
ggsave(file.path(path, "outcome-7-4-dist-overall.pdf"), p, height = 2.5, width = 6)
p
```

```{r}
#| label: tbl-7-4-summary
#| code-summary: Summary of DAFH outcome by arm
#| tbl-cap: Summary of days alive and free of hospital to day 28 by treatment group.
save_tex_table(
  make_summary_table(acs_itt_dat, "latex"), 
  file.path("outcomes", "secondary", "7-4-anticoagulation-summary"))
make_summary_table(acs_itt_dat)
```

## Age

```{r}
#| label: fig-dafh-dist-age
#| code-summary: DAFH by age
#| fig-cap: |
#|   Distribution of days alive and free of hospital by age group
#| fig-height: 4
pdat <- acs_itt_nona_dat %>%
  dplyr::count(
    agegrp = cut(AgeAtEntry, c(18, seq(25, 75, 5), 100), include.lowest = T, right = F),
    dafh = fct_rev(ordered(out_dafh, levels = 0:27)), 
    .drop = F) %>%
  group_by(agegrp) %>%
  mutate(p = n / sum(n))
pdat2 <- pdat %>%
  group_by(agegrp) %>%
  summarise(n = sum(n))
p1 <- ggplot(pdat2, aes(agegrp, n)) +
  geom_col(colour = "grey40", fill = "grey40") +
  geom_vline(xintercept = 60, linetype = 2) +
  labs(y = "Number of\nparticipants",
       x = "Age at entry") +
  geom_vline(xintercept = 8.5, linetype = 2) +
  theme(axis.text.x = element_text(hjust = 1, angle = 45))
p2 <- ggplot(pdat, aes(agegrp, p)) +
  geom_col(aes(fill = dafh)) +
  labs(x = "Age", y = "Cumulative\nproportion") +
  scale_fill_viridis_d("DAFH", option = "A", direction = -1) +
  guides(fill = guide_legend(reverse = TRUE)) +
  geom_vline(xintercept = 8.5, linetype = 2) +
  theme(axis.text.x = element_text(hjust = 1, angle = 45)) +
  theme(legend.key.size = unit(0.25, "lines"))
p <- p1 | p2
path <- file.path("outputs", "figures", "outcomes", "secondary")
ggsave(file.path(path, "7-4-age.pdf"), p, height = 2.5, width = 6)
p
```

## Country

```{r}
#| label: fig-dafh-dist-country
#| code-summary: DAFH by country
#| fig-cap: |
#|   Distribution of days alive and free of hospital by country.
#| fig-height: 4
pdat <- acs_itt_nona_dat %>%
  dplyr::count(
    country,
    dafh = ordered(out_dafh, levels = 0:27), 
    .drop = F) %>%
  group_by(country) %>%
  mutate(p = n / sum(n)) %>%
  mutate(cp = cumsum(p)) %>%
  ungroup()
pdat2 <- pdat %>%
  group_by(country) %>%
  summarise(n = sum(n))

p1 <- ggplot(pdat2, aes(country, n)) +
  geom_col() +
    labs(
      y = "Number of\nparticipants", 
      x = "Country of enrolment")

p2 <- ggplot(pdat, aes(country, p)) +
  geom_col(aes(fill = fct_rev(dafh))) +
  labs(x = "Anticoagulation intervention", y = "Cumulative\nproportion") +
  scale_fill_viridis_d("DAFH", option = "A", direction = -1) +
  guides(fill = guide_legend(reverse = TRUE)) +
  theme(legend.key.size = unit(0.25, "lines"))
p <- p1 | p2
path <- file.path("outputs", "figures", "outcomes", "secondary")
ggsave(file.path(path, "7-4-country.pdf"), p, height = 2.5, width = 6)
p
```

## Site

```{r}
#| label: fig-dafh-dist-site
#| code-summary: DAFH by site
#| fig-cap: |
#|   Distribution of days alive and free of hospital by study site
#| fig-height: 4
pdat <- all_dat %>%
  filter_acs_itt() %>%
  filter(!is.na(out_dafh)) %>%
  dplyr::count(
    Country = factor(PT_CountryName, levels = c("India", "Australia", "Nepal", "New Zealand"),
                     labels = c("India", "Australia", "Nepal", "New\nZealand")),
    Site = fct_infreq(Location),
    dafh = ordered(out_dafh, levels = 0:27)) %>%
  complete(dafh = ordered(0:27), nesting(Country, Site), fill = list(n = 0)) %>%
  group_by(Country, Site) %>%
  mutate(p = n / sum(n)) %>%
  mutate(cp = cumsum(p)) %>%
  ungroup() %>%
  mutate(
    Country = droplevels(Country),
    Site = droplevels(Site)
  )
pdat2 <- pdat %>%
  group_by(Country, Site) %>%
  summarise(n = sum(n)) %>%
  ungroup()
p1 <- ggplot(pdat2, aes(Site, n)) +
  facet_grid( ~ Country, scales = "free_x", space = "free_x") +
  geom_col() +
    labs(
      y = "Number of\nparticipants", 
      x = "") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1),
        panel.border = element_rect(fill = NA))
p2 <- ggplot(pdat, aes(Site, p)) +
  facet_grid( ~ Country, scales = "free_x", space = "free_x") +
  geom_col(aes(fill = fct_rev(dafh))) +
  labs(x = "Anticoagulation intervention", y = "Cumulative\nproportion") +
  scale_fill_viridis_d("DAFH", option = "A", direction = -1) +
  guides(fill = guide_legend(reverse = TRUE, ncol = 1)) +
  theme(axis.text.x = element_text(hjust = 1, angle = 45)) +
  theme(legend.key.size = unit(0.25, "lines"))
p <- p1 / p2 +
  plot_layout(guides = 'collect')
path <- file.path("outputs", "figures", "outcomes", "secondary")
ggsave(file.path(path, "7-4-country-site.pdf"), p, height = 4, width = 6.25)
p
```

## Calendar Time

```{r}
#| label: fig-dafh-dist-calendar
#| code-summary: DAFH by calendar date
#| fig-cap: |
#|   Distribution of days alive and free of hospital by calendar time.
#| fig-height: 4
pdat <- acs_itt_nona_dat %>%
  dplyr::count(
    yr = year(RandDate), mth = month(RandDate),
    dafh = ordered(out_dafh, levels = 0:27), 
    .drop = F) %>%
  group_by(yr, mth) %>%
  mutate(p = n / sum(n)) %>%
  mutate(cp = cumsum(p)) %>%
  ungroup()
p1 <- pdat %>%
  group_by(yr, mth) %>%
  summarise(n = sum(n)) %>%
  ggplot(., aes(mth, n))  +
  facet_grid( ~ yr, drop = T, scales = "free_x", space = "free") +
    geom_col() +
    labs(
      y = "Number of\nparticipants", 
      x = "Calendar date (month of year)") +
  scale_x_continuous(breaks = 1:12)
p2 <- ggplot(pdat, aes(mth, p)) +
  facet_grid( ~ yr, drop = T, scales = "free_x", space = "free") +
  geom_col(aes(fill = fct_rev(dafh))) +
  labs(x = "Calendar date (month of year)", y = "Cumulative\nproportion") +
  scale_fill_viridis_d("DAFH", option = "A", direction = -1) +
  guides(fill = guide_legend(reverse = TRUE)) +
  theme(legend.key.size = unit(0.25, "lines")) +
  scale_x_continuous(breaks = 1:12)
p <- p1 | p2
path <- file.path("outputs", "figures", "outcomes", "secondary")
ggsave(file.path(path, "7-4-calendar-time.pdf"), p, height = 2, width = 6)
p
```

## Anti-coagulation

```{r}
#| label: fig-dafh-dist-anticoagulation
#| code-summary: DAFH by intervention
#| fig-cap: |
#|   Distribution of days alive and free of hospital by anti-coagulation intervention.
#| fig-height: 4
pdat <- acs_itt_nona_dat %>%
  dplyr::count(
    CAssignment = factor(CAssignment, labels = str_replace(intervention_labels()$CAssignment[-1], "<br>", "\n")),
    dafh = ordered(out_dafh, levels = 0:27), 
    .drop = F) %>%
  group_by(CAssignment) %>%
  mutate(p = n / sum(n)) %>%
  mutate(cp = cumsum(p)) %>%
  ungroup()
p <- ggplot(pdat, aes(CAssignment, p)) +
  geom_col(aes(fill = fct_rev(dafh))) +
  labs(x = "Anticoagulation intervention", y = "Cumulative proportion") +
  scale_fill_viridis_d("Days alive and\nfree of hospital", option = "A", direction = -1) +
  guides(fill = guide_legend(reverse = TRUE)) +
  theme(legend.key.size = unit(0.75, "lines"))
pth <- file.path("outputs", "figures", "outcomes", "secondary")
ggsave(file.path(pth, "outcome-7-4-descriptive.pdf"), p, height = 3, width = 6)
p
```

```{r}
#| label: fig-dafh-dist-anticoagulation2
#| code-summary: DAFH by intervention
#| fig-cap: |
#|   Cumulative distribution of days alive and free of hospital by anti-coagulation intervention.
#| fig-height: 4
p <- ggplot(pdat, aes(dafh, cp)) +
  geom_step(aes(colour = CAssignment, group = CAssignment)) +
  labs(x = "Days alive and free of ventilation", y = "Cumulative proportion") +
  scale_colour_viridis_d(
    "Days alive and\nfree of hospital", option = "A", begin = 0, end = 0.8) +
  guides(fill = guide_legend(reverse = TRUE))
pth <- file.path("outputs", "figures", "outcomes", "secondary")
ggsave(file.path(pth, "outcome-7-4-descriptive2.pdf"), p, height = 3, width = 6)
p
```

## Sample Cumulative Logits

Some evidence of a shift from proportional odds at higher values of DAFH.

```{r}
#| code-summary: Plot sample cumulative logits
#| fig-cap: Inspect sample cumulative logits.
trt_counts <- acs_itt_nona_dat %>%
  dplyr::count(CAssignment, out_dafh) %>%
  complete(CAssignment, out_dafh, fill = list(n = 0)) %>%
  group_by(CAssignment) %>%
  mutate(p = n / sum(n))
trt_logit <- trt_counts %>% 
  group_by(CAssignment) %>% 
  mutate(clogit = logit(cumsum(p))) %>%
  group_by(out_dafh) %>%
  mutate(rel_clogit = clogit - mean(clogit)) %>%
  filter(out_dafh != 27)

ggplot(trt_logit, aes(CAssignment, rel_clogit)) +
  facet_wrap( ~ out_dafh) +
  geom_point() +
  labs(y = "Relative (to mean) sample cumulative logit")

ggplot(trt_logit, aes(out_dafh, rel_clogit)) +
  facet_wrap( ~ CAssignment) +
  geom_point() +
  labs(y = "Relative (to mean) sample cumulative logit")
```

# Modelling

The primary analysis uses the ACS-ITT set, so all participants have been randomised to the anticoagulation domain and some participants may have been randomised to the antiviral domain.

## Primary Model

```{r}
#| label: fit-model-primary
#| code-summary: Fit primary model
fit_primary_model <- function(dat) {
  mdat <- make_primary_model_data(dat, c("inelgc3", "agegte60", "ctry"), c(10, 2.5, 1, 1))
  snk <- capture.output(
    mfit <- ordmod$sample(
      data = mdat,
      seed = 813508,
      chains = 8,
      parallel_chains = 8,
      iter_warmup = 1000,
      iter_sampling = 2500,
      refresh = 0,
      adapt_delta = 0.98
  ))
  mdrws <- as_draws_rvars(mfit$draws())
  
  # Add names
  epoch_map <- dat %>% dplyr::count(epoch, epoch_lab)
  site_map <- dat %>% dplyr::count(site_num, site)
  names(mdrws$beta) <- colnames(mdat$X)
  names(mdrws$gamma_epoch) <- epoch_map$epoch_lab
  names(mdrws$gamma_site) <- site_map$site
  
  # Convert to treatment log odds ratios
  mdrws$trtA <- as.vector(
    transform_coding(attr(mdat$X, "contrasts")$randA, contr.treatment(2)) %**% mdrws$beta[5])
  mdrws$trtC <- as.vector(
    transform_coding(attr(mdat$X, "contrasts")$randC, contr.treatment(4)) %**% mdrws$beta[1:3])

  mdrws$OR <- c(
    setNames(exp(mdrws$trtC), c("Intermediate", "Standard plus aspirin", "Therapeutic")),
    "Ineligible aspirin" = exp(mdrws$beta[which(grepl("inelg", colnames(mdat$X)))]),
    "Age 60+" = exp(mdrws$beta[which(grepl("age", colnames(mdat$X)))]),
    setNames(exp(mdrws$beta[which(grepl("ctry", colnames(mdat$X)))]), c("AU/NZ", "NP"))
  )
  return(list(dat = mdat, fit = mfit, drws = mdrws))
}
res <- fit_primary_model(acs_itt_nona_dat)
```

```{r}
#| label: odds-ratio-summary-table-primary-model-save
#| code-summary: Odds ratio summary table
#| tbl-cap: Posterior summaries for model parameters (fixed-effects).
save_tex_table(
  odds_ratio_summary_table_rev(res$drws$OR, "latex"),
  "outcomes/secondary/7-4-primary-model-acs-itt-summary-table")
odds_ratio_summary_table_rev(res$drws$OR)
```

```{r}
#| code-summary: Odds ratio summary for epoch and site
#| fig-cap: Summary of epoch and site posterior odds ratios.
p <- plot_epoch_site_terms(
  exp(res$drws$gamma_epoch),
  exp(res$drws$gamma_site),
  factor(res$dat$region_by_site, 
         labels = c("India", "Australia\nNew Zealand", "Nepal"))
)
pth <- file.path("outputs", "figures", "outcomes", "secondary", "7-4-primary-model-epoch-site-terms.pdf")
ggsave(pth, p, width = 6, height = 4.5)
p
```

:::{.callout-caution collapse="true"}
##### Diagnostics
```{r}
res$fit$summary()
res$fit$diagnostic_summary()
```
:::

:::{.callout-caution collapse="true"}
##### Trace plots
```{r}
mcmc_trace(res$drws["beta"])
mcmc_trace(res$drws["alpha"])
mcmc_trace(res$drws["gamma_site"])
mcmc_trace(res$drws["gamma_epoch"])
```
:::

### Posterior Predictive

```{r}
y_raw <- as.integer(levels(res$dat$y_raw))
y_ppc <- res$drws$y_ppc
# Map from modelled back to actual outcome values
y_ppc_raw <- rfun(\(x) y_raw[x])(y_ppc)

ppc_dat <- bind_cols(acs_itt_nona_dat, tibble(y_ppc = y_ppc_raw)) %>%
  select(
    StudyPatientID,
    AAssignment,
    CAssignment, 
    AgeAtEntry,
    inelgc3,
    ctry, 
    site, 
    epoch,
    out_dafh,
    y_ppc) 

ppc_by_group <- function(ppc_dat, grp) {
  ppc_dat %>%
    group_by(grp = !!grp) %>%
    summarise(
      mean_y = mean(out_dafh),
      median_y = median(out_dafh),
      pr0_y = mean(out_dafh == 0),
      pr27_y = mean(out_dafh == 27),
      prgt20_y = mean(out_dafh > 20),
      mean_ypp = rvar_mean(y_ppc),
      median_ypp = rvar_median(y_ppc),
      pr0_ypp = rvar_mean(y_ppc == 0),
      pr27_ypp = rvar_mean(y_ppc == 27),
      prgt20_ypp = rvar_mean(y_ppc > 20),
      .groups = "drop"
    )
}

ppc_C <- ppc_by_group(ppc_dat, sym("CAssignment"))
ppc_ctry <- ppc_by_group(ppc_dat, sym("ctry"))
ppc_epoch <- ppc_by_group(ppc_dat, sym("epoch"))
ppc_site <- ppc_by_group(ppc_dat, sym("site"))


plot_grp_ppc_prgt20 <- function(dat, lab = "") {
  dat %>%
    ggplot(aes(y = grp, xdist = prgt20_ypp)) +
    stat_interval() +
    geom_segment(aes(x = prgt20_y, 
                     xend = prgt20_y,
                     y = 1:nrow(dat)-0.5,
                     yend = 2:(nrow(dat)+1)-0.5), colour = "red") +
    labs(
      x = "Average predicted y", 
      y = lab)  
}

plot_grp_ppc_pr0 <- function(dat, lab = "") {
  dat %>%
    ggplot(aes(y = grp, xdist = pr0_ypp)) +
    stat_interval() +
    geom_segment(aes(x = pr0_y, 
                     xend = pr0_y,
                     y = 1:nrow(dat)-0.5,
                     yend = 2:(nrow(dat)+1)-0.5), colour = "red") +
    labs(
      x = "Average predicted y", 
      y = lab)  
}
```

## Sensitivity: Reduced Model (No site term)

```{r}
#| code-summary: Fit reduced model without site term
fit_no_site_model <- function(dat) {
  mdat <- make_primary_model_data(dat, c("inelgc3", "agegte60", "ctry"), c(10, 2.5, 1, 1))
  snk <- capture.output(
    mfit <- ordmod_epoch$sample(
      data = mdat,
      seed = 813508,
      chains = 8,
      parallel_chains = 8,
      iter_warmup = 1000,
      iter_sampling = 2500,
      refresh = 0,
      adapt_delta = 0.98
  ))
  mdrws <- as_draws_rvars(mfit$draws())
  
  # Add names
  epoch_map <- dat %>% dplyr::count(epoch, epoch_lab)
  names(mdrws$beta) <- colnames(mdat$X)
  names(mdrws$gamma_epoch) <- epoch_map$epoch_lab
  
  # Convert to treatment log odds ratios
  mdrws$trtA <- as.vector(
    transform_coding(attr(mdat$X, "contrasts")$randA, contr.treatment(2)) %**% mdrws$beta[5])
  mdrws$trtC <- as.vector(
    transform_coding(attr(mdat$X, "contrasts")$randC, contr.treatment(4)) %**% mdrws$beta[1:3])

  mdrws$OR <- c(
    setNames(exp(mdrws$trtC), c("Intermediate", "Standard plus aspirin", "Therapeutic")),
    "Ineligible aspirin" = exp(mdrws$beta[which(grepl("inelg", colnames(mdat$X)))]),
    "Age 60+" = exp(mdrws$beta[which(grepl("age", colnames(mdat$X)))]),
    setNames(exp(mdrws$beta[which(grepl("ctry", colnames(mdat$X)))]), c("AU/NZ", "NP"))
  )
  return(list(dat = mdat, fit = mfit, drws = mdrws))
}
res <- fit_no_site_model(acs_itt_nona_dat)
```

```{r}
#| code-summary: Odds ratio summary
#| tbl-cap: Posterior summaries for model parameters (fixed-effects).
odds_ratio_summary_table_rev(res$drws$OR)
```

```{r}
#| code-summary: Epoch and site terms
#| fig-cap: Posterior summaries for epoch terms.
p <- plot_epoch_terms(exp(res$drws$gamma_epoch))
p
```

```{r}
#| code-summary: Diagnostics
res$fit$cmdstan_diagnose()
```

## Sensitivity: Reduced Model (No site or epoch terms)

```{r}
#| code-summary: Fit reduced model (no site or epoch)
#| label: fit-reduced-model
fit_reduced_model <- function() {
  mdat0 <- make_reduced_model_data(acs_itt_nona_dat)
  snk <- capture.output(
      mfit0 <- ordmod0$sample(
      data = mdat0,
      seed = 733358,
      chains = 8,
      parallel_chains = 8,
      iter_warmup = 1000,
      iter_sampling = 2500,
      refresh = 0
  ))
  mdrws0 <- as_draws_rvars(mfit0$draws())
  names(mdrws0$beta) <- colnames(mdat0$X)
  mdrws0$Ccon <- as.vector(contr.orthonorm(4) %**% mdrws0$beta[1:3])
  mdrws0$Ctrt <- mdrws0$Ccon[-1] - mdrws0$Ccon[1]
  # Prepare odds ratios for use in summary table
  mdrws0$OR <- c(setNames(exp(mdrws0$Ctrt), c("Intermediate", "Standard plus aspirin", "Therapeutic")), 
                 setNames(exp(mdrws0$beta[c(6, 8:9)]), 
                          c("Age 60+", "AU/NZ v IN", "NP v IN")))
  # Prepare outcome probability for comparison with observed proportions
  return(list(dat = mdat0, fit = mfit0, drws = mdrws0))
}
res <- fit_reduced_model()
```

```{r}
#| code-summary: Odds ratio summary
#| tbl-cap: Posterior summaries for model parameters.
odds_ratio_summary_table_rev(res$drws$OR)
```

```{r}
#| label: fig-model-simple-versus-observed
#| code-summary: Compare model level probabilities to observed
#| fig-cap: |
#|   Posterior probability of outcome levels by treatment group
#|   compared to observed proportions.

# Treatment specific level probabilities
p_C1 <- ordered_logit(res$drws$alpha - res$drws$Ccon[1])
p_C2 <- ordered_logit(res$drws$alpha - res$drws$Ccon[2])
p_C3 <- ordered_logit(res$drws$alpha - res$drws$Ccon[3])
p_C4 <- ordered_logit(res$drws$alpha - res$drws$Ccon[4])
p_df <- expand_grid(
  CAssignment = c("C1", "C2", "C3", "C4"),
  out_dafh = sort(unique(res$dat$y_raw))
) %>%
  mutate(
    p = c(p_C1, p_C2, p_C3, p_C4),
    med = median(p),
    lo = quantile(p, prob = 0.025)[1, ],
    hi = quantile(p, prob = 0.975)[1, ]
  )

obs <- acs_itt_nona_dat %>%
  dplyr::count(CAssignment, out_dafh = ordered(out_dafh)) %>%
  complete(CAssignment, out_dafh, fill = list(n = 0)) %>%
  group_by(CAssignment) %>%
  mutate(p = n / sum(n))

ggplot(p_df, aes(out_dafh, med)) +
  facet_wrap( ~ CAssignment) +
  geom_pointrange(aes(ymin = lo, ymax = hi), fatten = 1, colour = "red") +
  geom_point(data = obs, aes(out_dafh, p), shape = 10) +
  labs(
    x = "WHO outcome scale",
    y = "Probability of outcome"
  )
```

## Sensitivity: Treatment coding

The model is re-fit with priors specified on the treatment contrasts rather than the orthonormal contrasts.

```{r}
#| code-summary: Fit primary model using treatment contrasts
fit_primary_model_trt_coding <- function() {
  p_mult <- 2
  # Setup the data
  epoch <- acs_itt_nona_dat$epoch
  M_epoch <- max(acs_itt_nona_dat$epoch)
  region <- acs_itt_nona_dat$ctry_num
  M_region <- max(region)
  site <- acs_itt_nona_dat$site_num
  M_site <- max(site)
  region_by_site <- acs_itt_nona_dat %>% 
    dplyr::count(ctry_num, site_num) %>% 
    pull(ctry_num)
  
  X <- model.matrix(
    ~ CAssignment + AAssignment + inelgc3 + agegte60 + ctry,
    data = acs_itt_nona_dat %>% mutate(AAssignment = relevel(AAssignment, ref = "A0"))
  )[, -1]
  beta_sd <- c(1, 1, 1, 1, 1, 10, 2.5, 1, 1)

  y_raw <- ordered(acs_itt_nona_dat$out_dafh)
  y_mod <- as.integer(y_raw)
  N <- dim(X)[1]
  K <- dim(X)[2]
  unique_y <- length(unique(y_mod))
  mdat <- list(N = N, K = K, J = unique_y, X = X, y = y_mod, y_raw = y_raw,
       M_region = M_region,
       M_site = M_site, site = site,
       M_epoch = M_epoch, epoch = epoch,
       region_by_site = region_by_site,
       p_par = p_mult * rep(1 / unique_y, unique_y),
       beta_sd = beta_sd)  
  
  snk <- capture.output(
    mfit <- ordmod$sample(
      data = mdat,
      seed = 813508,
      chains = 8,
      parallel_chains = 8,
      iter_warmup = 1000,
      iter_sampling = 2500,
      refresh = 0,
      adapt_delta = 0.98
  ))
  mdrws <- as_draws_rvars(mfit$draws())
  
  epoch_map <- acs_itt_nona_dat %>% dplyr::count(epoch, epoch_lab)
  site_map <- acs_itt_nona_dat %>% dplyr::count(site_num, site)
  names(mdrws$beta) <- colnames(mdat$X)
  names(mdrws$gamma_epoch) <- epoch_map$epoch_lab
  names(mdrws$gamma_site) <- site_map$site
  
  # Convert to treatment log odds ratios
  mdrws$trtA <- as.vector(mdrws$beta[5])
  mdrws$trtC <- as.vector(mdrws$beta[1:3])

  mdrws$OR <- c(
    setNames(exp(mdrws$trtC), c("Intermediate", "Standard plus aspirin", "Therapeutic")),
    "Age 60+" = exp(mdrws$beta[which(grepl("age", colnames(mdat$X)))]),
    "Ineligible aspirin" = exp(mdrws$beta[which(grepl("inelg", colnames(mdat$X)))]),
    setNames(exp(mdrws$beta[which(grepl("ctry", colnames(mdat$X)))]), c("AU/NZ", "NP"))
  )
  return(list(dat = mdat, fit = mfit, drws = mdrws))
}
res <- fit_primary_model_trt_coding()
```

```{r}
#| code-summary: Odds ratio table
#| tbl-cap: Posterior summaries for model parameters.
odds_ratio_summary_table_rev(res$drws$OR)
```

```{r}
#| code-summary: Epoch and site terms
#| label: odds-ratio-summary-primary-model-epoch-site-terms-prior-sens-trt-ctr
#| fig-cap: |
#|   Posterior summaries for epoch and site terms under 
#|   treatment coding for interventions.
p <- plot_epoch_site_terms(
  exp(res$drws$gamma_epoch),
  exp(res$drws$gamma_site),
  factor(res$dat$region_by_site, 
         labels = c("India", "Australia\nNew Zealand", "Nepal"))
)
p
```

## Sensitivity: Concurrent controls

Three separate analyses are conducted based on concurrent randomisations as was done for the primary outcome. For these models, the epoch term has been removed.

### Intermediate dose

In the following analyses, the set is restricted to participants who were randomised to either standard dose or intermediate dose.

-   **Set**: patients randomised to either standard dose or intermediate dose whilst anticoagulation domain remained open.
-   **Covariates**: anticoagulation intervention, age group, region of enrolment.

```{r}
#| code-summary: Descriptive summary table
save_tex_table(
  make_summary_table(acs_itt_concurc2_dat, "latex"), 
  file.path("outcomes", "secondary", "7-4-anticoagulation-concurrent-intermediate-summary"))
make_summary_table(acs_itt_concurc2_dat)
```

```{r}
#| code-summary: Fit model
ctr <- contr.treatment
X <- model.matrix( 
  ~ CAssignment + agegte60 + ctry, 
  data = acs_itt_concurc2_nona_dat, 
  contrasts.arg = list(CAssignment = ctr))[, -1]
y_raw <- ordered(acs_itt_concurc2_nona_dat$out_dafh)
y_mod <- as.integer(y_raw)
N <- dim(X)[1]
K <- dim(X)[2]
unique_y <- length(unique(y_mod))
mdat <- list(
  N = N, K = K, J = unique_y, X = X, y = y_mod, y_raw = y_raw,
  p_par = 2 * rep(1 / unique_y, unique_y),
  beta_sd = c(1, 2.5, 1, 1)
)

snk <- capture.output(
  mfit <- ordmod0$sample(
    data = mdat,
    seed = 75136,
    chains = 8,
    parallel_chains = 8,
    iter_warmup = 1000,
    iter_sampling = 2500,
    refresh = 0
))
mdrws <- as_draws_rvars(mfit$draws())
names(mdrws$beta) <- colnames(X)

mdrws$Ccon <- as.vector(ctr(2) %**% mdrws$beta[1])
mdrws$Ctrt <- mdrws$Ccon[-1] - mdrws$Ccon[1]

mdrws$compare <- c("Intermediate vs standard" = exp(mdrws$Ctrt[1]))

mdrws$OR <- c("Intermediate" = exp(mdrws$Ctrt), setNames(exp(mdrws$beta[2:4]), c("Age 60+", "Australia/New Zealand", "Nepal")))
```

```{r}
#| code-summary: Sample distribution
#| fig-cap: |
#|   Distribution of days alive and free of hospital by anti-coagulation intervention in subset.
#| fig-height: 4
pdat <- acs_itt_concurc2_nona_dat %>%
  dplyr::count(
    CAssignment = factor(
      CAssignment, 
      levels = c("C1", "C2"),
      labels = c("Standard", "Intermediate")),
    dafh = ordered(out_dafh, levels = 0:27), 
    .drop = F) %>%
  group_by(CAssignment) %>%
  mutate(p = n / sum(n)) %>%
  mutate(cp = cumsum(p)) %>%
  ungroup()
p <- ggplot(pdat, aes(CAssignment, p)) +
  geom_col(aes(fill = fct_rev(dafh)), colour = NA) +
  labs(x = "Anticoagulation intervention", y = "Cumulative proportion") +
  scale_fill_viridis_d("Days alive and\nfree of hospital", option = "A", direction = -1) +
  guides(fill = guide_legend(reverse = TRUE, ncol = 3)) +
  theme(legend.key.size = unit(0.75, "lines"))
p
pth <- file.path("outputs", "figures", "outcomes", "secondary")
ggsave(file.path(pth, "outcome-7-4-descriptive-concurrent-intermediate.pdf"), p, height = 2.5, width = 4)
```

```{r}
#| code-summary: Posterior contrast
#| tbl-cap: Posterior densities for comparisons of interest.
p <- plot_or_densities(mdrws$compare) +
  # geom_segment(aes(x = 1, xend = Inf, y = 1 - 0.1, yend = 1 - 0.1),
  #              arrow = arrow(length = unit(0.5, "lines"))) +
  geom_text(aes(x = 1, y = 1 - 0.1, label = sprintf("Pr(OR > 1) = %.2f", Pr(RV > 1))), hjust = 0, nudge_x = 0.01,
            family = "Palatino") +
  scale_x_log10(breaks = c(0.8, 0.9, 1, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6)) +
  labs(y = "Comparison")
p
```

```{r}
#| code-summary: Odds ratio summary table
#| tbl-cap: Posterior summaries for model parameters.
odds_ratio_summary_table_rev(mdrws$OR)
save_tex_table(
  odds_ratio_summary_table_rev(mdrws$OR, "latex"),
  "outcomes/secondary/7-4-primary-model-acs-itt-concurrent-intermediate-summary-table")
```

:::{.callout-caution collapse="true"}
#### Diagnostics
```{r}
mfit$summary()
mfit$diagnostic_summary()
```
:::

:::{.callout-caution collapse="true"}
#### Trace plots
```{r}
mcmc_trace(mdrws["beta"])
mcmc_trace(mdrws["alpha"])
```
:::


### Standard dose plus aspirin

-   **Covariates**: anticoagulation intervention, age group, region of enrolment.

```{r}
#| code-summary: Descriptive summary table
save_tex_table(
  make_summary_table(acs_itt_concurc3_dat, "latex"), 
  file.path("outcomes", "secondary", "7-4-anticoagulation-concurrent-stdaspirin-summary"))
make_summary_table(acs_itt_concurc3_dat)
```

```{r}
#| code-summary: Fit model
ctr <- contr.orthonorm
X <- model.matrix( 
  ~ CAssignment + agegte60 + ctry, 
  data = acs_itt_concurc3_nona_dat, 
  contrasts.arg = list(CAssignment = ctr))[, -1]
y_raw <- ordered(acs_itt_concurc3_nona_dat$out_dafh)
y_mod <- as.integer(y_raw)
N <- dim(X)[1]
K <- dim(X)[2]
unique_y <- length(unique(y_mod))
mdat <- list(
  N = N, K = K, J = unique_y, X = X, y = y_mod, y_raw = y_raw,
  p_par = 2 * rep(1 / unique_y, unique_y),
  beta_sd = c(1, 1, 2.5, 1)
)

snk <- capture.output(
  mfit <- ordmod0$sample(
    data = mdat,
    seed = 135356,
    chains = 8,
    parallel_chains = 8,
    iter_warmup = 1000,
    iter_sampling = 2500,
    refresh = 0
))
mdrws <- as_draws_rvars(mfit$draws())
names(mdrws$beta) <- colnames(X)

mdrws$Ccon <- as.vector(ctr(3) %**% mdrws$beta[1:2])
mdrws$Ctrt <- mdrws$Ccon[-1] - mdrws$Ccon[1]

mdrws$compare <- c("Intermediate vs standard" = exp(mdrws$Ctrt[1]),
                   "Standard plus aspirin vs standard" = exp(mdrws$Ctrt[2]),
                   "Intermediate vs standard plus aspirin" = exp(mdrws$Ctrt[1] - mdrws$Ctrt[2]))

mdrws$OR <- c("Intermediate" = exp(mdrws$Ctrt[1]),
              "Standard plus aspirin" = exp(mdrws$Ctrt[2]),
              setNames(exp(mdrws$beta[3:4]), c("Age 60+", "Australia/New Zealand")))
```

```{r}
#| code-summary: Sample distribution
#| fig-cap: |
#|   Distribution of days alive and free of hospital by anti-coagulation intervention in subset.
#| fig-height: 4
pdat <- acs_itt_concurc3_nona_dat %>%
  dplyr::count(
    CAssignment = factor(
      CAssignment, 
      levels = c("C1", "C2", "C3"),
      labels = c("Standard", "Intermediate", "Standard\nplus aspirin")),
    dafh = ordered(out_dafh, levels = 0:27), 
    .drop = F) %>%
  group_by(CAssignment) %>%
  mutate(p = n / sum(n)) %>%
  mutate(cp = cumsum(p)) %>%
  ungroup()
p <- ggplot(pdat, aes(CAssignment, p)) +
  geom_col(aes(fill = fct_rev(dafh))) +
  labs(x = "Anticoagulation intervention", y = "Cumulative proportion") +
  scale_fill_viridis_d("Days alive and\nfree of hospital", option = "A", direction = -1) +
  guides(fill = guide_legend(reverse = TRUE, ncol = 3)) +
  theme(legend.key.size = unit(0.75, "lines"))
p
pth <- file.path("outputs", "figures", "outcomes", "secondary")
ggsave(file.path(pth, "outcome-7-4-descriptive-concurrent-stdaspirin.pdf"), p, height = 2.5, width = 6)
```

```{r}
#| code-summary: Posterior contrast
#| tbl-cap: Decision summaries on comparisons
plot_or_densities(mdrws$compare)
```

```{r}
#| code-summary: Odds ratio summary table
#| tbl-cap: Posterior summaries for model parameters.
odds_ratio_summary_table_rev(mdrws$OR)
save_tex_table(
  odds_ratio_summary_table_rev(mdrws$OR, "latex"),
  "outcomes/secondary/7-4-primary-model-acs-itt-concurrent-stdaspirin-summary-table")
```

:::{.callout-caution collapse="true"}
#### Diagnostics
```{r}
mfit$summary()
mfit$diagnostic_summary()
```
:::

:::{.callout-caution collapse="true"}
#### Trace plots
```{r}
mcmc_trace(mdrws["beta"])
mcmc_trace(mdrws["alpha"])
```
:::

### Therapeutic dose

-   **Covariates**: anticoagulation intervention, age group, region of enrolment.

```{r}
#| code-summary: Descriptive summary table
save_tex_table(
  make_summary_table(acs_itt_concurc4_dat, "latex"), 
  file.path("outcomes", "secondary", "7-4-anticoagulation-concurrent-therapeutic-summary"))
make_summary_table(acs_itt_concurc4_dat)
```

```{r}
#| code-summary: Fit model
ctr <- contr.orthonorm
X <- model.matrix( 
  ~ CAssignment + agegte60 + ctry, 
  data = acs_itt_concurc4_nona_dat, 
  contrasts.arg = list(CAssignment = ctr))[, -1]
y_raw <- ordered(acs_itt_concurc4_nona_dat$out_dafh)
y_mod <- as.integer(y_raw)
N <- dim(X)[1]
K <- dim(X)[2]
unique_y <- length(unique(y_mod))
mdat <- list(
  N = N, K = K, J = unique_y, X = X, y = y_mod, y_raw = y_raw,
  p_par = 2 * rep(1 / unique_y, unique_y),
  beta_sd = c(1, 1, 2.5, 1, 1)
)

snk <- capture.output(
  mfit <- ordmod0$sample(
    data = mdat,
    seed = 49135,
    chains = 8,
    parallel_chains = 8,
    iter_warmup = 1000,
    iter_sampling = 2500,
    refresh = 0
))
mdrws <- as_draws_rvars(mfit$draws())
names(mdrws$beta) <- colnames(X)

mdrws$Ccon <- as.vector(ctr(3) %**% mdrws$beta[1:2])
mdrws$Ctrt <- mdrws$Ccon[-1] - mdrws$Ccon[1]

mdrws$compare <- c("Intermediate vs standard" = exp(mdrws$Ctrt[1]),
                   "Therapeutic vs standard" = exp(mdrws$Ctrt[2]),
                   "Intermediate vs therapeutic" = exp(mdrws$Ctrt[1] - mdrws$Ctrt[2]))

mdrws$OR <- c("Intermediate" = exp(mdrws$Ctrt[1]),
              "Therapeutic" = exp(mdrws$Ctrt[2]),
              setNames(exp(mdrws$beta[3:5]), c("Age 60+", "India", "Australia/New Zealand")))
```

```{r}
#| code-summary: Sample distribution
#| fig-cap: |
#|   Distribution of days alive and free of hospital by anti-coagulation intervention in subset.
#| fig-height: 4
pdat <- acs_itt_concurc4_nona_dat %>%
  dplyr::count(
    CAssignment = factor(
      CAssignment, 
      levels = c("C1", "C2", "C4"),
      labels = c("Standard", "Intermediate", "Therapeutic")),
    dafh = ordered(out_dafh, levels = 0:27), 
    .drop = F) %>%
  group_by(CAssignment) %>%
  mutate(p = n / sum(n)) %>%
  mutate(cp = cumsum(p)) %>%
  ungroup()
p <- ggplot(pdat, aes(CAssignment, p)) +
  geom_col(aes(fill = fct_rev(dafh))) +
  labs(x = "Anticoagulation intervention", y = "Cumulative proportion") +
  scale_fill_viridis_d("Days alive and\nfree of hospital", option = "A", direction = -1) +
  guides(fill = guide_legend(reverse = TRUE, ncol = 3)) +
  theme(legend.key.size = unit(0.75, "lines"))
pth <- file.path("outputs", "figures", "outcomes", "secondary")
ggsave(file.path(pth, "outcome-7-4-descriptive-concurrent-therapeutic.pdf"), p, height = 2.5, width = 6)
p
```

```{r}
#| code-summary: Posterior contrasts
#| tbl-cap: Decision summaries on comparisons
plot_or_densities(mdrws$compare)
```

```{r}
#| code-summary: Odds ratio summary table
#| tbl-cap: Posterior summaries for model parameters.
save_tex_table(
  odds_ratio_summary_table_rev(mdrws$OR, "latex"),
  "outcomes/secondary/7-4-primary-model-acs-itt-concurrent-therapeutic-summary-table")
odds_ratio_summary_table_rev(mdrws$OR)
```

:::{.callout-caution collapse="true"}
#### Diagnostics
```{r}
mfit$summary()
mfit$diagnostic_summary()
```
:::

:::{.callout-caution collapse="true"}
#### Trace plots
```{r}
mcmc_trace(mdrws["beta"])
mcmc_trace(mdrws["alpha"])
```
:::
