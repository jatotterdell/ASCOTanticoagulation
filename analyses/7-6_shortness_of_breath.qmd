---
title: "7-6 Shortness of breath"
description: |
 Patient reported shortness of breath to day 28.
author:
  - name: Rob Mahar
    affiliation: University of Melbourne
  - name: James Totterdell
    affiliation: University of Sydney
date: last-modified
---

# Preamble {#preamble}

```{r}
#| label: pkgs
#| code-summary: Load packages
library(tidyverse)
library(labelled)
library(kableExtra)
library(cmdstanr)
library(posterior)
library(bayestestR)
library(bayesplot)
library(matrixStats)
```

```{r}
#| label: data
#| code-summary: Prepare dataset
devtools::load_all()
all_dat <- read_all_no_daily()

# Anticoagulation set (intention-to-treat, including missing)
acs_itt_dat <- all_dat %>% 
  filter_acs_itt() %>%
  transmute_model_cols_grp_aus_nz()

# Anticoagulation set (intention-to-treat, excluding missing)
acs_itt_nona_dat <- acs_itt_dat %>% 
  filter(!is.na(out_sob))  

# Concurrent enrolments for C2
acs_itt_concurc2_dat <- acs_itt_dat %>%
  filter_concurrent_intermediate()
acs_itt_concurc2_nona_dat <- acs_itt_concurc2_dat %>% 
  filter(!is.na(out_sob))

# Concurrent enrolments for C3
acs_itt_concurc3_dat <- acs_itt_dat %>%
  filter_concurrent_std_aspirin()
acs_itt_concurc3_nona_dat <- acs_itt_concurc3_dat %>% 
  filter(!is.na(out_sob))

# Concurrent enrolments for C4
acs_itt_concurc4_dat <- acs_itt_dat %>%
  filter_concurrent_therapeutic()
acs_itt_concurc4_nona_dat <- acs_itt_concurc4_dat %>% 
  filter(!is.na(out_sob))
```

```{r}
make_summary_table <- function(dat, format = "html") {
  tab <- dat %>%
    mutate(CAssignment = factor(
      CAssignment, 
      levels = c("C1", "C2", "C3", "C4"),
      labels = str_replace(intervention_labels()$CAssignment[-1], "<br>", " "))) %>%
    group_by(CAssignment) %>%
    summarise(
      Patients = n(),
      Known = sprintf(
        "%i (%.1f)", sum(!is.na(out_sob)), 100 * mean(!is.na(out_sob))),
      Missing = sprintf(
        "%i (%.1f)", sum(is.na(out_sob)), 100 * mean(is.na(out_sob))),
      `Shortness of breath day 28` = sprintf(
        "%i (%.1f)", sum(out_sob, na.rm = TRUE), 100 * mean(out_sob, na.rm = TRUE)),
    ) %>%
    bind_rows(
      dat  %>%
        group_by(CAssignment = "Overall") %>%
        summarise(
          Patients = n(),
          Known = sprintf(
            "%i (%.1f)", sum(!is.na(out_sob)), 100 * mean(!is.na(out_sob))),
          Missing = sprintf(
            "%i (%.1f)", sum(is.na(out_sob)), 100 * mean(is.na(out_sob))),
          `Shortness of breath day 28` = sprintf(
            "%i (%.1f)", sum(out_sob, na.rm = TRUE), 100 * mean(out_sob, na.rm = TRUE)),
      )
    ) %>%
    mutate(CAssignment = fct_inorder(CAssignment)) %>%
    gather(key, value, -CAssignment, factor_key = T) %>%
    spread(key, value)
  colnames(tab)[1] <- "n (\\%)"
  if(format == "latex") {
    colnames(tab) <- linebreak(colnames(tab), align = "c", linebreaker = "<br>")
  }
    kable(tab,
      format = format,
      align = "lrrrrr",
      escape = FALSE,
      booktabs = TRUE
    ) %>%
    kable_styling(font_size = 10, latex_options = "HOLD_position")  %>%
    row_spec(nrow(tab), bold = TRUE)
}
```


# Descriptive

## Anticoagulation

```{r}
save_tex_table(
  make_summary_table(acs_itt_dat, "latex"),
  "outcomes/secondary/7-6-anticoagulation-summary")
make_summary_table(acs_itt_dat)
```

## Age

```{r}
#| label: fig-age-sob
#| code-summary: Relationship age to shortness of breath
#| fig-cap: |
#|   Relationship (logistic regression linear in age) 
#|   between age at entry and shortness of breath at day 28.
agedat <- acs_itt_dat %>%
  dplyr::count(out_sob, AgeAtEntry) %>% 
  spread(out_sob, n, fill = 0) %>% 
  mutate(
    n = `0` + `1` + `<NA>`,
    p = `1` / (`1` + `0`))
agemod <- glm(
  cbind(`1`, `0`) ~ AgeAtEntry, 
  data = agedat, 
  family = binomial())
agedat <- agedat %>%
  mutate(
    ypred = predict(agemod, newdata = agedat, type = "response")
  )
p1 <- ggplot(agedat, aes(AgeAtEntry, n)) +
  geom_col(colour = "grey40", fill = "grey40") +
  geom_vline(xintercept = 60, linetype = 2) +
  labs(y = "Number of\nparticipants",
       x = "Age at entry")
p2 <- ggplot(agedat, aes(AgeAtEntry, p)) +
    geom_point() +
    geom_vline(xintercept = 60, linetype = 2) +
    geom_line(aes(y = ypred)) +
    labs(y = "Proportion\nshortness of breath\nday 28", x = "Age at entry")
p <- p1 | p2
path <- file.path("outputs", "figures", "outcomes", "secondary")
ggsave(file.path(path, "7-6-age.pdf"), p, height = 2, width = 6)
p
```

## Country

```{r}
#| label: tbl-country-sob
#| code-summary: Relationship country to outcome
#| tbl-cap: Shortness of breath by country.
tdat <- acs_itt_dat %>%
  dplyr::count(Country = factor(
    country, 
    levels = c("IN", "AU", "NP", "NZ"),
    labels = c("India", "Australia", "Nepal", "New\nZealand")), out_sob) %>%
  group_by(Country) %>%
  spread(out_sob, n, fill = 0) %>%
  mutate(
    n = `1` + `0` + `<NA>`,
    p_1 = `1` / (`1` + `0`),
    p_miss = `<NA>` / (`1` + `0` + `<NA>`)
  )
p1 <- ggplot(tdat, aes(Country, n)) +
  geom_col() +
    labs(
      y = "Number of\nparticipants", 
      x = "Country of enrolment")
p2 <- ggplot(tdat, aes(Country, p_1)) +
  geom_point() +
    labs(
      y = "Proportion\nshortness of breath\nday 28", 
      x = "Country of enrolment")  +
  ylim(0, NA)
p <- p1 | p2
path <- file.path("outputs", "figures", "outcomes", "secondary")
ggsave(file.path(path, "7-6-country.pdf"), p, height = 2, width = 6)
p
```

## Site

```{r}
#| label: tbl-site-7-6
#| code-summary: Relationship site to outcome
#| tbl-cap: Shortness of breath at day 28 by site within country.
tdat <- all_dat %>%
  filter_acs_itt() %>%
  dplyr::count(
    Country_lab = Country,
    Site_lab = fct_infreq(Location),
    Country = factor(PT_CountryName, levels = c("India", "Australia", "Nepal", "New Zealand")),
    Site = PT_LocationName,
    out_sob) %>%
  group_by(Country, Site) %>%
  spread(out_sob, n, fill = 0) %>%
  mutate(
    n = `1` + `0` + `<NA>`,
    p_1 = `1` / (`1` + `0`),
    p_miss = `<NA>` / (`1` + `0` + `<NA>`)
  ) %>%
  ungroup()

p1 <- ggplot(tdat, aes(Site_lab, n)) +
  facet_grid( ~ Country, scales = "free_x", space = "free_x") +
  geom_col() +
    labs(
      y = "Number of\nparticipants", 
      x = "") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1),
        panel.border = element_rect(fill = NA))
p2 <- ggplot(tdat, aes(Site_lab, p_1)) +
  facet_grid( ~ Country, scales = "free_x", space = "free_x") +
  geom_point() +
    labs(
      y = "Proportion\nshortness of breath\nday 28", 
      x = "Site of enrolment") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1),
        panel.border = element_rect(fill = NA))
p <- p1 / p2
path <- file.path("outputs", "figures", "outcomes", "secondary")
ggsave(file.path(path, "7-6-country-site.pdf"), p, height = 4, width = 6.25)
p
```

## Calendar Time

```{r}
#| label: fig-cal-po
#| code-summary: Relationship calendar date to outcome
#| fig-cap: |
#|   Relationship between calendar date and the primary outcome.
caldat <- all_dat %>% 
  filter_acs_itt() %>%
  dplyr::count(out_sob, yr = year(RandDate), mth = month(RandDate)) %>% 
  spread(out_sob, n, fill = 0) %>% 
  mutate(p = `1` / (`1` + `0`),
         n = `1` + `0` + `<NA>`)
p1 <- ggplot(caldat, aes(mth, p)) +
  facet_grid( ~ yr, drop = T, scales = "free_x", space = "free") +
    geom_point() +
    labs(
      y = "Proportion\nshortness of breath\nday 28", 
      x = "Calendar date (month of year)") +
  scale_x_continuous(breaks = 1:12) +
  ylim(0, NA)
p2 <- ggplot(caldat, aes(mth, n)) +
  facet_grid( ~ yr, drop = T, scales = "free_x", space = "free") +
    geom_col() +
    labs(
      y = "Number of\nparticipants", 
      x = "Calendar date (month of year)") +
  scale_x_continuous(breaks = 1:12)
p <- p2 | p1
path <- file.path("outputs", "figures", "outcomes", "secondary")
ggsave(file.path(path, "7-6-calendar-time.pdf"), p, height = 2, width = 6)
p
```

# Modelling

The analysis for shortness of breath is specified equivalently to that for the primary outcome. It includes intervention as randomised, age category, country, site nested within country, epoch, and intervention eligibility. The main analysis restricts the population to only those participants randomised to the anticoagulation domain.

```{r}
#| label: load-models
#| code-summary: Compiles stan models.
seed <- 59579
model_full <- cmdstan_model(file.path("stan", "primary_logistic_model_site_epoch.stan"))
```

```{r}
#| label: Munge stan data.
#| code-summary: Munges stan data.
make_stan_data <- function(dat, vars, outcome, beta_sd = c(2.5, rep(1, nXassign), 2.5, 10)) 
{
  X <- model.matrix(
     as.formula(paste("~", paste(vars, collapse = " + "))),
    data = dat,
    contrast = list(
      AAssignment = contr.orthonorm,
      CAssignment = contr.orthonorm)
  )
  
  nXassign <- sum(grepl("Assignment", colnames(X)))

  y <- dat[[outcome]]
  N <- dim(X)[1]
  K <- dim(X)[2]  
  
    epoch  <- dat$epoch
  M_epoch  <- max(dat$epoch)
    region <- dat[["ctry_num"]]
  M_region <- max(region)
    site <- dat[["site_num"]]
  M_site <- max(site)
  region_by_site <- region_by_site <- dat %>% 
    dplyr::count(ctry_num, site_num) %>% 
    pull(ctry_num)
  
  list(N = N, K = K, X = X, y = y,
       M_region = M_region, region = region,
       M_site = M_site, site = site,
       M_epoch = M_epoch, epoch = epoch,
       region_by_site = region_by_site,
       beta_sd = c(2.5, rep(1, nXassign), 2.5, 10))
}

dat_full <- make_stan_data(dat = acs_itt_nona_dat, 
                           vars    = c("CAssignment", "AAssignment", "agegte60_c", "inelgc3"),
                           outcome = "D28_BreathSinceGettingCovid")

dat_full[["y"]] <- ifelse(dat_full[["y"]] == "Yes", 1, 0)
```

## Analysis model

```{r}
#| label: model1-sampling
#| code-summary: Data and sampling

run_stan <- function(model, data)
{
  model[["sample"]](data = data,
                    seed = seed,
                    refresh = 0,
                    iter_sampling = 2500,
                    chains = 8,
                    parallel_chains = 8)
}

stan_full <- run_stan(model_full, dat_full)

stan_full$summary(variables = c("beta", 
                                "beta_region", 
                                "gamma_site", "epsilon_site", "tau_site",
                                "gamma_epoch", "epsilon_epoch", "tau_epoch"))

```

```{r}
#| label: model-diagnostics
#| code-summary: Diagnostics
stan_full$cmdstan_diagnose()
```

```{r}
#| label: model-trace
#| code-summary: Trace plots
mcmc_trace(stan_full$draws("beta",          format = "matrix"))
mcmc_trace(stan_full$draws("beta_region",   format = "matrix"))
mcmc_trace(stan_full$draws("gamma_site",    format = "matrix"))
mcmc_trace(stan_full$draws("epsilon_site",  format = "matrix"))
mcmc_trace(stan_full$draws("tau_site",      format = "matrix"))
mcmc_trace(stan_full$draws("gamma_epoch",   format = "matrix"))
mcmc_trace(stan_full$draws("epsilon_epoch", format = "matrix"))
mcmc_trace(stan_full$draws("tau_epoch",     format = "matrix"))
```

```{r}
#| label: model-summaries
#| code-summary: Model summaries

# Transform treatment contrasts back.
add_treatment_rvs <- function(rvs, mdat) {
  
  # Get the orthonormal contrasts.
  Ca <- cbind(1, attr(mdat$X, "contrasts")$AAssignment) 
  Cc <- cbind(1, attr(mdat$X, "contrasts")$CAssignment)
  nC <- ncol(Cc)
  # Get the treatment contrasts.
  Ct <-  cbind(1, contr.treatment(nC))
  trt_rows <- which(rownames(Cc) != "C0")
  
  rvs$eta <- as.vector(Cc %**% rvs$beta[1:nC])
  rvs$beta_uncon <- as.vector(Cc[, -1] %**% rvs$beta[2:nC])
  rvs$prob <- 1 / (1 + exp(-rvs$eta))
  rvs$beta_trt <- as.vector(
    transform_coding(Cc, Ct) %**% rvs$beta[1:nC])
  # names_trt <- rownames(Cc)[-grep(rownames(Cc), pattern = "C1")]
  rvs$OR <- setNames(exp(rvs$beta_trt[trt_rows][-1]), c("C2 vs C1", "C3 vs C1", "C4 vs C1"))
  rvs$OR <- c(rvs$OR, "C2 vs C4" = rvs$OR[1] / rvs$OR[3])
  return(rvs)
}

# Extract the betas as a random variable type (using 'posterior' package)
rvs_beta   <- as_draws_rvars(stan_full$draws(c("beta")))
rvs_trt    <- add_treatment_rvs(rvs_beta, dat_full)[["OR"]]
rvs_region <- as_draws_rvars(stan_full[["draws"]](c("beta_region")))[[1]]
rvs_site   <- as_draws_rvars(stan_full[["draws"]](c("gamma_site")))[[1]]
rvs_epoch  <- as_draws_rvars(stan_full[["draws"]](c("gamma_epoch")))[[1]]

# Define names of random variables. 
map_labels <- function(data, num, lab)
{
  lab_map <- paste0(data[[num]], "/", data[[lab]])
  lab_map <- unique(lab_map)     
  lab_map <- as.data.frame(str_split(lab_map, pattern = "/", simplify = T))
  names(lab_map) <- c("number", "label")
  lab_map[["number"]] <- as.numeric(lab_map[["number"]])
  lab_map <- lab_map[order(lab_map[["number"]]),]
}

acs_itt_nona_dat[["site_nest"]] <- with(acs_itt_nona_dat, paste0(ctry,": ", site))

epoch_lab  <- map_labels(acs_itt_nona_dat, "epoch", "epoch_lab")
region_lab <- map_labels(acs_itt_nona_dat, "ctry_num", "ctry")
site_lab   <- map_labels(acs_itt_nona_dat, "site_num", "site_nest")

names_agegrp <- "60+"
names_inlgc3 <- "Ineligible C3"

# Set names and exponentiation.
rvs_agegrp <- setNames(exp(rvs_beta[[1]][6]), names_agegrp)  
rvs_inlgc3 <- setNames(exp(rvs_beta[[1]][7]), names_inlgc3)  
rvs_region <- setNames(exp(rvs_region), region_lab[["label"]])
rvs_site   <- setNames(exp(rvs_site),   site_lab[["label"]])
rvs_epoch  <- setNames(exp(rvs_epoch),  epoch_lab[["label"]])

# Combine random variables and tabulate.
rvs_all <- c(rvs_trt, rvs_inlgc3, rvs_agegrp, rvs_region, rvs_site, rvs_epoch)

# Put the outcome table together.
make_outcome_table <- function(OR, format = "html", fn = NULL)
{
  out <- tibble(Parameter = names(OR),
                Mean = sprintf("%.2f", E(OR)),
                SD   = sprintf("%.2f", sd(OR)),
                Median = sprintf("%.2f", median(OR)),
                `95% CrI` = apply(quantile(OR, c(0.025, 0.975)), 2, function(x) 
                sprintf("(%.2f, %.2f)", x[1], x[2])),
                `Pr(OR < 1)` = sprintf("%.2f", Pr(OR < 1))) %>%
    kable(caption = "Model-estimated odds ratios for the shortness of breath at day 28.",
          format = format, digits = 2, booktabs = TRUE, linesep = "", align = "lrrrrr", longtable = TRUE) %>%
    kable_styling(latex_options = "HOLD_position", font_size = 8) %>%
    group_rows("Anticoagulation treatment", 1, 5) %>%
    group_rows("Age group", 6, 6) %>%
    group_rows("Country", 7, 10) %>%
    group_rows("Site", 11, 37) %>%
    group_rows("Epoch", 38, 49) %>%
    add_footnote("Note: Epoch is the 4-week interval relative to the most recently randomised participant.",
                 notation = "none", escape = TRUE)
  if (!is.null(fn) & format == "latex") {
    out
    save_tex_table(out, fn)
  } else {
    return(out)
  }
}

make_outcome_table(rvs_all)
make_outcome_table(rvs_all, format = "latex", fn = "7-6_shortness_of_breath")
```


## Sensitivity: Concurrent Controls

A sensitivity analysis is performed on the reduced concurrent control analysis sets for each intervention.

### Intermediate

```{r}
#| code-summary: Overview of outcome
#| tbl-cap: Summary of outcome for intermediate dose concurrent enrolments.
save_tex_table(
  make_summary_table(acs_itt_concurc2_dat, "latex"),
  "outcomes/secondary/7-6-anticoagulation-concurrent-intermediate-summary")
make_summary_table(acs_itt_concurc2_dat)
```

### Standard plus aspirin

```{r}
#| code-summary: Overview of outcome
#| tbl-cap: Summary of outcome for standard dose plus aspirin concurrent enrolments.
save_tex_table(
  make_summary_table(acs_itt_concurc3_dat, "latex"),
  "outcomes/secondary/7-6-anticoagulation-concurrent-stdaspirin-summary")
make_summary_table(acs_itt_concurc3_dat)
```

### Therapeutic

```{r}
#| code-summary: Overview of outcome
#| tbl-cap: Summary of outcome for therapeutic dose concurrent enrolments.
save_tex_table(
  make_summary_table(acs_itt_concurc4_dat, "latex"),
  "outcomes/secondary/7-6-anticoagulation-concurrent-therapeutic-summary")
make_summary_table(acs_itt_concurc4_dat)
```
