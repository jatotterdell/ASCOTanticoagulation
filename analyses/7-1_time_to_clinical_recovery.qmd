---
title: "7-1 Time to clinical recovery during the first 28 days"
description: |
  The first day, during the 28 days after enrolment, on which a patient satisfies categories 1, 2, or 3 on the WHO eight-point ordinal outcome scale (it will be assumed that the participant is not hospitalised on the first day following discharge and that on the day of discharge the participant is still considered hospitalised but not requiring supplemental oxygen nor ongoing medical care if the site has mistakenly indicated the patient was not hospitalised).
author:
  - name: James Totterdell
    affiliation: University of Sydney
  - name: Rob Mahar
    affiliation: University of Melbourne
date: today
---

# Preamble


```{r}
#| label: pkgs
#| code-summary: Load packages
library(tidyverse)
library(labelled)
library(kableExtra)
library(cmdstanr)
library(posterior)
library(bayestestR)
library(bayesplot)
library(matrixStats)
library(plotly)
library(lubridate)
library(ggdist)
library(patchwork)
library(VGAM)

theme_set(theme_classic(base_size = 10, base_family = "Palatino") +
  theme(panel.grid = element_blank(),
        strip.background = element_blank()))
bayesplot_theme_set(theme_set(theme_classic(base_size = 10, base_family = "Palatino") +
  theme(panel.grid = element_blank(),
        strip.background = element_blank())))
color_scheme_set("red")
options(digits = 4)
```

```{r}
#| label: models
#| code-summary: Load Models
mlogit_mod <- cmdstan_model("stan/tte/tte_competing_alt.stan")
mlogit_rw <- cmdstan_model("stan/tte/tte_competing_rw.stan")
mlogit_epoch <- cmdstan_model("stan/tte/tte_competing_epoch.stan")
mlogit_site_epoch <- cmdstan_model("stan/tte/tte_competing_site_epoch.stan") 
```

```{r}
#| label: helpers
#| code-smmary: Helper functions
mlogit <- function(x) exp(x) / (1 + rvar_sum(exp(x)))


make_ttr_summary <- function(dat, format = "html") {
  tdat <- dat %>%
    group_by(
      Intervention = 
        factor(CAssignment, 
               levels = c("C1", "C2", "C3", "C4"),
               labels = c("Low", "Intermediate", 
                          "Low with aspirin", "Therapeutic"))) %>%
    summarise(
      Randomised = n(),
      Known = sum(!is.na(out_ttr)),
      Died = sprintf("%i (%.1f)", sum(out_rec == 2), 100 * mean(out_rec == 2)),
      Recovered = sprintf("%i (%.1f)", sum(out_rec == 1), 100 * mean(out_rec == 1)),
      Unrecovered = sprintf("%i (%.1f)", sum(out_rec == 0), 100 * mean(out_rec == 0)),
      `TTR, Median (Q1, Q3)` = sprintf(
        "%i (%.2f, %.2f)",
        median(out_ttr[out_rec == 1]),
        quantile(out_ttr[out_rec == 1], 0.25),
        quantile(out_ttr[out_rec == 1], 0.75)
      )
    ) 
  kable(
    tdat,
    format = format,
    align = "lrrrrrr",
    booktabs = TRUE) %>%
    kable_styling(font_size = 9, latex_options = "HOLD_position")
}

make_odds_ratio_table <- function(drws, format = "html") {
  tdat <- as_tibble(drws$OR, rownames = "Factor") %>%
  pivot_longer(Recovery:Death) %>%
  mutate(name = factor(name, levels = c("Recovery", "Death"))) %>%
  arrange(name) %>%
  mutate(
    Median = sprintf("%.2f", median(value)),
    `95\\% CrI` = sprintf("(%.2f, %.2f)", quantile(value, 0.025), quantile(value, 0.975)),
    `Mean (SD)` = sprintf("%.2f (%.2f)", mean(value), sd(value)),
    `Pr(OR > 1)` = sprintf("%.2f", Pr(value > 1))
  )
  kable(
    tdat %>% select(-name, -value),
    format = format,
    align = "lrrrr",
    booktabs = TRUE,
    escape = F
  ) %>%
    kable_styling(
      font_size = 9,
      latex_options = "HOLD_position"
    ) %>%
    group_rows("Recovery", 1, nrow(drws$OR)) %>%
    group_rows("Death", nrow(drws$OR) + 1, 2*nrow(drws$OR))
}

get_arm_specific_probs <- function(drws, shift = FALSE) {
  haztbl <- vector("list", nrow(drws$Ccon))
  names(haztbl) <- rownames(drws$Ccon)
  if(shift) {
    alph <- drws$alpha_shift
  } else {
    alph <- drws$alpha
  }
  for (k in 1:nrow(drws$Ccon)) {
    haz <- t(do.call(cbind, apply(sweep(alph, 2, drws$Ccon[k, ], "+"), 1, mlogit)))
    haz <- cbind(1 - (haz[, 1] + haz[, 2]), haz)
    colnames(haz) <- c("haz0", "haz1", "haz2")
    haztbl[[k]] <- bind_cols(time = 1:28, as_tibble(haz)) %>%
      mutate(
        surv = cumprod(haz0),
        prob1 = haz1 * lag(surv, default = rvar(1)),
        prob2 = haz2 * lag(surv, default = rvar(1)),
        cprob1 = cumsum(prob1),
        cprob2 = cumsum(prob2)
      )
  }
  out <- bind_rows(haztbl, .id = "intervention")
  return(out)
}

plot_baseline_hazard <- function(drws) {
  as_tibble(drws$alpha, rownames = "day") %>%
    mutate(day = as.numeric(day)) %>%
    rename(Recovery = V1, Death = V2) %>%
    pivot_longer(Recovery:Death) %>%
    ggplot(., 
           aes(xdist=value, y = day)) + 
    facet_wrap( ~ name, scales = "free_x") +
    stat_pointinterval() +
    labs(x = "Baseline cause-specific hazard (logit)", y = "Study day") +
    scale_y_continuous(breaks = c(1, 7, 14, 21, 28))
}
```

```{r}
#| label: data
#| code-summary: Prepare dataset
devtools::load_all()
all_dat <- read_all_no_daily()

acs_itt_dat <- all_dat %>% 
  filter_acs_itt() %>%
  transmute_model_cols_grp_aus_nz()
acs_itt_nona_dat <- acs_itt_dat %>% 
  filter(!is.na(out_ttr))

ttr_seq <- expand_grid(
  StudyPatientID = unique(acs_itt_nona_dat$StudyPatientID),
  time = 1:28)
acs_itt_outdat <- acs_itt_nona_dat %>%
  left_join(ttr_seq, by = "StudyPatientID") %>%
  filter(time <= out_ttr) %>%
  mutate(
    y = if_else(out_ttr == time, out_rec, 0),
    y0 = if_else(out_ttr > time | out_ttr == time & out_rec == 0, 1, 0), # Not recovered or died
    y1 = if_else(out_ttr == time & out_rec == 1, 1, 0), # Recovered
    y2 = if_else(out_ttr == time & out_rec == 2, 1, 0)  # Died
  )
acs_itt_outdat_agg <- acs_itt_outdat %>%
  complete(CAssignment, time, fill = list(y = 0)) %>%
  group_by(CAssignment, time) %>%
  summarise(n = n(), y1 = sum(y == 1), y2 = sum(y == 2), .groups = "drop") %>%
  group_by(CAssignment) %>%
  mutate(cy1 = cumsum(y1), 
         cp1 = cy1 / n[1],
         cy2 = cumsum(y2),
         cp2 = cy2 / n[1],
         cpn = (n[1] - cy1 - cy2) / n[1]) %>%
  ungroup() %>%
  mutate(CAssignment = factor(
    CAssignment, labels = str_replace(intervention_labels()$CAssignment[-1], "<br>", " ")))


acs_itt_concurc2_dat <- acs_itt_dat %>%
  filter_concurrent_intermediate()
acs_itt_concurc2_nona_dat <- acs_itt_concurc2_dat %>% 
  filter(!is.na(out_ttr)) %>%
  left_join(ttr_seq, by = "StudyPatientID") %>%
  filter(time <= out_ttr) %>%
  mutate(
    y = if_else(out_ttr == time, out_rec, 0),
    y0 = if_else(out_ttr > time | out_ttr == time & out_rec == 0, 1, 0), # Not recovered or died
    y1 = if_else(out_ttr == time & out_rec == 1, 1, 0), # Recovered
    y2 = if_else(out_ttr == time & out_rec == 2, 1, 0)  # Died
  )

# Aspirin
acs_itt_concurc3_dat <- acs_itt_dat %>%
  filter_concurrent_std_aspirin()
acs_itt_concurc3_nona_dat <- acs_itt_concurc3_dat %>% 
  filter(!is.na(out_ttr)) %>%
  left_join(ttr_seq, by = "StudyPatientID") %>%
  filter(time <= out_ttr) %>%
  mutate(
    y = if_else(out_ttr == time, out_rec, 0),
    y0 = if_else(out_ttr > time | out_ttr == time & out_rec == 0, 1, 0), # Not recovered or died
    y1 = if_else(out_ttr == time & out_rec == 1, 1, 0), # Recovered
    y2 = if_else(out_ttr == time & out_rec == 2, 1, 0)  # Died
  )

acs_itt_concurc4_dat <- acs_itt_dat %>%
  filter_concurrent_therapeutic()
acs_itt_concurc4_nona_dat <- acs_itt_concurc4_dat %>% 
  filter(!is.na(out_ttr)) %>%
  left_join(ttr_seq, by = "StudyPatientID") %>%
  filter(time <= out_ttr) %>%
  mutate(
    y = if_else(out_ttr == time, out_rec, 0),
    y0 = if_else(out_ttr > time | out_ttr == time & out_rec == 0, 1, 0), # Not recovered or died
    y1 = if_else(out_ttr == time & out_rec == 1, 1, 0), # Recovered
    y2 = if_else(out_ttr == time & out_rec == 2, 1, 0)  # Died
  )
```


# Derivation

Time to clinical recovery is taken as the first day from the index admission at which the patient had a WHO outcome score of 3 or less. If a participant died before recovery, then they are treated as censored at the day of death. No allowance is made for participants who recovered but then subsequently died (i.e. they are just counted as recovered on the relevant day). If recovery and death reportedly occurred on the same day (e.g. daily status WHO scale < 4 but discharge outcome of death on same day), then the patient is considered to have not recovered. For participants whose WHO outcome score was greater than 3 on the day of discharge, their day of recovery was counted as the first day after discharge.

# Descriptive

## Time to recovery

```{r}
#| tbl-cap: Summary of time to recovery to day 28 by anticoagulation intervention.
save_tex_table(
  make_ttr_summary(acs_itt_dat, "latex"),
  file.path("outcomes", "secondary", "7-1-acs-itt-summary")
)
make_ttr_summary(acs_itt_dat)
```


```{r}
#| label: fig-ttr-dist
#| fig-cap: |
#|   Distribution of time to recovery. 
acs_itt_nona_dat %>%
  dplyr::count(out_rec, out_ttr) %>%
  ggplot(., aes(out_ttr, n, fill = factor(out_rec, labels = c("censored", "recovered", "died")))) +
  geom_col() +
  scale_x_continuous(breaks = 1:28) +
  scale_fill_viridis_d(option = "A", begin = 0.2, end = 0.8) +
  labs(x = "Time to recovery (to day 28)", y = "Count", fill = "Outcome")
```

## Anticoagulation

```{r}
#| label: fig-7-1-anticoagulation
#| fig-cap: |
#|   Progression to recovery by anticoagulation intervention.
p <- acs_itt_outdat_agg %>% 
  select(-y1, -y2, -cy1, -cy2) %>% 
  pivot_longer(cp1:cpn) %>% 
  mutate(name = factor(
    name, 
    levels = c("cp1", "cp2", "cpn"), 
    labels = c("Recovered", "Died", "Not recovered"))) %>%
  ggplot(., aes(time, value, fill = name, colour = name)) + 
  facet_wrap(~CAssignment) + 
  geom_col(width = 1) +
  scale_fill_viridis_d(option = "B", begin = 0.2, end = 0.8) +
  scale_colour_viridis_d(option = "B", begin = 0.2, end = 0.8) +
  scale_x_continuous(breaks = c(1, 7, 14, 21, 28)) +
  labs(x = "Study day", y = "Cumulative proportion", fill = "Status", colour = "Status") +
  theme(panel.grid.minor = element_blank())
path <- file.path("outputs", "figures", "outcomes", "secondary")
ggsave(file.path(path, "outcome-7-1-descriptive.pdf"), p, height = 2.5, width = 6)
p
```

```{r}
#| label: fig-7-1-anticoagulation-alt
#| fig-cap: |
#|   Progression to recovery by anticoagulation intervention.
p <- acs_itt_outdat_agg %>% 
  select(-y1, -y2, -cy1, -cy2) %>% 
  pivot_longer(cp1:cpn) %>% 
  mutate(name = factor(
    name, 
    levels = c("cp1", "cp2", "cpn"), 
    labels = c("Recovered", "Died", "Not recovered"))) %>%
  ggplot(., aes(time, value, colour = CAssignment)) + 
  facet_wrap(~ name, scales = "free_y") + 
  geom_step() +
  scale_colour_viridis_d(option = "B", begin = 0.2, end = 0.8) +
  scale_x_continuous(breaks = c(1, 7, 14, 21, 28)) +
  labs(x = "Study day", y = "Cumulative proportion", colour = "Intervention") +
  theme(panel.grid.minor = element_blank(),
        legend.position = "bottom") +
  guides(colour = guide_legend(title.position="top", title.hjust = 0.5))
path <- file.path("outputs", "figures", "outcomes", "secondary")
ggsave(file.path(path, "outcome-7-1-descriptive-alt.pdf"), p, height = 2.5, width = 6)
p
```

## Age

```{r}
#| label: fig-7-1-age
#| fig-cap: |
#|   Progression to recovery by anticoagulation intervention.
tmp_agg <- acs_itt_outdat %>%
  complete(agegte60, time, fill = list(y = 0)) %>%
  group_by(agegte60, time) %>%
  summarise(n = n(), y1 = sum(y == 1), y2 = sum(y == 2), .groups = "drop") %>%
  group_by(agegte60) %>%
  mutate(cy1 = cumsum(y1), 
         cp1 = cy1 / n[1],
         cy2 = cumsum(y2),
         cp2 = cy2 / n[1],
         cy0 = (n[1] - cy1 - cy2),
         cpn = (n[1] - cy1 - cy2) / n[1]) %>%
  ungroup() %>%
  mutate(agegte60 = factor(agegte60, levels = c(0, 1), labels = c("Age < 60", "Age \u2265 60")))
p <- tmp_agg %>% 
  select(-y1, -y2, -cp1, -cp2, -cpn) %>% 
  pivot_longer(cy1:cy0) %>% 
  mutate(name = factor(
    name, 
    levels = c("cy1", "cy2", "cy0"), 
    labels = c("Recovered", "Died", "Not recovered"))) %>%
  ggplot(., aes(time, value, fill = name, colour = name)) + 
  facet_wrap(~agegte60, scales = "free_y") + 
  geom_col(width = 1) +
  scale_fill_viridis_d(option = "B", begin = 0.2, end = 0.8) +
  scale_colour_viridis_d(option = "B", begin = 0.2, end = 0.8) +
  scale_x_continuous(breaks = c(1, 7, 14, 21, 28)) +
  labs(x = "Study day", y = "Cumulative proportion", fill = "Status", colour = "Status") +
  theme(panel.grid.minor = element_blank())
path <- file.path("outputs", "figures", "outcomes", "secondary")
ggsave(file.path(path, "7-1-age.pdf"), p, height = 2, width = 6)
p
```

## Country

```{r}
#| label: fig-7-1-country
#| fig-cap: |
#|   Progression to recovery by country.
tmp_agg <- acs_itt_outdat %>%
  complete(country, time, fill = list(y = 0)) %>%
  group_by(country, time) %>%
  summarise(n = n(), y1 = sum(y == 1), y2 = sum(y == 2), .groups = "drop") %>%
  group_by(country) %>%
  mutate(cy1 = cumsum(y1), 
         cp1 = cy1 / n[1],
         cy2 = cumsum(y2),
         cp2 = cy2 / n[1],
         cy0 = (n[1] - cy1 - cy2),
         cpn = (n[1] - cy1 - cy2) / n[1]) %>%
  ungroup() %>%
  mutate(country = factor(country, levels = c("IN", "AU", "NP", "NZ"),
                          labels = c("India", "Australia", "Nepal", "New Zealand")))
p <- tmp_agg %>% 
  select(-y1, -y2, -cp1, -cp2, -cpn) %>% 
  pivot_longer(cy1:cy0) %>% 
  mutate(name = factor(
    name, 
    levels = c("cy1", "cy2", "cy0"), 
    labels = c("Recovered", "Died", "Not recovered"))) %>%
  ggplot(., aes(time, value, fill = name, colour = name)) + 
  facet_wrap(~country, scales = "free_y") + 
  geom_col(width = 1) +
  scale_fill_viridis_d(option = "B", begin = 0.2, end = 0.8) +
  scale_colour_viridis_d(option = "B", begin = 0.2, end = 0.8) +
  scale_x_continuous(breaks = c(1, 7, 14, 21, 28)) +
  labs(x = "Study day", y = "Cumulative count", fill = "Status", colour = "Status") +
  theme(panel.grid.minor = element_blank())
path <- file.path("outputs", "figures", "outcomes", "secondary")
ggsave(file.path(path, "7-1-country.pdf"), p, height = 2.5, width = 6)
p
```

## Calender Time

```{r}
#| label: fig-7-1-calender-tiime
#| fig-cap: |
#|   Progression to recovery by calendar time
tmp_agg <- acs_itt_outdat %>%
  mutate(yr = year(RandDate), mth = month(RandDate)) %>%
  complete(nesting(yr, mth), time, fill = list(y = 0)) %>%
  group_by(yr, mth, time) %>%
  summarise(n = n(), y1 = sum(y == 1), y2 = sum(y == 2), .groups = "drop") %>%
  group_by(yr, mth) %>%
  mutate(cy1 = cumsum(y1), 
         cp1 = cy1 / n[1],
         cy2 = cumsum(y2),
         cp2 = cy2 / n[1],
         cy0 = (n[1] - cy1 - cy2),
         cpn = (n[1] - cy1 - cy2) / n[1]) %>%
  ungroup() %>%
  mutate(label = fct_inorder(paste(yr, mth, sep = "-")))
p <- tmp_agg %>% 
  select(-y1, -y2, -cp1, -cp2, -cpn) %>% 
  pivot_longer(cy1:cy0) %>% 
  mutate(name = factor(
    name, 
    levels = c("cy1", "cy2", "cy0"), 
    labels = c("Recovered", "Died", "Not recovered"))) %>%
  ggplot(., aes(time, value, fill = name, colour = name)) + 
  facet_wrap(~label, scales = "free_y", ncol = 5) + 
  geom_col(width = 1) +
  scale_fill_viridis_d(option = "B", begin = 0.2, end = 0.8) +
  scale_colour_viridis_d(option = "B", begin = 0.2, end = 0.8) +
  scale_x_continuous(breaks = c(1, 7, 14, 21, 28)) +
  labs(x = "Study day", y = "Cumulative count", fill = "Status", colour = "Status") +
  theme(panel.grid.minor = element_blank(),
        legend.position = "bottom")
path <- file.path("outputs", "figures", "outcomes", "secondary")
ggsave(file.path(path, "7-1-calendar-time.pdf"), p, height = 4, width = 6)
p
```

## Site

```{r}
#| label: fig-7-1-site
#| fig-cap: |
#|   Progression to recovery by site.
tmp_agg <- acs_itt_outdat %>%
  complete(nesting(country, site_raw), time, fill = list(y = 0)) %>%
  mutate(site_raw = fct_infreq(site_raw)) %>%
  group_by(country, site_raw, time) %>%
  summarise(n = n(), y1 = sum(y == 1), y2 = sum(y == 2), .groups = "drop") %>%
  group_by(country, site_raw) %>%
  mutate(cy1 = cumsum(y1), 
         cp1 = cy1 / n[1],
         cy2 = cumsum(y2),
         cp2 = cy2 / n[1],
         cy0 = (n[1] - cy1 - cy2),
         cpn = (n[1] - cy1 - cy2) / n[1]) %>%
  ungroup()

plot_country <- function(ctr, ncol = 2) {
  tmp_agg %>% 
    filter(country == ctr) %>%
    select(-y1, -y2, -cp1, -cp2, -cpn) %>% 
    pivot_longer(cy1:cy0) %>% 
    mutate(name = factor(
      name, 
      levels = c("cy1", "cy2", "cy0"), 
      labels = c("Recovered", "Died", "Not recovered"))) %>%
    ggplot(., aes(time, value, fill = name, colour = name)) + 
    facet_wrap( ~ site_raw, scales = "free_y", ncol = ncol) + 
    geom_col(width = 1) +
    scale_fill_viridis_d(option = "B", begin = 0.2, end = 0.8) +
    scale_colour_viridis_d(option = "B", begin = 0.2, end = 0.8) +
    scale_x_continuous(breaks = c(1, 7, 14, 21, 28)) +
    scale_y_continuous(breaks = function(x) unique(floor(pretty(seq(0, (max(x) + 1) * 1.1))))) +
    labs(x = "Study day", y = "Cumulative\ncount", fill = "Status", colour = "Status") +
    theme(panel.grid.minor = element_blank(),
          legend.position = "bottom",
          plot.title = element_text(size = rel(1), face = "bold"))
}

p_in <- plot_country("IN", 6) + labs(title = "Sites India")
p_au <- plot_country("AU", 6) + labs(title = "Sites Australia")
p_np <- plot_country("NP", 2) + labs(title = "Sites Nepal")
p_nz <- plot_country("NZ", 4) + labs(title = "Sites New Zealand")
p1 <- p_in / p_au
p2 <- (p_np | p_nz) + plot_layout(widths = c(1, 2))
p <- (p1 / p2) + 
  plot_layout(guides = "collect", heights = c(2,3.5,1)) &
  theme(legend.position='bottom')
path <- file.path("outputs", "figures", "outcomes", "secondary")
ggsave(file.path(path, "7-1-country-site.pdf"), p, height = 7, width = 6)
p
```


# Modelling

Time to clinical recovery will be analysed using a multinomial logit model for the cause-specific hazard functions where the events considered are recovery ($r=1$) or death by day 28 ($r=2$),
$$
\lambda_r(t) = \frac{\exp(\alpha_{tr} + x^{\mathsf{T}}\beta_r)}{1 + \sum_{j=1}^2 \exp(\alpha_{tj} + x^{\mathsf{T}}\beta_j)}, 
\quad r=1,2, \quad t=1,...,T
$$
Under this model, the coefficient $\exp(\beta_{rj})$ denotes the factor by which the cause-specific odds change for a one unit change in $x_j$ (assumed constant over all $t$), e.g.
$$
\ln\left(\frac{\lambda_r(t|x)}{\lambda_0(t|x)}\right) = \alpha_{tr} + x^\mathsf{T}\beta_r
$$
where
$$
\lambda_0(t|x) = 1 - \sum_{r=1}^R\lambda_r(t|x) = \frac{1}{1 + \sum_{j=1}^2 \exp(\alpha_{tj} + x^{\mathsf{T}}\beta_j)}
$$
denotes conditional survival (i.e not event).

## Primary Model

```{r}
#| code-summary: Prepare data
X <- make_X_design(acs_itt_outdat, c("inelgc3", "agegte60", "ctry"))
Xm <- X[, -1]
epoch <- acs_itt_outdat$epoch
M_epoch <- max(acs_itt_outdat$epoch)
region <- acs_itt_outdat$ctry_num
M_region <- max(region)
site <- acs_itt_outdat$site_num
M_site <- max(site)
region_by_site <- acs_itt_outdat %>% 
  dplyr::count(ctry_num, site_num) %>% 
  pull(ctry_num)
sdat <- list(
  N = nrow(acs_itt_outdat),
  R = 2,
  K = ncol(Xm),
  M_region = M_region,
  M_site = M_site,
  M_epoch = M_epoch,
  T = 28,
  time = acs_itt_outdat$time,
  site = site,
  region_by_site = region_by_site,
  epoch = epoch,
  X = Xm,
  y = as.matrix(acs_itt_outdat[, c("y0", "y1", "y2")]),
  beta_sd = c(1, 1, 1, 1, 1, 10, 2.5, 1, 1)
)
```

```{r}
#| eval: false
#| code-summary: Fit model
fit <- mlogit_site_epoch$sample(
  data = sdat, 
  chains = 3,
  parallel_chains = 3,
  iter_sampling = 500, 
  iter_warmup = 250,
  adapt_delta = 0.99)
fit$save_object(file.path("outputs", "models", "secondary", "7-1-ttr", "primary.rds"))
```

```{r}
fit <- readRDS(file.path("outputs", "models", "secondary", "7-1-ttr", "primary.rds"))
drws <- as_draws_rvars(fit$draws())
rownames(drws$beta) <- colnames(sdat$X)
epoch_map <- acs_itt_outdat %>% dplyr::count(epoch, epoch_lab)
site_map <- acs_itt_outdat %>% dplyr::count(site_num, site)
rownames(drws$gamma_site) <- site_map$site
rownames(drws$gamma_epoch) <- epoch_map$epoch_lab
drws$Ccon <- contr.orthonorm(4) %**% drws$beta[1:3, ]
rownames(drws$Ccon) <- c("Low", "Intermediate", "Low with aspirin", "Therapeutic")
drws$Ctrt <- drws$Ccon[-1, ] - drws$Ccon[1, ]
drws$shift <- rvar_apply(sweep(drws$beta[6:9, ], 1, colMeans(sdat$X)[6:9], "*"), 2, rvar_sum)
drws$alpha_shift <- sweep(drws$alpha, 2, drws$shift, "+")
drws$OR <- exp(rbind(drws$Ctrt, drws$beta[-(1:5), ]))
rownames(drws$OR)[-(1:3)] <- c("Ineligible aspirin", "Age \u2265 60", "Australia/New Zealand", "Nepal")
colnames(drws$OR) <- c("Recovery", "Death")
```

```{r}
save_tex_table(
  make_odds_ratio_table(drws, format = "latex"),
  "outcomes/secondary/7-1-primary-model-acs-itt-summary-table"
)
make_odds_ratio_table(drws)
```

```{r}
p1 <- plot_epoch_site_terms(
  exp(drws$gamma_epoch)[, 1], 
  exp(drws$gamma_site)[, 1],
  factor(
    sdat$region_by_site, 
    labels = c("India", "Australia\nNew Zealand", "Nepal"))) +
  plot_annotation(title = "Recovery")
p2 <- plot_epoch_site_terms(
  exp(drws$gamma_epoch)[, 2], 
  exp(drws$gamma_site)[, 2],
  factor(
    sdat$region_by_site, 
    labels = c("India", "Australia\nNew Zealand", "Nepal"))) +
  plot_annotation(title = "Death")
pth <- file.path("outputs", "figures", "outcomes", "secondary", 
                 "7-1-primary-model-acs-itt-epoch-site-recovery.pdf")
ggsave(pth, p1, width = 6, height = 4.5)
pth <- file.path("outputs", "figures", "outcomes", "secondary", 
                 "7-1-primary-model-acs-itt-epoch-site-death.pdf")
ggsave(pth, p2, width = 6, height = 4.5)
p1
p2
```

```{r}
#| fig-cap: Baseline hazard (logit) for death and recovery.
p <- plot_baseline_hazard(drws) +
  coord_flip()
ggsave(
  file.path("outputs", "figures", "outcomes", "secondary", "7-1-acs-itt-baseline-haz.pdf"),
  p, height = 3, width = 6
)
p
```

## Sensitivity: Concurrent Enrolements

### Intermediate dose

```{r}
#| tbl-cap: Summary of time to recovery to day 28 by anticoagulation intervention.
save_tex_table(
  make_ttr_summary(acs_itt_concurc2_dat, "latex"),
  file.path("outcomes", "secondary", "7-1-acs-itt-intermediate-summary")
)
make_ttr_summary(acs_itt_concurc2_dat)
```

```{r}
#| label: fig-7-1-anticoagulation-acs-itt-intermediate
#| fig-cap: |
#|   Progression to recovery by anticoagulation intervention.
p <- acs_itt_concurc2_nona_dat %>%
  complete(CAssignment, time, fill = list(y = 0)) %>%
  group_by(CAssignment, time) %>%
  summarise(n = n(), y1 = sum(y == 1), y2 = sum(y == 2), .groups = "drop") %>%
  group_by(CAssignment) %>%
  mutate(cy1 = cumsum(y1), 
         cp1 = cy1 / n[1],
         cy2 = cumsum(y2),
         cp2 = cy2 / n[1],
         cpn = (n[1] - cy1 - cy2) / n[1]) %>%
  ungroup() %>%
  mutate(CAssignment = factor(
    CAssignment, 
    levels = c("C1", "C2", "C3", "C4"), 
    labels = str_replace(intervention_labels()$CAssignment[-1], "<br>", " "))) %>%
  select(-y1, -y2, -cy1, -cy2) %>% 
  pivot_longer(cp1:cpn) %>% 
  mutate(name = factor(
    name, 
    levels = c("cp1", "cp2", "cpn"), 
    labels = c("Recovered", "Died", "Not recovered"))) %>%
  ggplot(., aes(time, value, fill = name, colour = name)) + 
  facet_wrap(~CAssignment) + 
  geom_col(width = 1) +
  scale_fill_viridis_d(option = "B", begin = 0.2, end = 0.8) +
  scale_colour_viridis_d(option = "B", begin = 0.2, end = 0.8) +
  scale_x_continuous(breaks = c(1, 7, 14, 21, 28)) +
  labs(x = "Study day", y = "Cumulative proportion", fill = "Status", colour = "Status") +
  theme(panel.grid.minor = element_blank())
path <- file.path("outputs", "figures", "outcomes", "secondary")
ggsave(
  file.path(path, "outcome-7-1-descriptive-acs-itt-intermediate.pdf"), 
  p, height = 2.5, width = 6)
p
```

```{r}
# Sanity check frequentist fit with smoothed time
freqfit <-vgam(
  cbind(y0, y1, y2) ~ s(time) + CAssignment + agegte60 + ctry, 
  multinomial(refLevel = 1), 
  data = acs_itt_concurc2_nona_dat)

X <- make_X_design(
  acs_itt_concurc2_nona_dat, 
  c("agegte60", "ctry"), 
  includeA = FALSE)
Xm <- X[, -1]
sdat <- list(
  N = nrow(acs_itt_concurc2_nona_dat),
  R = 2,
  K = ncol(Xm),
  T = 28,
  time = acs_itt_concurc2_nona_dat$time,
  X = Xm,
  y = as.matrix(acs_itt_concurc2_nona_dat[, c("y0", "y1", "y2")]),
  beta_sd = c(1, 2.5, 1, 1)
)
```

```{r}
#| eval: false
#| code-summary: Fit and save the model
fit <- mlogit_rw$sample(
  data = sdat, 
  seed = 71252,
  chains = 4,
  parallel_chains = parallel::detectCores(),
  iter_sampling = 2500, 
  iter_warmup = 250,
  adapt_delta = 0.95)
fit$save_object(file.path("outputs", "models", "secondary", "7-1-ttr", "concurc2.rds"))
```

```{r}
fit <- readRDS(file.path("outputs", "models", "secondary", "7-1-ttr", "concurc2.rds"))
drws <- as_draws_rvars(fit$draws())
rownames(drws$beta) <- colnames(sdat$X)
drws$Ccon <- contr.orthonorm(2) %**% drws$beta[1, ]
rownames(drws$Ccon) <- c("Low", "Intermediate")
drws$Ctrt <- drws$Ccon[-1, ] - drws$Ccon[1, ]
drws$shift <- rvar_apply(sweep(drws$beta[2:4, ], 1, colMeans(sdat$X)[2:4], "*"), 2, rvar_sum)
drws$alpha_shift <- sweep(drws$alpha, 2, drws$shift, "+")
drws$OR <- exp(rbind(
  drws$Ctrt,
  drws$beta[-1, ]
))
rownames(drws$OR) <- c("Intermediate", "Age \u2265 60", "Australia/New Zealand", "Nepal")
colnames(drws$OR) <- c("Recovery", "Death")
```

```{r}
save_tex_table(
  make_odds_ratio_table(drws, format = "latex"),
  "outcomes/secondary/7-1-primary-model-acs-itt-intermediate-summary-table"
)
make_odds_ratio_table(drws)
```

```{r}
#| fig-cap: Baseline hazard (logit) for death and recovery.
p <- plot_baseline_hazard(drws) +
  coord_flip()
ggsave(
  file.path("outputs", "figures", "outcomes", "secondary", 
            "7-1-concurrent-intermediate-baseline-haz.pdf"),
  p, height = 3, width = 6
)
p
```

```{r}
#| fig-cap: |
#|   Intervention specific recovery progression (India, age < 60).
haz <- get_arm_specific_probs(drws, TRUE) %>%
  mutate(intervention = fct_inorder(intervention))
pdat <- haz %>% 
  select(intervention, time, unrecovered = surv, recovered = cprob1, died = cprob2) %>%
  pivot_longer(unrecovered:died, names_to = "event", values_to = "posterior")
obsdat <- acs_itt_concurc2_nona_dat %>%
  # filter(ctry == "IN", agegte60 == 0) %>%
  complete(CAssignment, time, fill = list(y = 0)) %>%
  group_by(intervention = factor(CAssignment, labels = c("Low", "Intermediate")), time) %>%
  summarise(n = n(), y1 = sum(y == 1), y2 = sum(y == 2), .groups = "drop") %>%
  group_by(intervention) %>%
  mutate(cy1 = cumsum(y1), 
         recovered = cy1 / n[1],
         cy2 = cumsum(y2),
         died = cy2 / n[1],
         unrecovered = (n[1] - cy1 - cy2) / n[1]) %>%
  ungroup() %>%
  pivot_longer(c(unrecovered, recovered, died), names_to = "event", values_to = "proportion")
p <- ggplot(pdat, aes(time, fill = event, colour = event)) +
  facet_wrap( ~ intervention) +
  geom_rect(aes(xmin = time, 
                xmax = time + 1,
                ymin = quantile(posterior, 0.025), 
                ymax = quantile(posterior, 0.975)),
              alpha = 0.25, colour = NA) +
  geom_step(aes(y = median(posterior))) +
  geom_point(data = obsdat, aes(y = proportion, x = time + 0.5)) +
  scale_fill_viridis_d("Event", option = "B", begin = 0.2, end = 0.8) +
  scale_colour_viridis_d("Event", option = "B", begin = 0.2, end = 0.8) +
  scale_x_continuous("Day", breaks = c(1, 7, 14, 21, 28), limits = c(1, 28)) +
  labs(y = "Proportion")
ggsave(
  file.path(
    "outputs", "figures", "outcomes", "secondary", 
    "7-1-concurrent-intermediate-marginal-ttr.pdf"),
  p, height = 2.5, width = 6
)
p
```

### Low-dose with aspirin

```{r}
#| tbl-cap: Summary of time to recovery to day 28 by anticoagulation intervention.
save_tex_table(
  make_ttr_summary(acs_itt_concurc3_dat, "latex"),
  file.path("outcomes", "secondary", "7-1-acs-itt-stdaspirin-summary")
)
make_ttr_summary(acs_itt_concurc3_dat)
```

```{r}
#| label: fig-7-1-anticoagulation-stdaspirin
#| fig-cap: |
#|   Progression to recovery by anticoagulation intervention.
p <- acs_itt_concurc3_nona_dat %>%
  complete(CAssignment, time, fill = list(y = 0)) %>%
  group_by(CAssignment, time) %>%
  summarise(n = n(), y1 = sum(y == 1), y2 = sum(y == 2), .groups = "drop") %>%
  group_by(CAssignment) %>%
  mutate(cy1 = cumsum(y1), 
         cp1 = cy1 / n[1],
         cy2 = cumsum(y2),
         cp2 = cy2 / n[1],
         cpn = (n[1] - cy1 - cy2) / n[1]) %>%
  ungroup() %>%
  mutate(CAssignment = factor(
    CAssignment, 
    levels = c("C1", "C2", "C3", "C4"), 
    labels = str_replace(intervention_labels()$CAssignment[-1], "<br>", " "))) %>%
  select(-y1, -y2, -cy1, -cy2) %>% 
  pivot_longer(cp1:cpn) %>% 
  mutate(name = factor(
    name, 
    levels = c("cp1", "cp2", "cpn"), 
    labels = c("Recovered", "Died", "Not recovered"))) %>%
  ggplot(., aes(time, value, fill = name, colour = name)) + 
  facet_wrap(~CAssignment) + 
  geom_col(width = 1) +
  scale_fill_viridis_d(option = "B", begin = 0.2, end = 0.8) +
  scale_colour_viridis_d(option = "B", begin = 0.2, end = 0.8) +
  scale_x_continuous(breaks = c(1, 7, 14, 21, 28)) +
  labs(x = "Study day", y = "Cumulative proportion", fill = "Status", colour = "Status") +
  theme(panel.grid.minor = element_blank())
path <- file.path("outputs", "figures", "outcomes", "secondary")
ggsave(
  file.path(path, "outcome-7-1-descriptive-acs-itt-stdaspirin.pdf"), 
  p, height = 2.5, width = 6)
p
```

```{r}
#| code-summary: Fit and save the model
X <- make_X_design(
  acs_itt_concurc3_nona_dat, 
  c("agegte60", "ctry"), 
  includeA = F)
Xm <- X[, -1]
sdat <- list(
  N = nrow(acs_itt_concurc3_nona_dat),
  R = 2,
  K = ncol(Xm),
  T = 28,
  time = acs_itt_concurc3_nona_dat$time,
  X = Xm,
  y = as.matrix(acs_itt_concurc3_nona_dat[, c("y0", "y1", "y2")]),
  beta_sd = c(1, 1, 2.5, 1)
)
```

```{r}
#| code-summary: Fit and save the model
#| eval: false  
fit <- mlogit_rw$sample(
  data = sdat, 
  seed = 12085,
  chains = 8,
  parallel_chains = min(8, parallel::detectCores()),
  iter_sampling = 2500, 
  iter_warmup = 1000,
  adapt_delta = 0.99
)
# Save model to outputs
fit$save_output_files(
  dir = file.path("outputs", "models", "secondary", "7-1-ttr"),
  basename = "concurc3",
  timestamp = FALSE, 
  random = FALSE)
fit$save_object(file.path("outputs", "models", "secondary", "7-1-ttr", "concurc3.rds"))
```

```{r}
#| code-summary: Load the model and summarise draws
fit <- as_cmdstan_fit(
  grep("concurc3-[0-9].csv", 
       list.files(
         file.path("outputs", "models", "secondary", "7-1-ttr"), 
         full.names = T), 
       value = T)
)

drws <- as_draws_rvars(fit$draws())
rownames(drws$beta) <- colnames(sdat$X)
drws$Ccon <- attr(X, "contrasts")$randC %**% drws$beta[1:2, ]
rownames(drws$Ccon) <- c("Low", "Intermediate", "Low with aspirin")
drws$Ctrt <- drws$Ccon[-1, ] - drws$Ccon[1, ]
drws$shift <- rvar_apply(sweep(drws$beta[3:4, ], 1, colMeans(sdat$X)[3:4], "*"), 2, rvar_sum)
drws$alpha_shift <- sweep(drws$alpha, 2, drws$shift, "+")
drws$OR <- exp(rbind(
  drws$Ctrt,
  drws$beta[-(1:2), ]
))
rownames(drws$OR) <- c("Intermediate", "Low with aspirin", "Age \u2265 60", "Australia/New Zealand")
colnames(drws$OR) <- c("Recovery", "Death")
```

```{r}
save_tex_table(
  make_odds_ratio_table(drws, format = "latex"),
  "outcomes/secondary/7-1-primary-model-acs-itt-stdaspirin-summary-table"
)
make_odds_ratio_table(drws)
```

```{r}
p <- plot_baseline_hazard(drws) +
  coord_flip()
ggsave(
  file.path(
    "outputs", "figures", "outcomes", "secondary", 
    "7-1-concurrent-stdaspirin-baseline-haz.pdf"),
  p, height = 3, width = 6
)
p
```

```{r}
#| fig-cap: |
#|   Intervention specific recovery progression (India, age < 60).
haz <- get_arm_specific_probs(drws, TRUE) %>%
  mutate(intervention = fct_inorder(intervention))
pdat <- haz %>% 
  select(intervention, time, unrecovered = surv, recovered = cprob1, died = cprob2) %>%
  pivot_longer(unrecovered:died, names_to = "event", values_to = "posterior")
obsdat <- acs_itt_concurc3_nona_dat %>%
  # filter(ctry == "IN", agegte60 == 0) %>%
  complete(CAssignment, time, fill = list(y = 0)) %>%
  group_by(intervention = 
             factor(CAssignment, 
                    labels = c("Low", "Intermediate", "Low with aspirin")), 
           time) %>%
  summarise(n = n(), y1 = sum(y == 1), y2 = sum(y == 2), .groups = "drop") %>%
  group_by(intervention) %>%
  mutate(cy1 = cumsum(y1), 
         recovered = cy1 / n[1],
         cy2 = cumsum(y2),
         died = cy2 / n[1],
         unrecovered = (n[1] - cy1 - cy2) / n[1]) %>%
  ungroup() %>%
  pivot_longer(c(unrecovered, recovered, died), names_to = "event", values_to = "proportion")

p <- ggplot(pdat, aes(time, fill = event, colour = event)) +
  facet_wrap( ~ intervention) +
  geom_rect(aes(xmin = time, 
                xmax = time + 1,
                ymin = quantile(posterior, 0.025), 
                ymax = quantile(posterior, 0.975)),
              alpha = 0.25, colour = NA) +
  geom_step(aes(y = median(posterior))) +
  geom_point(data = obsdat, aes(y = proportion, x = time + 0.5)) +
  scale_fill_viridis_d("Event", option = "B", begin = 0.2, end = 0.8) +
  scale_colour_viridis_d("Event", option = "B", begin = 0.2, end = 0.8) +
  scale_x_continuous("Day", breaks = c(1, 7, 14, 21, 28), limits = c(1, 28)) +
  labs(y = "Proportion")
ggsave(
  file.path(
    "outputs", "figures", "outcomes", "secondary", 
    "7-1-concurrent-stdaspirin-marginal-ttr.pdf"),
  p, height = 2.5, width = 6
)
p
```

### Therapeutic dose

```{r}
#| tbl-cap: Summary of time to recovery to day 28 by anticoagulation intervention.
save_tex_table(
  make_ttr_summary(acs_itt_concurc4_dat, "latex"),
  file.path("outcomes", "secondary", "7-1-acs-itt-therapeutic-summary")
)
make_ttr_summary(acs_itt_concurc4_dat)
```

```{r}
#| label: fig-7-1-anticoagulation-acs-itt-therapeutic
#| fig-cap: |
#|   Progression to recovery by anticoagulation intervention, ACS-ITT-therapeutic.
p <- acs_itt_concurc4_nona_dat %>%
  complete(CAssignment, time, fill = list(y = 0)) %>%
  group_by(CAssignment, time) %>%
  summarise(n = n(), y1 = sum(y == 1), y2 = sum(y == 2), .groups = "drop") %>%
  group_by(CAssignment) %>%
  mutate(cy1 = cumsum(y1), 
         cp1 = cy1 / n[1],
         cy2 = cumsum(y2),
         cp2 = cy2 / n[1],
         cpn = (n[1] - cy1 - cy2) / n[1]) %>%
  ungroup() %>%
  mutate(CAssignment = factor(
    CAssignment, 
    levels = c("C1", "C2", "C3", "C4"), 
    labels = str_replace(intervention_labels()$CAssignment[-1], "<br>", " "))) %>%
  select(-y1, -y2, -cy1, -cy2) %>% 
  pivot_longer(cp1:cpn) %>% 
  mutate(name = factor(
    name, 
    levels = c("cp1", "cp2", "cpn"), 
    labels = c("Recovered", "Died", "Not recovered"))) %>%
  ggplot(., aes(time, value, fill = name, colour = name)) + 
  facet_wrap(~CAssignment) + 
  geom_col(width = 1) +
  scale_fill_viridis_d(option = "B", begin = 0.2, end = 0.8) +
  scale_colour_viridis_d(option = "B", begin = 0.2, end = 0.8) +
  scale_x_continuous(breaks = c(1, 7, 14, 21, 28)) +
labs(x = "Study day", y = "Cumulative proportion", fill = "Status", colour = "Status") +
  theme(panel.grid.minor = element_blank())
path <- file.path("outputs", "figures", "outcomes", "secondary")
ggsave(
  file.path(path, "outcome-7-1-descriptive-acs-itt-therapeutic.pdf"), 
  p, height = 2.5, width = 6)
p
```

```{r}
# Sanity check frequentist fit with smoothed time
X <- make_X_design(
  acs_itt_concurc4_nona_dat, 
  c("agegte60", "ctry"), 
  includeA = F)
Xm <- X[, -1]
sdat <- list(
  N = nrow(acs_itt_concurc4_nona_dat),
  R = 2,
  K = ncol(Xm),
  T = 28,
  time = acs_itt_concurc4_nona_dat$time,
  X = Xm,
  y = as.matrix(acs_itt_concurc4_nona_dat[, c("y0", "y1", "y2")]),
  beta_sd = c(1, 1, 2.5, 1, 1)
)
```

```{r}
#| eval: false
#| code-summary: Fit and save the model
fit <- mlogit_rw$sample(
  data = sdat, 
  seed = 81743,
  chains = 8,
  parallel_chains = min(8, parallel::detectCores()),
  iter_sampling = 2500, 
  iter_warmup = 1000,
  adapt_delta = 0.95
)
# Save model to outputs
fit$save_output_files(
  dir = file.path("outputs", "models", "secondary", "7-1-ttr"),
  basename = "concurc4",
  timestamp = FALSE, 
  random = FALSE)
fit$save_object(file.path("outputs", "models", "secondary", "7-1-ttr", "concurc4.rds"))
```

```{r}
#| code-summary: Load the model and summarise draws
fit <- as_cmdstan_fit(
  grep("concurc4-[0-9].csv", 
       list.files(
         file.path("outputs", "models", "secondary", "7-1-ttr"), 
         full.names = T), 
       value = T)
)
drws <- as_draws_rvars(fit$draws())
rownames(drws$beta) <- colnames(sdat$X)
drws$Ccon <- attr(X, "contrasts")$randC %**% drws$beta[1:2, ]
rownames(drws$Ccon) <- c("Low", "Intermediate", "Therapeutic")
drws$Ctrt <- drws$Ccon[-1, ] - drws$Ccon[1, ]
drws$shift <- rvar_apply(sweep(drws$beta[3:5, ], 1, colMeans(sdat$X)[3:5], "*"), 2, rvar_sum)
drws$alpha_shift <- sweep(drws$alpha, 2, drws$shift, "+")
drws$OR <- exp(rbind(
  drws$Ctrt,
  drws$beta[-(1:2), ]
))
rownames(drws$OR) <- c("Intermediate", "Therapeutic", "Age \u2265 60", "India", "Australia/New Zealand")
colnames(drws$OR) <- c("Recovery", "Death")
```

```{r}
save_tex_table(
  make_odds_ratio_table(drws, format = "latex"),
  "outcomes/secondary/7-1-primary-model-acs-itt-therapeutic-summary-table"
)
make_odds_ratio_table(drws)
```

```{r}
p <- plot_baseline_hazard(drws) +
  coord_flip()
ggsave(
  file.path(
    "outputs", "figures", "outcomes", "secondary", 
    "7-1-concurrent-therapeutic-baseline-haz.pdf"),
  p, height = 3, width = 6
)
p
```

```{r}
#| fig-cap: |
#|   Intervention specific recovery progression (Nepal, age < 60).
haz <- get_arm_specific_probs(drws, TRUE) %>%
  mutate(intervention = fct_inorder(intervention))
pdat <- haz %>% 
  select(intervention, time, unrecovered = surv, recovered = cprob1, died = cprob2) %>%
  pivot_longer(unrecovered:died, names_to = "event", values_to = "posterior")
obsdat <- acs_itt_concurc4_nona_dat %>%
  # filter(ctry == "NP", agegte60 == 0) %>%
  complete(nesting(StudyPatientID, CAssignment), time = 1:28, fill = list(y = 0)) %>%
  group_by(intervention = 
             factor(CAssignment, 
                    labels = c("Low", "Intermediate", "Therapeutic")), 
           time) %>%
  summarise(n = n(), y1 = sum(y == 1), y2 = sum(y == 2), .groups = "drop") %>%
  group_by(intervention) %>%
  mutate(cy1 = cumsum(y1), 
         recovered = cy1 / n[1],
         cy2 = cumsum(y2),
         died = cy2 / n[1],
         unrecovered = (n[1] - cy1 - cy2) / n[1]) %>%
  ungroup() %>%
  pivot_longer(c(unrecovered, recovered, died), names_to = "event", values_to = "proportion")
p <- ggplot(pdat, aes(time, fill = event, colour = event)) +
  facet_wrap( ~ intervention) +
  geom_rect(aes(xmin = time, 
                xmax = time + 1,
                ymin = quantile(posterior, 0.025), 
                ymax = quantile(posterior, 0.975)),
              alpha = 0.25, colour = NA) +
  geom_step(aes(y = median(posterior))) +
  geom_point(data = obsdat, aes(y = proportion, x = time + 0.5)) +
  scale_fill_viridis_d("Event", option = "B", begin = 0.2, end = 0.8) +
  scale_colour_viridis_d("Event", option = "B", begin = 0.2, end = 0.8) +
  scale_x_continuous("Day", breaks = c(1, 7, 14, 21, 28), limits = c(1, 28)) +
  labs(y = "Proportion")
ggsave(
  file.path(
    "outputs", "figures", "outcomes", "secondary", 
    "7-1-concurrent-therapeutic-marginal-ttr.pdf"),
  p, height = 2.5, width = 6
)
p
```
