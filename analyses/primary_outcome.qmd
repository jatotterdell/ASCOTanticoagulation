---
title: Primary Outcome
subtitle: |
  Death from any cause or requirement of new intensive respiratory 
  support (invasive or non-invasive ventilation) or vasopressor/inotropic 
  support in the 28 days after randomisation.
description: |
  *This script was used to undertake the analysis of the primary outcome for ASCOT.*
author: "James Totterdell"
date: last-modified
---

# Preamble

```{r}
#| label: pkgs
#| code-summary: Load packages
library(tidyverse)
library(labelled)
library(kableExtra)
library(cmdstanr)
library(posterior)
library(bayestestR)
library(bayesplot)
library(matrixStats)
library(plotly)
library(lubridate)
library(ggdist)
library(patchwork)

theme_set(theme_classic(base_size = 10, base_family = "Palatino") +
  theme(panel.grid = element_blank(),
        strip.background = element_blank()))
bayesplot_theme_set(theme_set(theme_classic(base_size = 10, base_family = "Palatino") +
  theme(panel.grid = element_blank(),
        strip.background = element_blank())))
color_scheme_set("red")
options(digits = 4)
```

```{r}
#| label: analysis-sets
#| code-summary: Prepare dataset
devtools::load_all()
# Raw data
all_dat <- read_all_no_daily()

# FAS-ITT
fas_itt_dat <- all_dat %>% 
  filter_fas_itt() %>%
  transmute_model_cols_grp_aus_nz()
# FAS-ITT excluding missing values
fas_itt_nona_dat <- fas_itt_dat %>% 
  filter(!is.na(PO))

# ACS-ITT
acs_itt_dat <- all_dat %>% 
  filter_acs_itt() %>%
  transmute_model_cols_grp_aus_nz()
# ACS-ITT excluding missing values
acs_itt_nona_dat <- acs_itt_dat %>% 
  filter(!is.na(PO))
# ACS-ITT worst case
acs_itt_wc_dat <- acs_itt_dat %>%
  mutate(PO = if_else(is.na(PO) | PO == 1, 1, 0))
# ACS-ITT best case
acs_itt_bc_dat <- acs_itt_dat %>%
  mutate(PO = if_else(is.na(PO) | PO == 0, 0, 1))

# ACS-PP - exclude participants not per-protocol
pp <- read_per_protocol_list()
all_pp <- all_dat %>% left_join(pp, by = "StudyPatientID")
acs_pp_dat <- all_pp %>%
  filter_acs_itt() %>%
  filter(is.na(Reason)) %>%
  transmute_model_cols_grp_aus_nz()
acs_pp_nona_dat <- acs_pp_dat %>%
  filter(!is.na(PO))

# Concurrent enrolments for C2
acs_itt_concurc2_dat <- acs_itt_dat %>%
  filter_concurrent_intermediate()
acs_itt_concurc2_nona_dat <- acs_itt_concurc2_dat %>% 
  filter(!is.na(PO))
# Concurrent enrolments for C3
acs_itt_concurc3_dat <- acs_itt_dat %>%
  filter_concurrent_std_aspirin()
acs_itt_concurc3_nona_dat <- acs_itt_concurc3_dat %>% 
  filter(!is.na(PO))
# Concurrent enrolments for C4
acs_itt_concurc4_dat <- acs_itt_dat %>%
  filter_concurrent_therapeutic()
acs_itt_concurc4_nona_dat <- acs_itt_concurc4_dat %>% 
  filter(!is.na(PO))
```

```{r}
#| label: stan-models
#| code-summary: Load models
logistic_mod <- cmdstan_model("stan/binary/logistic.stan")
logistic_site_mod <- cmdstan_model("stan/binary/logistic_site.stan")
logistic_epoch_mod <- cmdstan_model("stan/binary/logistic_epoch.stan")
primary_mod <- cmdstan_model("stan/binary/logistic_site_epoch.stan")
```

```{r}
#| label: model-data-for-acs-itt
#| code-summary: Setup ACS-ITT datasets and functions

make_stan_data <- function(
    dat, 
    vars, 
    outcome, 
    beta_sd = c(2.5, rep(1, nXassign), 2.5, 10),
    ctr = contr.orthonorm) 
{
  X <- model.matrix(
     as.formula(paste("~", paste(vars, collapse = " + "))),
    data = dat,
    contrast = list(
      AAssignment = ctr,
      CAssignment = ctr)
  )
  nXassign <- sum(grepl("Assignment", colnames(X)))

  y <- dat[[outcome]]
  N <- dim(X)[1]
  K <- dim(X)[2]  
    epoch  <- dat$epoch
  M_epoch  <- max(dat$epoch)
    region <- dat[["ctry_num"]]
  M_region <- max(region)
    site <- dat[["site_num"]]
  M_site <- max(site)
  region_by_site <- region_by_site <- dat %>% 
    dplyr::count(ctry_num, site_num) %>% 
    pull(ctry_num)
  
  list(N = N, K = K, X = X, y = y,
       M_region = M_region, region = region,
       M_site = M_site, site = site,
       M_epoch = M_epoch, epoch = epoch,
       region_by_site = region_by_site,
       beta_sd = beta_sd)
}

make_primary_model_data <- function(
    dat, 
    vars = NULL,
    beta_sd_var = NULL,
    ctr = contr.orthonorm) {
  
  # Domain specific intercept as in interims
  XA <- make_domA_design(dat, ctr)
  # Domain specific intercept as in interims
  XC <- make_domC_design(dat, ctr)
  if (any(XC[, 1] != 1)) {
    add_intercept = TRUE
  } else {
    add_intercept = FALSE
  }
  
  if (!is.null(vars)) {
    Xother <- model.matrix(
     as.formula(paste(" ~ ", paste(vars, collapse = " + "))),
     data = dat
    ) [, -1]
  } else {
    Xother <- NULL
  }
  
  X <- cbind(XC, XA, Xother)
  if(add_intercept) {
    X <- cbind(randPlatform = 1, X)
  }
  nXtrt <- sum(grepl("rand", colnames(X))) - 1
  
  epoch  <- dat[["epoch"]]
  M_epoch  <- max(epoch)
  region <- dat[["ctry_num"]]
  M_region <- max(region)
  site <- dat[["site_num"]]
  M_site <- max(site)
  region_by_site <- region_by_site <- dat %>% 
    dplyr::count(ctry_num, site_num) %>% 
    pull(ctry_num)
  
  y <- dat[["PO"]]
  N <- dim(X)[1]
  K <- dim(X)[2]
  beta_sd <- c(2.5, rep(1, nXtrt), beta_sd_var)
  out <- list(
    N = N, K = K, X = X, y = y,
    M_region = M_region, region = region,
    M_site = M_site, site = site,
    M_epoch = M_epoch, epoch = epoch,
    region_by_site = region_by_site,
    beta_sd = beta_sd,
    ctrC = attr(XC, "contrasts")[[1]],
    ctrA = attr(XA, "contrasts")[[1]]
  )
  return(out)
}

summarise_posterior <- function(dat) {
  dat %>%
    mutate(
      Median = 
        sprintf("%.2f", median(Posterior)),
      `95\\% CrI` = 
        sprintf("(%.2f, %.2f)", quantile(Posterior, 0.025), quantile(Posterior, 0.975)),
      `Mean (SD)` = 
        sprintf("%.2f (%.2f)", mean(Posterior), sd(Posterior)),
      `Pr(OR < 1)` = 
        sprintf("%.2f", Pr(Posterior < 1)),
      `Pr(OR > 1/1.1)` = 
        sprintf("%.2f", Pr(Posterior > 1/1.1))
    )
}

make_subgroup_summary_table <- function(dat, format = "html") {
  L <- nrow(dat)
  row_st <- seq(1, L, by = L / 3)
  row_ed <- seq(L/3, L, by = L / 3)
  kable(
    dat[, -1] %>% select(-Posterior),
    format = format,
    booktabs = TRUE,
    align = "lrrrrr",
      escape = FALSE
  ) %>%
    kable_styling(
      latex_options = "HOLD_position",
      font_size = 9
    ) %>%
    group_rows("Intermediate", row_st[1], row_ed[1]) %>%
    pack_rows("Standard plus aspirin", row_st[2], row_ed[2]) %>%
    pack_rows("Therapeutic", row_st[3], row_ed[3])  
}

plot_subgroup_or <- function(dat, grp) {
  ggplot(ordat, aes(xdist = Posterior, y = !!grp)) +
    facet_grid( ~ Contrast) +
    stat_slabinterval(
      aes(fill = 
            stat(cut_cdf_qi(
              cdf, 
              .width = c(.5, .8, .95), 
              labels = scales::percent_format()))),
      adjust = 1, n = 1001, .width = c(0.5, 0.8, 0.95),
      fatten_point = 1
      ) + 
    scale_fill_brewer(
      palette = "Reds",
      direction = -1, 
      na.translate = FALSE) + 
    labs(
      x = "Odds ratio contrast",
      fill = "Interval"
    ) +
    geom_vline(xintercept = 1, linetype = 2) +
    scale_x_log10("Odds ratio (log scale)", 
                  breaks = c(0.1, 0.2, 0.5, 1, 2, 5, 10)) +
    scale_colour_manual("", values = c("red", "black")) +
    guides(colour = "none") +
    theme(panel.border = element_rect(fill = NA),
          legend.position = "top")
}
```

```{r}
#| label: helper-functions
#| code-summary: Helper functions

add_treatment_rvs <- function(rvs, mdat) {
  
  Ca <- cbind(1, attr(mdat$X, "contrasts")$AAssignment)
  Cc <- cbind(1, attr(mdat$X, "contrasts")$CAssignment)
  nC <- ncol(Cc)
  Ct <-  cbind(1, contr.treatment(nC))
  trt_rows <- which(rownames(Cc) != "C0")
  
  rvs$eta <- as.vector(Cc %**% rvs$beta[1:nC])
  rvs$beta_uncon <- as.vector(Cc[, -1] %**% rvs$beta[2:nC])
  rvs$prob <- 1 / (1 + exp(-rvs$eta))
  rvs$beta_trt <- as.vector(
    transform_coding(Cc, Ct) %**% rvs$beta[1:nC])
  rvs$OR <- setNames(exp(rvs$beta_trt[trt_rows][-1]), c("C2 vs C1", "C3 vs C1", "C4 vs C1"))
  rvs$OR <- c(rvs$OR, "C2 vs C4" = rvs$OR[1] / rvs$OR[3])
  return(rvs)
}


plot_or_densities <- function(rvs) {
  tibble(Contrast = fct_inorder(names(rvs)), RV = rvs) %>% 
  ggplot(., aes(y = Contrast, xdist = RV)) + 
  stat_halfeye(
    aes(fill = 
          stat(cut_cdf_qi(
            cdf, 
            .width = c(.5, .8, .95, 0.99), 
            labels = scales::percent_format()))),
    adjust = 1, n = 1001, .width = c(0.5, 0.8, 0.95)
    ) + 
  scale_fill_brewer(
    palette = "Reds",
    direction = -1, 
    na.translate = FALSE) + 
  labs(
    x = "Odds ratio contrast",
    fill = "Interval"
  ) +
  scale_x_log10(breaks = c(0.1, 0.25, 0.5, 1, 2, 4, 10)) + 
  geom_vline(xintercept = 1)
}


odds_ratio_summary_table <- function(OR, format = "html", fn = NULL) {
  out <- tibble(
    Parameter = names(OR),
    Median = median(OR),
    `95% CrI` = apply(
      quantile(OR, c(0.025, 0.975)), 2, 
      function(x) sprintf("(%.2f, %.2f)", x[1], x[2])),
    `Mean (SD)` = sprintf("%.2f (%.2f)", E(OR), sd(OR)),
    `Pr(OR < 1)` = Pr(OR < 1),
  ) %>%
  kable(
    format = format, 
    digits = 2, 
    align = "lrrrr",
    linesep = "",
    booktabs = TRUE) %>%
  kable_styling(
    font_size = 9,
    bootstrap_options = "striped", 
    latex_options = "HOLD_position")
  if (!is.null(fn) & format == "latex") {
    save_tex_table(out, fn)
  } else {
    return(out)
  }
}


decision_quantity_summary_table <- function(OR, format = "html", fut_val = 1.1) {
  tdat <- tibble(
    Intervention = names(OR),
    posterior = OR,
    Posterior = sprintf("%.2f (%.2f, %.2f)", 
                        median(posterior), 
                        quantile(posterior, 0.025), 
                        quantile(posterior, 0.975)),
    Superior = sprintf("%.2f", E(posterior == rvar_min(posterior))),
    Effective = sprintf("%.2f", Pr(posterior < 1)),
    Futile = sprintf("%.2f", Pr(posterior > 1/fut_val)),
    Equivalent = sprintf("%.2f", Pr(posterior < fut_val & posterior > 1/fut_val))
  ) %>%
    select(-posterior)
  tdat[1, -(1:3)] <- "-"
  out <- kable(
    tdat,
    format = format, 
    digits = 2, 
    align = "lrrrrr",
    linesep = "",
    booktabs = TRUE) %>%
    kable_styling(
      font_size = 9,
      bootstrap_options = "striped",
      latex_options = "HOLD_position"
    )
  return(out)
}
```

# Outline

This document presents the results of analyses of the primary outcome. The first section introduces the primary outcome definition and it's derivation from the database fields. Descriptive analyses are then presented followed by the model-based analyses.

For the model-based analyses, results are presented for each population and sub-model.

# Primary Outcome Definition

The primary outcome is a composite of death, need for new respiratory support, or vasopressor/inotropic support. From the protocol:

> Death from any cause or requirement of new intensive respiratory support (invasive or non-invasive ventilation) or vasopressor/inotropic support in the 28 days after randomisation. This includes any participant who receives non-invasive mechanical ventilation (either CPAP or BIPAP, apart from the below considerations) any time after enrolment even if not transferred to ICU. It does NOT include the use of humidified high-flow nasal prong oxygen.
>
> Participants on pre-existing home BiPAP or CPAP will not be considered to have met the primary outcome unless they have either:
>
> -   required invasive mechanical ventilation (i.e. intubation), or
> -   graduated from CPAP only whilst asleep to BiPAP at any time, or
> -   graduated from BiPAP only whilst asleep to BiPAP for \>12 hours/day, or
> -   died by day 28
>
> There may be cases where a patient has been assessed as requiring intensive respiratory support (invasive or non-invasive ventilation) or vasopressor/inotropic support, but the patient or family declined treatment and the patient was discharged home. If attempts to obtain 28-day data are unsuccessful or not possible, and the investigator had deemed at the time of discharge that the patient would be highly likely to die within 28 days from randomisation, these participants will be deemed to have met the primary outcome.

# Derivation of the Outcome

Derivation of the outcome requires checking of the daily, discharge, and day 28 data extracts. On the daily data, there is a variable `DD_PrimaryEndpointReachedToday` however this was coded incorrectly in the original database and therefore fails to capture some participants. Additionally, given the composite nature of the outcome it is useful to check all components individually as well as the composite outcome. Therefore, this variable is not used in the derivation, but is included as a cross-check.

Below, each component is summarised in aggregate.

## Day 28 mortality

There were 50 participants who had died by day 28, 40 were are reported as a discharge status of death and 10 were reported as a death post-discharge. Day 28 mortality was missing or unknown for 30 participants.

```{r}
#| label: po-component-death
#| code-summary: Summarise the death component
mort_table <- all_dat %>%
  filter_acs_itt() %>%
  group_by(CAssignment) %>%
  summarise(
    `Mortality_Alive at day 28_` = sum(1 - D28_death, na.rm = TRUE),
    `Mortality_Death within 28 days_Total` = sum(D28_death, na.rm = TRUE),
    `Mortality_Death within 28 days_Prior to discharge` = sum(DIS_death & DIS_day <= 28, na.rm = TRUE),
    `Mortality_Death within 28 days_Post-discharge` = sum(D28_death == 1 & DIS_death == 0, na.rm = TRUE),
    `Mortality_Unknown_` = sum(is.na(D28_death))
  ) %>%
  gather(key, Frequency, -CAssignment, factor_key = T) %>%
  spread(CAssignment, Frequency) %>%
  separate(key, into = c("Measure", "Outcome", "Breakdown"), sep = "_") %>%
  mutate(
    Overall = C1 + C2 + C3 + C4,
    across(C1:Overall, ~ sprintf("%i (%.0f)", .x, 100 * .x / sum(.x[c(1,2,5)])))
  )
kable(
  mort_table %>% select(-1),
  caption = "Composite primary endpoint breakdown - mortality.",
  align = "llrrrrr") %>%
  kable_styling(font_size = 11) %>%
  collapse_rows(1, valign = "top", latex_hline = 'custom', custom_latex_hline = 1) %>%
  group_rows("Mortality", 1, nrow(mort_table))
```

## Vasopressor/inotropic requirement

Vasopressor/inotropic support is reported on both the daily (from day 1 to discharge) and the day 28 (from discharge to day 28) extracts. There were 39 participants who required vasopressor/inotropic support. Of these, 21 were reported between discharge and day 28, 20 were reported prior to discharge, and 2 were reported for both. The component was missing for 35 participants. Either due to missing information at day 28 or due to missing daily information.

```{r}
#| label: po-component-vasopressor
#| code-summary: Summarise the vasopressor/inotropes component
vaso_table <- all_dat %>%
  filter_acs_itt() %>%
  group_by(CAssignment) %>%
  summarise(
    `Vasopressor/inotropes_Not required_` = sum(1 - ANY_vasop, na.rm = TRUE),
    `Vasopressor/inotropes_Use within 28 days_Total` = sum(ANY_vasop, na.rm = TRUE),
    `Vasopressor/inotropes_Use within 28 days_Prior to discharge` = sum(DD_vasop, na.rm = TRUE),
    `Vasopressor/inotropes_Use within 28 days_Post-discharge` = sum(D28_vasop, na.rm = TRUE),
    `Vasopressor/inotropes_Unknown_` = sum(is.na(ANY_vasop))
  ) %>%
  gather(key, Frequency, -CAssignment, factor_key = T) %>%
  spread(CAssignment, Frequency) %>%
  separate(key, into = c("Measure", "Outcome", "Breakdown"), sep = "_") %>%
  mutate(
    Overall = C1 + C2 + C3 + C4,
    across(C1:Overall, ~ sprintf("%i (%.0f)", .x, 100 * .x / sum(.x[c(1,2,5)])))
  )
kable(
  vaso_table %>% select(-1),
  caption = "Composite primary endpoint breakdown - vasopressor/inotropes.",
  align = "llrrrr") %>%
  kable_styling(font_size = 11) %>%
  collapse_rows(1, valign = "top", latex_hline = 'custom', custom_latex_hline = 1) %>%
  group_rows("Vasopressor/inotropes", 1, nrow(vaso_table))
```

## New intensive respiratory support

Respiratory support is reported on both the daily (from day 1 to discharge) and the day 28 (at day 28) extracts. There were 70 participants who required new intensive respiratory support. Of these, 60 were prior to discharge, 6 were reported at day 28, and 4 were both. The outcome was unknown for 36 participants due to either missing day 28 information (34) or missing daily information (2).

```{r}
#| label: po-component-respiratory
#| code-summary: Summarise the ventilation component
vent_table <- all_dat %>%
  filter_acs_itt()  %>%
  group_by(CAssignment) %>%
  summarise(
    `Ventilation_Not required_` = sum(1 - ANY_vent, na.rm = TRUE),
    `Ventilation_Use within 28 days_Total` = sum(ANY_vent, na.rm = TRUE),
    `Ventilation_Use within 28 days_Prior to discharge` = sum(ANY_DD_vent, na.rm = TRUE),
    `Ventilation_Use within 28 days_Post-discharge` = sum(D28_vent, na.rm = TRUE),
    `Ventilation_Unknown_` = sum(is.na(ANY_vent))
  ) %>%
  gather(key, Frequency, -CAssignment, factor_key = T) %>%
  spread(CAssignment, Frequency) %>%
  separate(key, into = c("Measure", "Outcome", "Breakdown"), sep = "_") %>%
  mutate(
    Overall = C1 + C2 + C3 + C4,
    across(C1:Overall, ~ sprintf("%i (%.0f)", .x, 100 * .x / sum(.x[c(1, 2, 5)])))
  )
kable(
  vent_table %>% select(-1),
  caption = "Composite primary endpoint breakdown - respiratory support.",
  align = "llrr") %>%
  kable_styling(font_size = 11) %>%
  collapse_rows(1, valign = "top", latex_hline = 'custom', custom_latex_hline = 1) %>%
  group_rows("Ventilation", 1, nrow(vent_table))
```

## DAMA and Likely to Die

There were 3 participants who were DAMA and identified as likely to die. However, the day 28 status was observed for all 3 participants, therefore, no-one met the primary endpoint due to DAMA and unknown day 28 status.

```{r}
#| label: po-components-dama
#| code-summary: Summarise the DAMA component
all_dat %>%
  filter_acs_itt()  %>%
  select(DIS_DAMA, DIS_DAMAlikelytodie, D28_death) %>%
  dplyr::count(DIS_DAMA, DIS_DAMAlikelytodie, D28_death) %>%
  spread(D28_death, n) %>%
  kable(
    col.names = c("DAMA", "Likely to die by day 28", "No", "Yes", "(Missing)")
  ) %>%
  kable_styling() %>%
  add_header_above(c(" " = 2, "Death by day 28" = 3))
```

## Composite

There were 107 (7% of observed outcomes) participants who met the composite outcome and 36 (2% of all outcomes) participants whose outcome was unknown. Of the 107 who met the outcome, 12 met all three criteria (death, vasopressor, ventilation) and the remaining met some subset of them. Of the 36 with missing outcome, 26 were missing all three components.

```{r}
#| label: tbl-po-composite
#| code-summary: Summarise the composite
#| tbl-cap: |
#|   Composite primary endpoint breakdown - overall.
comp_table <- all_dat %>%
  filter_acs_itt()  %>%
  group_by(CAssignment) %>%
  summarise(
    `Primary Outcome_No_`  = sum(1 - PO, na.rm = TRUE),
    `Primary Outcome_Yes_` = sum(PO, na.rm = TRUE),
    `Primary Outcome_Unknown_Total` = sum(is.na(PO)),
    `Primary Outcome_Unknown_Day 28 status` = sum(is.na(PO) & is.na(D28_death)),
    `Primary Outcome_Unknown_Vasopressor/inotropes` = 
      sum(is.na(PO) & !is.na(D28_death) & is.na(ANY_vasop))
  ) %>%
  gather(key, Frequency, -CAssignment, factor_key = T) %>%
  spread(CAssignment, Frequency) %>%
  separate(key, into = c("Measure", "Outcome", "Breakdown"), sep = "_") %>%
  mutate(
    Overall = C1 + C2 + C3 + C4,
    across(C1:Overall, ~ sprintf("%i (%.0f)", .x, 100 * .x / sum(.x[1:3])))
  )
kable(
  comp_table %>% select(-1),
  align = "llrr") %>%
  kable_styling(font_size = 11) %>%
  collapse_rows(1, valign = "top", latex_hline = 'custom', custom_latex_hline = 1) %>%
  group_rows("Primary outcome", 1, nrow(comp_table))
```


```{r}
#| label: tbl-po-composite-all
#| code-summary: Summarise the all components
#| tbl-cap: |
#|   Composite primary endpoint breakdown.
tab <- bind_rows(comp_table, mort_table, vaso_table, vent_table)
tab_head <- all_dat %>% 
  filter_acs_itt() %>% 
  dplyr::count(CAssignment = factor(CAssignment, labels = intervention_labels()$CAssignment[-1])) %>%
  mutate(label = paste0(CAssignment, "<br>(n = ", n, ")")) %>%
  pull(label) %>%
  c(paste0("Overall<br><br>(n = ", nrow(all_dat %>% filter_acs_itt()), ")"))
colnames(tab)[4:8] <- tab_head
kable(
  tab %>% select(-1),
  align = "llrrrrr",
  escape = F) %>%
  kable_styling(font_size = 11) %>%
  collapse_rows(1, valign = "top", latex_hline = 'custom', custom_latex_hline = 1) %>%
  group_rows("Primary outcome", 1, nrow(comp_table)) %>%
  group_rows("Mortality", nrow(comp_table) + 1, nrow(comp_table) + nrow(mort_table)) %>%
  group_rows("Vasopressor/inotropes", 11, 15) %>%
  group_rows("Ventilation", 16, 20)
```

```{r}
#| label: save-composite-primary-table
#| code-summary: Save table to outputs
colnames(tab)[4:8] <- linebreak(tab_head, align = "c", linebreaker = "<br>")
out <- kable(
  tab %>% select(-1),
  format = "latex",
  align = "llrrrrr",
  booktabs = TRUE,
  escape = F) %>%
  kable_styling(font_size = 9, latex_options = "HOLD_position") %>%
  collapse_rows(1, valign = "top", latex_hline = 'none') %>%
  group_rows("Primary outcome", 1, nrow(comp_table)) %>%
  group_rows("Mortality", nrow(comp_table) + 1, nrow(comp_table) + nrow(mort_table)) %>%
  group_rows("Vasopressor/inotropes", 11, 15) %>%
  group_rows("Ventilation", 16, 20)
save_tex_table(out, fn = "outcomes/primary/composite-breakdown")
```


```{r}
#| label: tbl-po-composite-combinations
#| code-summary: Summarise the component combinations
#| tbl-cap: |
#|   Observed outcome combinations.
levs <- c("None", "Death + Vas./Ino. + Ventilation", "Death + Vas./Ino.", "Death + Ventilation", "Vas./Ino. + Ventilation", 
          "Death", "Vas./Ino.", "Ventilation", "Unknown")
tab <- all_dat %>%
  filter_acs_itt()  %>%
  group_by(CAssignment) %>%
  summarise(
    `Composite outcomes` = case_when(
      PO == 0 ~ 0,
      is.na(PO) ~ 99,
      D28_death == 1 & ANY_vasop == 1 & ANY_vent == 1 ~ 1,
      D28_death == 1 & ANY_vasop == 1 & ANY_vent == 0 ~ 2,
      D28_death == 1 & ANY_vasop == 0 & ANY_vent == 1 ~ 3,
      D28_death == 0 & ANY_vasop == 1 & ANY_vent == 1 ~ 4,
      D28_death == 1 ~ 5,
      ANY_vasop == 1 ~ 6,
      ANY_vent == 1 ~ 7,
    )) %>%
  dplyr::count(CAssignment, `Composite outcomes`) %>%
  mutate(`Composite outcomes` = factor(`Composite outcomes`, levels = c(0:7, 99), labels = levs)) %>%
  spread(CAssignment, n, fill = 0) %>%
  mutate(Overall = C1 + C2 + C3 + C4) %>%
  mutate(across(C1:Overall, ~ sprintf("%i (%.0f)", .x, 100 * .x / sum(.x))))
colnames(tab)[-1] <- tab_head
colnames(tab)[1] <- "Composite outcomes, n (\\%)"
kable(
  tab ,
  align = "lrrrrr",
  escape = F) %>%
  kable_styling(font_size = 11)
```

```{r}
colnames(tab) <- linebreak(colnames(tab), align = "c", linebreaker = "<br>")
out <- kable(
  tab,
  format = "latex",
  align = "lrrrrr",
  booktabs = TRUE,
  linesep = "",
  escape = F) %>%
  kable_styling(
    font_size = 9, 
    latex_options = "HOLD_position")
save_tex_table(out, fn = "outcomes/primary/composite-combinations")
```


# Descriptive Analyses

## By Interim Analysis

```{r}
intdat <- all_dat %>%
  filter_acs_itt() %>%
  mutate(
    interim = as.character(case_when(
      RandDate < get_interim_dates()$meet_date[1] ~ 1,
      RandDate < get_interim_dates()$meet_date[2] ~ 2,
      RandDate < get_interim_dates()$meet_date[3] ~ 3,
      RandDate < get_interim_dates()$meet_date[4] ~ 4,
      TRUE ~ 4
    )),
    CAssignment = factor(
      CAssignment, labels = c("Standard", "Intermediate", "Standard\nplus aspirin", "Therapuetic"))
  )
intcounts <- intdat %>% 
  dplyr::count(interim) %>% 
  mutate(label = paste0("Interim ", interim, " (n = ", n, ")"))
trtcounts <- intdat %>% dplyr::count(CAssignment)
ovrtab <- intdat %>%
  group_by(interim = "Overall", CAssignment) %>%
  summarise(
    Randomised = 
      sprintf("%i", n()),
    Known = 
      sprintf("%i (%.0f)", sum(!is.na(PO)), 100 * mean(!is.na(PO))),
    `Met primary outcome` = 
      sprintf("%i (%.0f)", sum(PO, na.rm = T), 100 * mean(PO, na.rm = T)),
    `Death` = 
      sprintf("%i (%.0f)", sum(D28_death, na.rm = T), 100 * mean(D28_death, na.rm = T)),
    `Vasopressor/inotropic support` = 
      sprintf("%i (%.0f)", sum(ANY_vasop, na.rm = T), 100 * mean(ANY_vasop, na.rm = T)),
    `Intensive respiratory support` = 
      sprintf("%i (%.0f)", sum(ANY_vent, na.rm = T), 100 * mean(ANY_vent, na.rm = T))
  ) %>%
  pivot_longer(`Randomised`:`Intensive respiratory support`, names_to = "Outcome") %>%
  pivot_wider(names_from = CAssignment, values_from = value, values_fill = "-")
inttab <- intdat %>%
  group_by(interim, CAssignment) %>%
  summarise(
    Randomised = 
      sprintf("%i", n()),
    Known = 
      sprintf("%i (%.0f)", sum(!is.na(PO)), 100 * mean(!is.na(PO))),
    `Met primary outcome` = 
      sprintf("%i (%.0f)", sum(PO, na.rm = T), 100 * mean(PO, na.rm = T)),
    `Death` = 
      sprintf("%i (%.0f)", sum(D28_death, na.rm = T), 100 * mean(D28_death, na.rm = T)),
    `Vasopressor/inotropic support` = 
      sprintf("%i (%.0f)", sum(ANY_vasop, na.rm = T), 100 * mean(ANY_vasop, na.rm = T)),
    `Intensive respiratory support` = 
      sprintf("%i (%.0f)", sum(ANY_vent, na.rm = T), 100 * mean(ANY_vent, na.rm = T))
  ) %>%
  pivot_longer(`Randomised`:`Intensive respiratory support`, names_to = "Outcome") %>%
  pivot_wider(names_from = CAssignment, values_from = value, values_fill = "-")
tab <- bind_rows(ovrtab, inttab)

savetab <- kable(
  tab[, -1],
  format = "latex",
  align = "lrrrr",
  booktabs = TRUE
) %>%
  kable_styling(
    font_size = 9,
    latex_options = "HOLD_position"
  ) %>%
  group_rows(paste0("Overall (n = ", sum(intcounts$n), ")"), 1, 6) %>%
  group_rows(intcounts$label[1], 7, 12) %>%
  group_rows(intcounts$label[2], 13, 18) %>%
  group_rows(intcounts$label[3], 19, 24) %>%
  group_rows(intcounts$label[4], 25, 30)
save_tex_table(savetab, fn = "outcomes/primary/primary-composite-interims")

kable(
  tab[, -1],
  format = "html",
  align = "lrrrr",
) %>%
  kable_styling(
    font_size = 9,
    latex_options = "HOLD_position"
  ) %>%
  group_rows(paste0("Overall (n = ", sum(intcounts$n), ")"), 1, 6) %>%
  group_rows(intcounts$label[1], 7, 12) %>%
  group_rows(intcounts$label[2], 13, 18) %>%
  group_rows(intcounts$label[3], 19, 24) %>%
  group_rows(intcounts$label[4], 25, 30)
```


## Age

```{r}
#| label: fig-age-po
#| code-summary: Relationship age to outcome
#| fig-cap: |
#|   Relationship (logistic regression linear in age) 
#|   between age at entry and the primary outcome.
agedat <- all_dat %>% 
  filter_acs_itt() %>%
  dplyr::count(PO, AgeAtEntry) %>% 
  spread(PO, n, fill = 0) %>% 
  mutate(
    n = `0` + `1` + `<NA>`,
    p = `1` / (`1` + `0`))
agemod <- glm(
  cbind(`1`, `0`) ~ AgeAtEntry, 
  data = agedat, 
  family = binomial())
agedat <- agedat %>%
  mutate(
    ypred = predict(agemod, newdata = agedat, type = "response")
  )
p1 <- ggplot(agedat, aes(AgeAtEntry, n)) +
  geom_col(colour = "grey40", fill = "grey40") +
  geom_vline(xintercept = 60, linetype = 2) +
  labs(y = "Number of\nparticipants",
       x = "Age at entry")
p2 <- ggplot(agedat, aes(AgeAtEntry, p)) +
    geom_point() +
    geom_vline(xintercept = 60, linetype = 2) +
    geom_line(aes(y = ypred)) +
    labs(y = "Proportion\nwith outcome", x = "Age at entry")
p <- p1 | p2
p
```

```{r}
path <- file.path("outputs", "figures", "outcomes", "primary")
ggsave(file.path(path, "outcome-age.pdf"), p, height = 2, width = 6)
```

```{r}
#| label: tbl-age
#| code-summary: Relationship age 60+ to outcome
#| tbl-cap: |
#|   Relationship between age >= 60 and the primary outcome.
all_dat %>%
  filter_acs_itt() %>%
  dplyr::count(`Age 60+` = agegte60, PO) %>%
  group_by(`Age 60+`) %>%
  spread(PO, n, fill = 0) %>%
  mutate(
    p_1 = `1` / (`1` + `0`),
    p_miss = `<NA>` / (`1` + `0` + `<NA>`)
  ) %>%
  kable(digits = 2) %>%
  kable_styling(bootstrap_options = "striped")
```

## Country

```{r}
#| label: tbl-country-po
#| code-summary: Relationship country to outcome
#| tbl-cap: Primary outcome by country.
tdat <- all_dat %>%
  filter_acs_itt() %>%
  dplyr::count(Country = PT_CountryName, PO) %>%
  group_by(Country) %>%
  spread(PO, n, fill = 0) %>%
  mutate(
    n = `1` + `0` + `<NA>`,
    p_1 = `1` / (`1` + `0`),
    p_miss = `<NA>` / (`1` + `0` + `<NA>`)
  )
p1 <- ggplot(tdat, aes(Country, n)) +
  geom_col() +
    labs(
      y = "Number of\nparticipants", 
      x = "Country of enrolment")
p2 <- ggplot(tdat, aes(Country, p_1)) +
  geom_point() +
    labs(
      y = "Proportion meeting\nprimary outcome", 
      x = "Country of enrolment")  +
  ylim(0, NA)
p <- p1 | p2
p
```

```{r}
path <- file.path("outputs", "figures", "outcomes", "primary")
ggsave(file.path(path, "outcome-country.pdf"), p, height = 2, width = 6)
```

## Site

```{r}
#| label: tbl-site-po
#| code-summary: Relationship site to outcome
#| tbl-cap: Primary outcome by site within country.
tdat <- all_dat %>%
  filter_acs_itt() %>%
  dplyr::count(
    Country_lab = Country,
    Site_lab = fct_infreq(Location),
    Country = factor(PT_CountryName, levels = c("India", "Australia", "Nepal", "New Zealand")),
    Site = PT_LocationName,
    PO) %>%
  group_by(Country, Site) %>%
  spread(PO, n, fill = 0) %>%
  mutate(
    n = `1` + `0` + `<NA>`,
    p_1 = `1` / (`1` + `0`),
    p_miss = `<NA>` / (`1` + `0` + `<NA>`)
  ) %>%
  ungroup()

p1 <- ggplot(tdat, aes(Site_lab, n)) +
  facet_grid( ~ Country, scales = "free_x", space = "free_x") +
  geom_col() +
    labs(
      y = "Number of\nparticipants", 
      x = "") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1),
        panel.border = element_rect(fill = NA))
p2 <- ggplot(tdat, aes(Site_lab, p_1)) +
  facet_grid( ~ Country, scales = "free_x", space = "free_x") +
  geom_point() +
    labs(
      y = "Proportion meeting\nprimary outcome", 
      x = "Site of enrolment") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1),
        panel.border = element_rect(fill = NA))
p <- p1 / p2
p
```

```{r}
path <- file.path("outputs", "figures", "outcomes", "primary")
ggsave(file.path(path, "outcome-country-site.pdf"), p, height = 4, width = 6.25)
```

## Calendar Time

```{r}
#| label: fig-cal-po
#| code-summary: Relationship calendar date to outcome
#| fig-cap: |
#|   Relationship between calendar date and the primary outcome.
caldat <- all_dat %>% 
  filter_acs_itt() %>%
  dplyr::count(PO, yr = year(RandDate), mth = month(RandDate)) %>% 
  spread(PO, n, fill = 0) %>% 
  mutate(p = `1` / (`1` + `0`),
         n = `1` + `0` + `<NA>`)
p1 <- ggplot(caldat, aes(mth, p)) +
  facet_grid( ~ yr, drop = T, scales = "free_x", space = "free") +
    geom_point() +
    labs(
      y = "Proportion meeting\nprimary outcome", 
      x = "Calendar date (month of year)") +
  scale_x_continuous(breaks = 1:12) +
  ylim(0, 0.25)
p2 <- ggplot(caldat, aes(mth, n)) +
  facet_grid( ~ yr, drop = T, scales = "free_x", space = "free") +
    geom_col() +
    labs(
      y = "Number of\nparticipants", 
      x = "Calendar date (month of year)") +
  scale_x_continuous(breaks = 1:12)
p <- p2 | p1
p
```

```{r}
path <- file.path("outputs", "figures", "outcomes", "primary")
ggsave(file.path(path, "outcome-calendar-time.pdf"), p, height = 2, width = 6)
```

## Country and Calendar Time

```{r}
acs_itt_nona_dat %>% 
  dplyr::group_by(country, epoch) %>% 
  summarise(n = sprintf("%i/%i (%.2f)", sum(PO), n(), mean(PO))) %>% 
  spread(country, n, fill = 0)
```


## Days since symptom onset

```{r}
#| label: fig-dsfs-po
#| code-summary: Relationship days since sympton onset to outcome
#| fig-cap: |
#|   Relationship (logistic regression linear) 
#|   between days since symptom onset at entry and the primary outcome.
dsfsdat <- fas_itt_dat %>%
  dplyr::count(PO, dsfs) %>% 
  spread(PO, n, fill = 0) %>% 
  mutate(n = `1` + `0` + `<NA>`,
         p = `1` / (`1` + `0`))
dsfsmod <- glm(
  cbind(`1`, `0`) ~ dsfs, 
  data = dsfsdat, 
  family = binomial())
dsfsdat <- dsfsdat %>%
  mutate(
    ypred = predict(dsfsmod, newdata = dsfsdat, type = "response")
  )
p1 <- ggplot(dsfsdat, aes(dsfs, n)) +
  geom_col(colour = "grey40", fill = "grey40") +
  geom_vline(xintercept = 7.5, linetype = 2) +
  labs(y = "Number of\nparticipants",
       x = "Days since first symptoms")
p2 <- ggplot(dsfsdat, aes(dsfs, p)) +
    geom_point() +
    geom_vline(xintercept = 7.5, linetype = 2) +
    geom_line(aes(y = ypred)) +
    labs(y = "Proportion\nwith outcome", 
         x = "Days since first symptoms")
p <- p1 | p2
p
```

```{r}
path <- file.path("outputs", "figures", "outcomes", "primary")
ggsave(file.path(path, "outcome-dsfs.pdf"), p, height = 2, width = 6)
```

```{r}
#| label: tbl-dsfs
#| code-summary: Relationship days since sympton onset > 7 to outcome
#| tbl-cap: |
#|   Relationship between days since sympton onset > 7 and the primary outcome.
fas_itt_dat %>%
  dplyr::count(`DSFS > 7` = dsfsgt7, PO) %>%
  group_by(`DSFS > 7`) %>%
  spread(PO, n, fill = 0) %>%
  mutate(
    p_1 = `1` / (`1` + `0`),
    p_miss = `<NA>` / (`1` + `0` + `<NA>`)
  ) %>%
  kable(digits = 2) %>%
  kable_styling(bootstrap_options = "striped")
```

## Oxygen

```{r}
#| label: tbl-on-room-air
#| code-summary: Relationship of on room air at baseline to outcome
#| tbl-cap: |
#|   Relationship between on room air and the primary outcome.
all_dat %>%
  filter_fas_itt() %>%
  dplyr::count(BAS_OnRoomAir24hrsUnknown, BAS_OnRoomAir24hrs, PO) %>%
  spread(PO, n, fill = 0) %>%
  mutate(
    p_1 = `1` / (`1` + `0`),
    p_miss = `<NA>` / (`1` + `0` + `<NA>`)
  ) %>%
  kable(digits = 2) %>%
  kable_styling(bootstrap_options = "striped")
```

```{r}
#| label: fig-oxygen-sat
#| code-summary: Relationship oxygen saturation to outcome
#| fig-cap: |
#|   Relationship (logistic regression linear) 
#|   between oxygen saturation at entry and the primary outcome.
podat <- fas_itt_dat %>%
  dplyr::count(PO, oxygen_sat) %>% 
  spread(PO, n, fill = 0) %>% 
  mutate(p = `1` / (`1` + `0`))
pomod <- glm(
  cbind(`1`, `0`) ~ I(oxygen_sat - 94), 
  data = podat, 
  family = binomial())
podat <- podat %>%
  mutate(
    ypred = predict(pomod, newdata = podat, type = "response")
  )
p <- ggplot(podat, aes(oxygen_sat, p)) +
    geom_point() +
    geom_line(aes(y = ypred)) +
    labs(y = "Proportion with outcome", x = "Days since onset")
ggplotly(p)
```

## Weight

```{r}
#| label: fig-weight
#| code-summary: Relationship weight to outcome
#| fig-cap: |
#|   Relationship (logistic regression linear) 
#|   between weight at entry and the primary outcome.
weightdat <- fas_itt_dat %>%
  filter(!is.na(weight), !is.na(PO)) %>%
  select(Sex, weight, PO)
weightdatprop <- weightdat %>%
  group_by(Sex, weight) %>%
  summarise(p = mean(PO))
weightmod <- glm(
  PO ~ Sex * I(weight - mean(weight, na.rm = T)), 
  data = weightdat, 
  family = binomial())
weightdat <- weightdat %>%
  mutate(
    ypred = predict(weightmod, newdata = weightdat, type = "response")
  )
p <- ggplot(weightdat, aes(weight, p)) +
  facet_wrap( ~ Sex) +
    geom_point(data = weightdatprop) +
    geom_line(aes(y = ypred)) +
    labs(y = "Proportion with outcome", x = "Days since onset")
ggplotly(p)
```

```{r}
#| label: tbl-weight
#| code-summary: Relationship weight > 120 kg to outcome
#| tbl-cap: |
#|   Relationship between weight > 120 kg and the primary outcome.
fas_itt_dat %>%
  dplyr::count(`Weight > 120 kg` = weightgt120, PO) %>%
  group_by(`Weight > 120 kg`) %>%
  spread(PO, n, fill = 0) %>%
  mutate(
    p_1 = `1` / (`1` + `0`),
    p_miss = `<NA>` / (`1` + `0` + `<NA>`)
  ) %>%
  kable(digits = 2) %>%
  kable_styling(bootstrap_options = "striped")
```

## Anti-coagulation Domain

```{r}
#| label: tbl-domainC-po
#| code-summary: Relationship anti-coagulation to outcome
#| tbl-cap: Primary outcome by anti-coagulation intervention.
make_po_table <- function(dat, format = "html") {
  tab <- dat %>%
    mutate(CAssignment = factor(CAssignment, levels = c("C1", "C2", "C3", "C4"), labels = intervention_labels()$CAssignment[-1])) %>%
    group_by(CAssignment) %>%
    summarise(
      Randomised = n(),
      `Outcome missing` = sprintf("%i (%.1f)", sum(is.na(PO)), 100 * mean(is.na(PO))),
      `Outcome observed` = sprintf("%i (%.1f)", sum(!is.na(PO)), 100 * mean(!is.na(PO))),
      `Met primary outcome` = sprintf("%i (%.1f)", sum(PO, na.rm = TRUE), 100 * mean(PO, na.rm = TRUE)),
    ) %>%
    bind_rows(
      dat  %>%
        group_by(CAssignment = "Overall") %>%
        summarise(
          Randomised = n(),
          `Outcome missing` = sprintf("%i (%.1f)", sum(is.na(PO)), 100 * mean(is.na(PO))),
          `Outcome observed` = sprintf("%i (%.1f)", sum(!is.na(PO)), 100 * mean(!is.na(PO))),
          `Met primary outcome` = sprintf("%i (%.1f)", sum(PO, na.rm = TRUE), 100 * mean(PO, na.rm = TRUE)),
      )
    ) %>%
    mutate(CAssignment = fct_inorder(CAssignment)) %>%
    gather(key, value, -CAssignment, factor_key = T) %>%
    spread(CAssignment, value)
  colnames(tab)[1] <- "n (\\%)"
  if(format == "latex") {
    colnames(tab) <- linebreak(colnames(tab), align = "c", linebreaker = "<br>")
  }
    kable(tab,
      format = format,
      align = "lrrrrr",
      escape = FALSE,
      booktabs = TRUE
    ) %>%
    kable_styling(font_size = 10, latex_options = "HOLD_position")  
}
make_po_table(
    all_dat %>%
      filter_acs_itt()
)
save_tex_table(make_po_table(
      all_dat %>%
      filter_acs_itt(),
      "latex"), 
      "outcomes/primary/anticoagulation-summary")
```

# Analyses

## ACS-ITT

In these analyses, the population is restricted to participants who were randomised to the anti-coagulation domain.

### Treatment only

```{r}
#| label: sample-trtonly-acs-itt-model
#| code-summary: Data and sampling treatment only model
seed <- 17250
mdat <- make_primary_model_data(acs_itt_nona_dat)
snk <- capture.output(
  mfit <- logistic_mod$sample(
    data = mdat,
    seed = seed,
    refresh = 0,
    iter_warmup = 1000,
    iter_sampling = 2500,
    chains = 8,
    parallel_chains = 8
))
mdrws <- as_draws_rvars(mfit$draws(c("beta")))
names(mdrws$beta) <- colnames(mdat$X)

# Transformed samples
Ca <- mdat$ctrA
Cc <- mdat$ctrC

mdrws$Acon <- Ca %**% mdrws$beta[grepl("randA[0-9]", names(mdrws$beta))]
mdrws$Ccon <- Cc %**% mdrws$beta[grepl("randC[0-9]", names(mdrws$beta))]
mdrws$Atrt <- mdrws$Acon[-1] - mdrws$Acon[1]
mdrws$Ctrt <- mdrws$Ccon[-1] - mdrws$Ccon[1]
mdrws$OR <- setNames(exp(mdrws$Ctrt), c("Intermediate", "Standard plus aspirin", "Therapeutic"))
```

```{r}
#| label: fig-or-densities-trtonly-acs-itt-model
#| fig-cap: Posterior densities for odds ratio contrasts.
plot_or_densities(mdrws$OR)
```

```{r}
#| label: tbl-or-densities-trtonly-acs-itt-model
#| tbl-cap: Posterior summaries for odds ratio contrasts.
odds_ratio_summary_table(mdrws$OR)
```

:::{.callout-caution collapse="true"}
#### Diagnostics
```{r}
mfit$summary("beta")
mfit$diagnostic_summary()
```
:::

:::{.callout-caution collapse="true"}
#### Trace plots
```{r}
mcmc_trace(mdrws["beta"])
```
:::

### Treatment plus covariates (no site or epoch)

Under this model a component is added for country (region), $\mathbb{I}[\text{age}\geq 60]$, and intervention specific ineligibility (C3 only)

::: column-margin
New terms:

$$
\begin{aligned}
\rho_1 &= 0 \\
\rho_r &\overset{\text{iid}}{\sim} \text{Normal}(0, 1), r=2,...,R,\\
\beta_{\text{age}\geq 60} &\sim \text{Normal}(0, 2.5^2) \\
\beta_{\text{inelgC3}} &\sim \text{Normal}(0, 10)
\end{aligned}
$$
:::

```{r}
#| label: sample-no-site-epoch-acs-itt-model
seed <- 71236
mdat <- make_primary_model_data(
  acs_itt_nona_dat,
  c("inelgc3", "agegte60", "ctry"),
  c(10, 2.5, 1, 1)
)
snk <- capture.output(
  mfit <- logistic_mod$sample(
    data = mdat,
    seed = seed,
    refresh = 0,
    iter_warmup = 1000,
    iter_sampling = 2500,
    chains = 8,
    parallel_chains = 8
))
mdrws <- as_draws_rvars(mfit$draws(c("beta")))
names(mdrws$beta) <- colnames(mdat$X)

# Transformed samples
Ca <- mdat$ctrA
Cc <- mdat$ctrC

mdrws$Acon <- Ca %**% mdrws$beta[grepl("randA[0-9]", names(mdrws$beta))]
mdrws$Ccon <- Cc %**% mdrws$beta[grepl("randC[0-9]", names(mdrws$beta))]
mdrws$Atrt <- mdrws$Acon[-1] - mdrws$Acon[1]
mdrws$Ctrt <- mdrws$Ccon[-1] - mdrws$Ccon[1]
mdrws$OR <- setNames(exp(mdrws$Ctrt), c("Intermediate", "Standard plus aspirin", "Therapeutic"))
mdrws$OR <- c(mdrws$OR, setNames(exp(mdrws$beta[7:8]), c("Inelgible aspirin", "Age 60+")))
```

```{r}
#| label: fig-or-densities-noepochsite-acs-itt-model
#| fig-cap: Posterior densities for odds ratio contrasts.
plot_or_densities(mdrws$OR)
```

```{r}
#| label: tbl-or-densities-noepochsite-acs-itt-model
#| tbl-cap: Posterior summaries for odds ratio contrasts.
odds_ratio_summary_table(mdrws$OR)
```

:::{.callout-caution collapse="true"}
#### Diagnostics
```{r}
mfit$summary("beta")
mfit$diagnostic_summary()
```
:::

:::{.callout-caution collapse="true"}
#### Trace plots
```{r}
mcmc_trace(mdrws["beta"])
```
:::

### Treatment plus covariates plus site (no epoch)

Under this model a component is added for site nested within country.

::: column-margin
New terms

$$
\begin{aligned}
\xi_{rs} &\overset{\text{iid}}{\sim}\text{Normal}(0,\sigma^2_{r}), s=1,...,S_r, r=1,...,R \\
\sigma_r &\overset{\text{iid}}{\sim} \text{Half-}t(3, 1).
\end{aligned}
$$
:::

```{r}
#| label: model-noepoch-acs-itt-fit
#| code-summary: Data and sampling no site or epoch model
seed <- 71236
mdat <- make_primary_model_data(
  acs_itt_nona_dat,
  c("inelgc3", "agegte60", "ctry"),
  c(10, 2.5, 1, 1)
)
snk <- capture.output(
  mfit <- logistic_site_mod$sample(
    data = mdat,
    seed = seed,
    refresh = 0,
    iter_sampling = 2500,
    chains = 8,
    parallel_chains = 8,
    adapt_delta = 0.95
))
mdrws <- as_draws_rvars(mfit$draws(c("beta", "gamma_site", "tau_site")))
names(mdrws$beta) <- colnames(mdat$X)
site_map <- acs_itt_nona_dat %>% dplyr::count(site_num, site)
names(mdrws$gamma_site) <- site_map$site

# Transformed samples
Ca <- mdat$ctrA
Cc <- mdat$ctrC

mdrws$Acon <- Ca %**% mdrws$beta[grepl("randA[0-9]", names(mdrws$beta))]
mdrws$Ccon <- Cc %**% mdrws$beta[grepl("randC[0-9]", names(mdrws$beta))]
mdrws$Atrt <- mdrws$Acon[-1] - mdrws$Acon[1]
mdrws$Ctrt <- mdrws$Ccon[-1] - mdrws$Ccon[1]
mdrws$OR <- setNames(exp(mdrws$Ctrt), c("Intermediate", "Standard plus aspirin", "Therapeutic"))
mdrws$OR <- c(mdrws$OR, setNames(exp(mdrws$beta[7:10]), c("Inelgible aspirin", "Age 60+", "Australia/New Zealand", "Nepal")))
```

```{r}
#| label: fig-or-densities-noepoch-acs-itt-model
#| fig-cap: Posterior densities for odds ratio contrasts.
plot_or_densities(mdrws$OR)
```

```{r}
#| label: tbl-or-densities-noepoch-acs-itt-model
#| tbl-cap: Posterior summaries for odds ratio contrasts.
odds_ratio_summary_table(mdrws$OR)
```

```{r}
#| label: fig-site-effects-noepoch-acs-itt-model
#| fig-cap: Site effect odds ratios.
plot_site_terms(
  exp(mdrws$gamma_site), 
  factor(
    mdat$region_by_site, 
    labels = c("India", "Australia\nNew Zealand", "Nepal"))
)
```

:::{.callout-caution collapse="true"}
#### Diagnostics
```{r}
mfit$summary(c("beta", "gamma_site", "tau_site"))
mfit$diagnostic_summary()
```
:::

:::{.callout-caution collapse="true"}
#### Trace plots
```{r}
mcmc_trace(mdrws["beta"])
mcmc_trace(mdrws["gamma_site"])
mcmc_trace(mdrws["tau_site"])
```
:::

### Treatment plus covariates plus epoch (no site)

::: column-margin
Replace site terms with epoch terms

$$
\begin{aligned}
\tau_1 &= 0 \\
\tau_t &= \tau_{t-1} + \sigma_\tau\epsilon_t \\
\epsilon_t &\overset{\text{iid}}{\sim} \text{Normal}(0,1) \\
\sigma_\tau &\sim \text{Half-}t(3, 1)
\end{aligned}
$$
:::

```{r}
#| label: model-nosite-acs-itt-fit
#| code-summary: Data and sampling no site model
seed <- 71236
mdat <- make_primary_model_data(
  acs_itt_nona_dat,
  c("inelgc3", "agegte60", "ctry"),
  c(10, 2.5, 1, 1)
)
snk <- capture.output(
  mfit <- logistic_epoch_mod$sample(
    data = mdat,
    seed = seed,
    refresh = 0,
    iter_sampling = 2500,
    chains = 8,
    parallel_chains = 8,
    adapt_delta = 0.98
))
mdrws <- as_draws_rvars(mfit$draws(c("beta", "gamma_epoch", "tau_epoch")))
names(mdrws$beta) <- colnames(mdat$X)
epoch_map <- acs_itt_nona_dat %>% dplyr::count(epoch, epoch_lab)
names(mdrws$gamma_epoch) <- epoch_map$epoch_lab

# Transformed samples
Ca <- mdat$ctrA
Cc <- mdat$ctrC

mdrws$Acon <- Ca %**% mdrws$beta[grepl("randA[0-9]", names(mdrws$beta))]
mdrws$Ccon <- Cc %**% mdrws$beta[grepl("randC[0-9]", names(mdrws$beta))]
mdrws$Atrt <- mdrws$Acon[-1] - mdrws$Acon[1]
mdrws$Ctrt <- mdrws$Ccon[-1] - mdrws$Ccon[1]
mdrws$OR <- setNames(exp(mdrws$Ctrt), c("Intermediate", "Standard plus aspirin", "Therapeutic"))
mdrws$OR <- c(mdrws$OR, setNames(exp(mdrws$beta[7:10]), c("Inelgible aspirin", "Age 60+", "Australia/New Zealand", "Nepal")))
```

```{r}
#| label: fig-or-densities-nosite-acs-itt-model
#| fig-cap: Posterior densities for odds ratio contrasts.
plot_or_densities(mdrws$OR)
```

```{r}
#| label: tbl-or-densities-nosite-acs-itt-model
#| tbl-cap: Posterior summaries for odds ratio contrasts.
odds_ratio_summary_table(mdrws$OR)
```

```{r}
#| label: fig-epoch-effects-nosite-acs-itt-model
#| fig-cap: Epoch effect odds ratios.
plot_epoch_terms(
  exp(mdrws$gamma_epoch)
)
```

:::{.callout-caution collapse="true"}
#### Diagnostics
```{r}
mfit$summary(c("beta", "gamma_epoch", "tau_epoch"))
mfit$diagnostic_summary()
```
:::

:::{.callout-caution collapse="true"}
#### Trace plots
```{r}
mcmc_trace(mdrws["beta"])
mcmc_trace(mdrws["gamma_epoch"])
mcmc_trace(mdrws["tau_epoch"])
```
:::

### Primary Model

```{r}
#| label: model-primary-sampling
#| code-summary: Data and sampling primary model
mdat <- make_primary_model_data(
  acs_itt_nona_dat,
  c("inelgc3", "agegte60", "ctry"),
  c(10, 2.5, 1, 1)
)
snk <- capture.output(
  mfit <- primary_mod$sample(
    data = mdat,
    seed = 32915,
    refresh = 0,
    iter_warmup = 1000,
    iter_sampling = 2500,
    chains = 8,
    parallel_chains = 8,
    adapt_delta = 0.99
))
mdrws <- as_draws_rvars(mfit$draws(c(
  "beta", 
  "gamma_site", "tau_site", 
  "gamma_epoch", "tau_epoch", 
  "y_ppc")))
names(mdrws$beta) <- colnames(mdat$X)
epoch_map <- acs_itt_nona_dat %>% dplyr::count(epoch, epoch_lab)
site_map <- acs_itt_nona_dat %>% dplyr::count(site_num, site)
names(mdrws$gamma_site) <- site_map$site
names(mdrws$gamma_epoch) <- epoch_map$epoch_lab

# Transformed samples
Ca <- mdat$ctrA
Cc <- mdat$ctrC

mdrws$Acon <- Ca %**% mdrws$beta[grepl("randA[0-9]", names(mdrws$beta))]
mdrws$Ccon <- Cc %**% mdrws$beta[grepl("randC[0-9]", names(mdrws$beta))]
mdrws$Atrt <- mdrws$Acon[-1] - mdrws$Acon[1]
mdrws$Ctrt <- mdrws$Ccon[-1] - mdrws$Ccon[1]

mdrws$OR <- setNames(exp(mdrws$Ctrt), c("Intermediate", "Standard plus aspirin", "Therapeutic"))
mdrws$OR <- c(mdrws$OR, setNames(exp(mdrws$beta[7:10]), c("Inelgible aspirin", "Age 60+", "Australia/New Zealand", "Nepal")))
```

```{r}
#| label: odds-ratio-summary-table-primary-model
#| tbl-cap: Posterior summaries for model parameters.
save_tex_table(
  odds_ratio_summary_table(mdrws$OR, "latex"),
  "outcomes/primary/primary-model-acs-itt-summary-table")
odds_ratio_summary_table(mdrws$OR)
```

```{r}
#| label: tbl-decision-quantities
#| tbl-cap: Decision quantity summaries
save_tex_table(
  decision_quantity_summary_table(c("Standard" = rvar(1), mdrws$OR[1:3]), "latex"),
  "outcomes/primary/primary-model-acs-itt-decision-table")
decision_quantity_summary_table(
  c("Standard" = rvar(1), mdrws$OR[1:3])
)
```

```{r}
#| label: odds-ratio-summary-primary-model-acs-itt-epoch-site-terms
p <- plot_epoch_site_terms(
  exp(mdrws$gamma_epoch), 
  exp(mdrws$gamma_site),
  factor(
    mdat$region_by_site, 
    labels = c("India", "Australia\nNew Zealand", "Nepal"))
)
pth <- file.path("outputs", "figures", "outcomes", "primary", "primary-model-acs-itt-epoch-site-terms.pdf")
ggsave(pth, p, width = 6, height = 4.5)
p
```

:::{.callout-caution collapse="true"}
#### Diagnostics
```{r}
mfit$summary(c("beta", "gamma_epoch", "tau_epoch", "gamma_site", "tau_site"))
mfit$diagnostic_summary()
```
:::

:::{.callout-caution collapse="true"}
#### Trace plots
```{r}
mcmc_trace(mdrws["beta"])
mcmc_trace(mdrws["gamma_epoch"])
mcmc_trace(mdrws["tau_epoch"])
mcmc_trace(mdrws["gamma_site"])
mcmc_trace(mdrws["tau_site"])
```
:::

#### Posterior Predictive Checks

```{r}
#| label: primary-acs-itt-ppc
y_ppc <- mdrws$y_ppc
ppc_dat <- bind_cols(acs_itt_nona_dat, tibble(y_ppc = y_ppc))

grp_ppc <- function(grp) {
  ppc_dat %>%
    group_by(grp = !!grp) %>%
    summarise(
      mean_y = mean(PO),
      rvar_mean_y_ppc = rvar_mean(y_ppc)
    )
}
plot_grp_ppc <- function(dat, lab = "") {
  dat %>%
    ggplot(aes(y = grp, xdist = rvar_mean_y_ppc)) +
    stat_interval(size = 2) +
    geom_point(aes(x = mean_y, y = 1:nrow(dat)), colour = "red", shape = 23) +
    labs(
      x = "Posterior predictive\nproportion", 
      y = lab)  
}

ppc_C <- grp_ppc(sym("CAssignment"))
ppc_ctry <- grp_ppc(sym("country"))
ppc_epoch <- grp_ppc(sym("epoch"))
ppc_site <- ppc_dat %>%
  group_by(Country = country, grp = site_raw) %>%
  summarise(
    mean_y = mean(PO),
    rvar_mean_y_ppc = rvar_mean(y_ppc)
  )

p1 <- plot_grp_ppc(ppc_C, "Anticoagulation\nintervention") + labs(x = "")
p2 <- plot_grp_ppc(ppc_ctry, "Country") + labs(x = "")
p3 <- plot_grp_ppc(ppc_epoch, "Epoch") + labs(x = "")
p4 <- plot_grp_ppc(ppc_site %>% filter(Country == "IN"), "Sites\nIndia")  + labs(x = "")
p5 <- plot_grp_ppc(ppc_site %>% filter(Country == "AU"), "Sites\nAustralia") + labs(x = "")
p6 <- plot_grp_ppc(ppc_site %>% filter(Country == "NP"), "Sites\nNepal")
p7 <- plot_grp_ppc(ppc_site %>% filter(Country == "NZ"), "Sites\nNZ")
p <- ((p3 | p1 / p2) / 
        ( (p4 | p5) / (p6 | p7) + 
            plot_layout(heights = c(3, 1)) ) ) +
  plot_layout(heights = c(1, 1.5), guides = "collect")
pth <- file.path("outputs", "figures", "outcomes", "primary",
                 "primary-model-acs-itt-ppc.pdf")
ggsave(pth, p, width = 6, height = 5.5)
p
```

### Subgroups

#### Country

```{r}
#| tbl-cap: Primary outcome by anti-coagulation intervention by country.
make_subgroup_country_table <- function(format = "html") {
  tdat <- acs_itt_dat %>%
    dplyr::count(
      Country = fct_infreq(ctry),
      `Anticoagulation intervention` = factor(
        CAssignment, labels = str_replace(intervention_labels()$CAssignment[-1], "<br>", " ")),
      PO) %>%
    complete(Country, `Anticoagulation intervention`, PO, fill = list(n = 0)) %>%
    group_by(Country, `Anticoagulation intervention`) %>%
    spread(PO, n, fill = 0) %>%
    ungroup() %>%
    mutate(
      Patients = `0` + `1` + `<NA>`,
      Known = `0` + `1`,
      `Primary outcome` = sprintf("%i (%.0f%%)", `1`, 100 * `1` / Known)
    ) %>%
    mutate(`Primary outcome` = str_replace(`Primary outcome`, "0 \\(NaN\\%\\)", "- (-%)")) %>%
    select(-Country, -`0`, -`1`, -`<NA>`)
  kable(
    tdat,
    format = format,
    digits = 2,
    align = "lrrr",
    booktabs = TRUE) %>%
  kable_styling(
    font_size = 9,
    bootstrap_options = "striped",
    latex_options = "HOLD_position") %>%
  pack_rows("India", 1, 4) %>%
  pack_rows("Australia/New Zealand", 5, 8) %>%
  pack_rows("Nepal", 9, 12) 
}
tab <- make_subgroup_country_table("latex")
save_tex_table(tab, "outcomes/primary/descriptive-acs-itt-subgroup-country-descriptive")
make_subgroup_country_table()
```

```{r}
mdat <- make_stan_data(
  acs_itt_nona_dat %>% 
    mutate(AAssignment = relevel(AAssignment, ref = "A0")),
  c("CAssignment", "AAssignment", "inelgc3", "agegte60", "ctry", "CAssignment:ctry"),
  "PO",
  beta_sd = c(2.5, rep(1, 5), 10, 2.5, rep(1, 8)),
  contr.treatment
)
snk <- capture.output(
  mfit <- primary_mod$sample(
    data = mdat,
    seed = 44106,
    refresh = 0,
    iter_warmup = 1000,
    iter_sampling = 2500,
    chains = 8,
    parallel_chains = 8,
    adapt_delta = 0.98
))
mdrws <- as_draws_rvars(mfit$draws(c(
  "beta", 
  "gamma_site", "tau_site", 
  "gamma_epoch", "tau_epoch", 
  "y_ppc")))
names(mdrws$beta) <- colnames(mdat$X)
epoch_map <- acs_itt_nona_dat %>% dplyr::count(epoch, epoch_lab)
site_map <- acs_itt_nona_dat %>% dplyr::count(site_num, site)
names(mdrws$gamma_epoch) <- epoch_map$epoch_lab
names(mdrws$gamma_site) <- site_map$site

Ca <- attr(mdat$X, "contrasts")$AAssignment
Cc <- attr(mdat$X, "contrasts")$CAssignment
mdrws$Acon <- Ca %**% mdrws$beta[grepl("AAssignment[0-9]", names(mdrws$beta))]
mdrws$Ccon <- Cc %**% mdrws$beta[grepl("CAssignment[0-9]$", names(mdrws$beta))]
mdrws$Atrt <- mdrws$Acon[-2] - mdrws$Acon[2]
mdrws$Ctrt <- mdrws$Ccon[-1] - mdrws$Ccon[1]

labs <- c("Intermediate", "Standard plus aspirin", "Therapeutic")
mdrws$CtrtIN <- setNames(mdrws$beta[2:4], labs)
mdrws$CtrtAUNZ <- setNames(mdrws$beta[2:4] + mdrws$beta[11:13], labs)
mdrws$CtrtNP <- setNames(mdrws$beta[2:4] + mdrws$beta[14:16], labs)

mdrws$OR <- exp(rbind(mdrws$CtrtIN, mdrws$CtrtAUNZ, mdrws$CtrtNP))
rownames(mdrws$OR) <- c("India", "Australia/New Zealand", "Nepal")
colnames(mdrws$OR) <- c("Intermediate", "Standard plus aspirin", "Therapeutic")
# Compare treatment effects across regions
mdrws$compare <- sweep(mdrws$OR[-1, ], 2, mdrws$OR[1, ], FUN = "/")

# Summarise subgroup effects
ordat <- expand_grid(
  Contrast = labs,
  Region = c("India", "Australia/New Zealand", "Nepal"),
) %>%
  mutate(Posterior = c(mdrws$OR)) %>%
  summarise_posterior()
# Summarise comparison of effects (reference is India)
compdat <- expand_grid(
  Contrast = labs,
  Region = c("Australia/New Zealand", "Nepal")
) %>%
  mutate(Posterior = c(mdrws$compare)) %>%
  summarise_posterior() %>%
  select(-`Pr(OR > 1/1.1)`)
```

```{r}
p <- plot_subgroup_or(ordat, sym("Region"))
ggsave(
  file.path("outputs", "figures", "outcomes", "primary", "acs-itt-subgroup-country-hte.pdf"),
  p, height = 3, width = 6)
p
```

```{r}
tab <- make_subgroup_summary_table(ordat, "latex")
save_tex_table(tab, "outcomes/primary/subgroup/country-odds-ratios")
make_subgroup_summary_table(ordat)
```

```{r}
tab <- make_subgroup_summary_table(compdat, "latex")
save_tex_table(tab, "outcomes/primary/subgroup/country-odds-ratios-compare")
make_subgroup_summary_table(compdat)
```

#### Age

```{r}
#| tbl-cap: Primary outcome by anti-coagulation intervention by age group
make_subgroup_age_table <- function(format = "html") {
  tdat <- all_dat %>%
    filter_acs_itt() %>%
    dplyr::count(
      Age = factor(agegte60, levels = 0:1),
      `Anticoagulation intervention` = factor(
        CAssignment, labels = str_replace(intervention_labels()$CAssignment[-1], "<br>", " ")),
      PO) %>%
    complete(Age, `Anticoagulation intervention`, PO, fill = list(n = 0)) %>%
    group_by(Age, `Anticoagulation intervention`) %>%
    spread(PO, n, fill = 0) %>%
    ungroup() %>%
    mutate(
      Patients = `0` + `1` + `<NA>`,
      Known = `0` + `1`,
      `Primary outcome` = sprintf("%i (%.0f%%)", `1`, 100 * `1` / Known)
    ) %>%
    mutate(`Primary outcome` = str_replace(`Primary outcome`, "0 \\(NaN\\%\\)", "- (-%)")) %>%
    select(-Age, -`0`, -`1`, -`<NA>`)
  kable(
    tdat,
    format = format,
    digits = 2,
    align = "lrrr",
    booktabs = TRUE) %>%
  kable_styling(
    font_size = 9,
    bootstrap_options = "striped",
    latex_options = "HOLD_position") %>%
  pack_rows("Age < 60 years", 1, 4) %>%
  pack_rows("Age 60+ years", 5, 8)  
}
tab <- make_subgroup_age_table("latex")
save_tex_table(tab, "outcomes/primary/descriptive-acs-itt-subgroup-age-descriptive")
make_subgroup_age_table()
```

```{r}
mdat <- make_stan_data(
  acs_itt_nona_dat %>% mutate(AAssignment = relevel(AAssignment, ref = "A0")),
  c("CAssignment", "AAssignment", "inelgc3", "agegte60", "ctry", "CAssignment:agegte60"),
  "PO",
  beta_sd = c(2.5, rep(1, 5), 10, 2.5, rep(1, 5)),
  contr.treatment
)
snk <- capture.output(
  mfit <- primary_mod$sample(
    data = mdat,
    seed = 44106,
    refresh = 0,
    iter_warmup = 1000,
    iter_sampling = 2500,
    chains = 8,
    parallel_chains = 8,
    adapt_delta = 0.98
))
mdrws <- as_draws_rvars(mfit$draws(c(
  "beta", 
  "gamma_site", "tau_site", 
  "gamma_epoch", "tau_epoch", 
  "y_ppc")))
names(mdrws$beta) <- colnames(mdat$X)
epoch_map <- acs_itt_nona_dat %>% dplyr::count(epoch, epoch_lab)
site_map <- acs_itt_nona_dat %>% dplyr::count(site_num, site)
names(mdrws$gamma_epoch) <- epoch_map$epoch_lab
names(mdrws$gamma_site) <- site_map$site

labs <- c("Intermediate", "Standard plus aspirin", "Therapeutic")
mdrws$CtrtAgelt60 <- setNames(as.vector(mdrws$beta[2:4]), labs)
mdrws$CtrtAgegt60 <- setNames(as.vector(mdrws$beta[2:4] + mdrws$beta[11:13]), labs)
mdrws$OR <- exp(c(mdrws$CtrtAgelt60, mdrws$CtrtAgegt60))
ordat <- expand_grid(
  Age = c("Age < 60", "Age 60+"),
  Contrast = labs
) %>%
  mutate(Posterior = mdrws$OR)
```

```{r}
p <- plot_subgroup_or(ordat, sym("Age"))
ggsave(
  file.path("outputs", "figures", "outcomes", "primary", "acs-itt-subgroup-age-hte.pdf"),
  p, height = 3, width = 6)
p
```

#### Days since symptom onset only

```{r}
#| tbl-cap: Primary outcome by anti-coagulation intervention by days since first symptom group.
make_subgroup_dsfs_table <- function(format = "html") {
  tdat <- acs_itt_dat %>%
    dplyr::count(
      dsfs = factor(dsfsgt7, levels = 0:1),
      `Anticoagulation intervention` = factor(
        CAssignment, labels = str_replace(intervention_labels()$CAssignment[-1], "<br>", " ")),
      PO) %>%
    complete(dsfs, `Anticoagulation intervention`, PO, fill = list(n = 0)) %>%
    group_by(dsfs, `Anticoagulation intervention`) %>%
    spread(PO, n, fill = 0) %>%
    ungroup() %>%
    mutate(
      Patients = `0` + `1` + `<NA>`,
      Known = `0` + `1`,
      `Primary outcome` = sprintf("%i (%.0f%%)", `1`, 100 * `1` / Known)
    ) %>%
    mutate(`Primary outcome` = str_replace(`Primary outcome`, "0 \\(NaN\\%\\)", "- (-%)")) %>%
    select(-dsfs, -`0`, -`1`, -`<NA>`)
  kable(tdat,
        format = format,
      digits = 2,
      align = "lrrr",
      booktabs = TRUE) %>%
    kable_styling(
      font_size = 9,
      bootstrap_options = "striped",
      latex_options = "HOLD_position") %>%
    pack_rows("Days since first symptoms <= 7", 1, 4) %>%
    pack_rows("Days since first symptoms > 7", 5, 8) 
}
tab <- make_subgroup_dsfs_table("latex")
save_tex_table(tab, "outcomes/primary/descriptive-acs-itt-subgroup-dsfs-descriptive")
make_subgroup_dsfs_table()
```

```{r}
mdat <- make_stan_data(
  acs_itt_nona_dat %>% mutate(AAssignment = relevel(AAssignment, ref = "A0")),
  c("CAssignment", "AAssignment", "inelgc3", "agegte60", "dsfsgt7", "ctry", "CAssignment:dsfsgt7"),
  "PO",
  beta_sd = c(2.5, rep(1, 5), 10, 2.5, 2.5, rep(1, 5)),
  contr.treatment
)
snk <- capture.output(
  mfit <- primary_mod$sample(
    data = mdat,
    seed = 49173,
    refresh = 0,
    iter_warmup = 1000,
    iter_sampling = 2500,
    chains = 8,
    parallel_chains = 8,
    adapt_delta = 0.98
))
mdrws <- as_draws_rvars(mfit$draws(c(
  "beta", 
  "gamma_site", "tau_site", 
  "gamma_epoch", "tau_epoch", 
  "y_ppc")))
names(mdrws$beta) <- colnames(mdat$X)
epoch_map <- acs_itt_nona_dat %>% dplyr::count(epoch, epoch_lab)
site_map <- acs_itt_nona_dat %>% dplyr::count(site_num, site)
names(mdrws$gamma_epoch) <- epoch_map$epoch_lab
names(mdrws$gamma_site) <- site_map$site

labs <- c("Intermediate", "Standard plus aspirin", "Therapeutic")
mdrws$CtrtDSFSlt7 <- setNames(as.vector(mdrws$beta[2:4]), labs)
mdrws$CtrtDSFSgt7 <- setNames(as.vector(mdrws$beta[2:4] + mdrws$beta[12:14]), labs)
mdrws$OR <- exp(c(mdrws$CtrtDSFSlt7, mdrws$CtrtDSFSgt7))
ordat <- expand_grid(
  `Days since first symptoms` = c("DSFS <= 7", "DSFS > 7"),
  Contrast = labs
) %>%
  mutate(Posterior = mdrws$OR)
```

```{r}
p <- plot_subgroup_or(ordat, sym("Days since first symptoms"))
ggsave(file.path("outputs", "figures", "outcomes", "primary", "acs-itt-subgroup-dsfs-hte.pdf"),
       p,
       height = 3, width = 6)
p
```

#### Received corticosteroids

It is noted that receipt of corticosteroids is a post-randomisation event, and therefore may be affected by both the assigned treatment and the patients progression making interpretation difficult.

```{r}
#| tbl-cap: Primary outcome by anti-coagulation intervention by receipt of corticosteroids.
make_subgroup_steroids_table <- function(format = "html") {
  tdat <- acs_itt_dat %>%
  dplyr::count(
    rec_steroids,
    `Anticoagulation intervention` = factor(
      CAssignment, labels = str_replace(intervention_labels()$CAssignment[-1], "<br>", " ")),
    PO) %>%
  complete(rec_steroids, `Anticoagulation intervention`, PO, fill = list(n = 0)) %>%
  group_by(rec_steroids, `Anticoagulation intervention`) %>%
  spread(PO, n, fill = 0) %>%
  ungroup() %>%
  mutate(
    Patients = `0` + `1` + `<NA>`,
    Known = `0` + `1`,
    `Primary outcome` = sprintf("%i (%.0f%%)", `1`, 100 * `1` / Known)
  ) %>%
  mutate(`Primary outcome` = str_replace(`Primary outcome`, "0 \\(NaN\\%\\)", "- (-%)")) %>%
  select(-rec_steroids, -`0`, -`1`, -`<NA>`)
kable(tdat,
      format = format,
    digits = 2,
    align = "lrrr",
    booktabs = TRUE) %>%
  kable_styling(
    font_size = 9,
    bootstrap_options = "striped",
    latex_options = "HOLD_position") %>%
  pack_rows("Did not receive corticosteroids", 1, 4) %>%
  pack_rows("Received corticosteroids", 5, 8)
}
tab <- make_subgroup_steroids_table("latex")
save_tex_table(tab, "outcomes/primary/descriptive-acs-itt-subgroup-steroids-descriptive")
make_subgroup_steroids_table()
```

```{r}
mdat <- make_stan_data(
  acs_itt_nona_dat %>% mutate(AAssignment = relevel(AAssignment, ref = "A0")),
  c("CAssignment", "AAssignment", "inelgc3", "agegte60", "rec_steroids", "ctry", "CAssignment:rec_steroids"),
  "PO",
  beta_sd = c(2.5, rep(1, 5), 10, 2.5, 2.5, rep(1, 5)),
  contr.treatment
)
snk <- capture.output(
  mfit <- primary_mod$sample(
    data = mdat,
    seed = 49173,
    refresh = 0,
    iter_warmup = 1000,
    iter_sampling = 2500,
    chains = 8,
    parallel_chains = 8,
    adapt_delta = 0.98
))
mdrws <- as_draws_rvars(mfit$draws(c(
  "beta", 
  "gamma_site", "tau_site", 
  "gamma_epoch", "tau_epoch", 
  "y_ppc")))
names(mdrws$beta) <- colnames(mdat$X)
epoch_map <- acs_itt_nona_dat %>% dplyr::count(epoch, epoch_lab)
site_map <- acs_itt_nona_dat %>% dplyr::count(site_num, site)
names(mdrws$gamma_epoch) <- epoch_map$epoch_lab
names(mdrws$gamma_site) <- site_map$site

labs <- c("Intermediate", "Standard plus aspirin", "Therapeutic")
mdrws$noSteroids <- setNames(as.vector(mdrws$beta[2:4]), labs)
mdrws$recSteroids <- setNames(as.vector(mdrws$beta[2:4] + mdrws$beta[12:14]), labs)
mdrws$OR <- exp(c(mdrws$noSteroids, mdrws$recSteroids))
ordat <- expand_grid(
  `Received corticosteroids` = c("No", "Yes"),
  Contrast = labs
) %>%
  mutate(Posterior = mdrws$OR)
```

```{r}
p <- plot_subgroup_or(ordat, sym("Received corticosteroids"))
ggsave(file.path("outputs", "figures", "outcomes", "primary", "acs-itt-subgroup-steroids-hte.pdf"),
       p,
       height = 3, width = 6)
p
```

#### Received remdesivir

It is noted that receipt of remdesivir is a post-randomisation event, and therefore may be affected by both the assigned treatment and the patients progression making interpretation difficult.

```{r}
#| tbl-cap: Primary outcome by anti-coagulation intervention by receipt of remdesivir.
make_subgroup_remdesivir_table <- function(format = "html") {
  tdat <- acs_itt_dat %>%
  dplyr::count(
    rec_remdesivir,
    `Anticoagulation intervention` = factor(
      CAssignment, labels = str_replace(intervention_labels()$CAssignment[-1], "<br>", " ")),
    PO) %>%
  complete(rec_remdesivir, `Anticoagulation intervention`, PO, fill = list(n = 0)) %>%
  group_by(rec_remdesivir, `Anticoagulation intervention`) %>%
  spread(PO, n, fill = 0) %>%
  ungroup() %>%
  mutate(
    Patients = `0` + `1` + `<NA>`,
    Known = `0` + `1`,
    `Primary outcome` = sprintf("%i (%.0f%%)", `1`, 100 * `1` / Known)
  ) %>%
  mutate(`Primary outcome` = str_replace(`Primary outcome`, "0 \\(NaN\\%\\)", "- (-%)")) %>%
  select(-rec_remdesivir, -`0`, -`1`, -`<NA>`)
kable(tdat,
      format = format,
    digits = 2,
    align = "lrrr",
    booktabs = TRUE) %>%
  kable_styling(
    font_size = 9,
    bootstrap_options = "striped",
    latex_options = "HOLD_position") %>%
  pack_rows("Did not receive remdesivir", 1, 4) %>%
  pack_rows("Received remdesivir", 5, 8)
}
tab <- make_subgroup_remdesivir_table("latex")
save_tex_table(tab, "outcomes/primary/descriptive-acs-itt-subgroup-remdesivir-descriptive")
make_subgroup_remdesivir_table()
```

```{r}
mdat <- make_stan_data(
  acs_itt_nona_dat %>% mutate(AAssignment = relevel(AAssignment, ref = "A0")),
  c("CAssignment", "AAssignment", "inelgc3", "agegte60", "rec_remdesivir", "ctry", "CAssignment:rec_remdesivir"),
  "PO",
  beta_sd = c(2.5, rep(1, 5), 10, 2.5, 2.5, rep(1, 5)),
  contr.treatment
)
snk <- capture.output(
  mfit <- primary_mod$sample(
    data = mdat,
    seed = 49171,
    refresh = 0,
    iter_warmup = 1000,
    iter_sampling = 2500,
    chains = 8,
    parallel_chains = 8,
    adapt_delta = 0.98
))
mdrws <- as_draws_rvars(mfit$draws(c(
  "beta", 
  "gamma_site", "tau_site", 
  "gamma_epoch", "tau_epoch", 
  "y_ppc")))
names(mdrws$beta) <- colnames(mdat$X)
epoch_map <- acs_itt_nona_dat %>% dplyr::count(epoch, epoch_lab)
site_map <- acs_itt_nona_dat %>% dplyr::count(site_num, site)
names(mdrws$gamma_epoch) <- epoch_map$epoch_lab
names(mdrws$gamma_site) <- site_map$site

labs <- c("Intermediate", "Standard plus aspirin", "Therapeutic")
mdrws$noRem <- setNames(as.vector(mdrws$beta[2:4]), labs)
mdrws$recRem <- setNames(as.vector(mdrws$beta[2:4] + mdrws$beta[12:14]), labs)
mdrws$OR <- exp(c(mdrws$noRem, mdrws$recRem))
ordat <- expand_grid(
  `Received remdesivir` = c("No", "Yes"),
  Contrast = labs
) %>%
  mutate(Posterior = mdrws$OR)
```

```{r}
p <- plot_subgroup_or(ordat, sym("Received remdesivir"))
ggsave(
  file.path("outputs", "figures", "outcomes", "primary", "acs-itt-subgroup-remdesivir-hte.pdf"),
  p, height = 3, width = 6)
p
```

#### Receipt of other agent intended to be an antiviral agent against SARS-CoV-2

```{r}
#| tbl-cap: Primary outcome by anti-coagulation intervention by receipt of remdesivir.
make_subgroup_antiviral_table <- function(format = "html") {
  tdat <- acs_itt_dat %>%
  dplyr::count(
    rec_antiviral,
    `Anticoagulation intervention` = factor(
      CAssignment, labels = str_replace(intervention_labels()$CAssignment[-1], "<br>", " ")),
    PO) %>%
  complete(rec_antiviral, `Anticoagulation intervention`, PO, fill = list(n = 0)) %>%
  group_by(rec_antiviral, `Anticoagulation intervention`) %>%
  spread(PO, n, fill = 0) %>%
  ungroup() %>%
  mutate(
    Patients = `0` + `1` + `<NA>`,
    Known = `0` + `1`,
    `Primary outcome` = sprintf("%i (%.0f%%)", `1`, 100 * `1` / Known)
  ) %>%
  mutate(`Primary outcome` = str_replace(`Primary outcome`, "0 \\(NaN\\%\\)", "- (-%)")) %>%
  select(-rec_antiviral, -`0`, -`1`, -`<NA>`)
kable(tdat,
      format = format,
    digits = 2,
    align = "lrrr",
    booktabs = TRUE) %>%
  kable_styling(
    font_size = 9,
    bootstrap_options = "striped",
    latex_options = "HOLD_position") %>%
  pack_rows("Did not receive other antiviral", 1, 4) %>%
  pack_rows("Received other antiviral", 5, 8)
}
tab <- make_subgroup_antiviral_table("latex")
save_tex_table(tab, "outcomes/primary/descriptive-acs-itt-subgroup-antiviral-descriptive")
make_subgroup_antiviral_table()
```

```{r}
mdat <- make_stan_data(
  acs_itt_nona_dat %>% mutate(AAssignment = relevel(AAssignment, ref = "A0")),
  c("CAssignment", "AAssignment", "inelgc3", "agegte60", "rec_antiviral", "ctry", "CAssignment:rec_antiviral"),
  "PO",
  beta_sd = c(2.5, rep(1, 5), 10, 2.5, 2.5, rep(1, 5)),
  contr.treatment
)
snk <- capture.output(
  mfit <- primary_mod$sample(
    data = mdat,
    seed = 20195,
    refresh = 0,
    iter_warmup = 1000,
    iter_sampling = 2500,
    chains = 8,
    parallel_chains = 8,
    adapt_delta = 0.98
))
mdrws <- as_draws_rvars(mfit$draws(c(
  "beta", 
  "gamma_site", "tau_site", 
  "gamma_epoch", "tau_epoch", 
  "y_ppc")))
names(mdrws$beta) <- colnames(mdat$X)
epoch_map <- acs_itt_nona_dat %>% dplyr::count(epoch, epoch_lab)
site_map <- acs_itt_nona_dat %>% dplyr::count(site_num, site)
names(mdrws$gamma_epoch) <- epoch_map$epoch_lab
names(mdrws$gamma_site) <- site_map$site

labs <- c("Intermediate", "Standard plus aspirin", "Therapeutic")
mdrws$noantiviral <- setNames(as.vector(mdrws$beta[2:4]), labs)
mdrws$antiviral <- setNames(as.vector(mdrws$beta[2:4] + mdrws$beta[12:14]), labs)

mdrws$compare <- mdrws$antiviral - mdrws$noantiviral

mdrws$OR <- exp(c(mdrws$noantiviral, mdrws$antiviral))
ordat <- expand_grid(
  Contrast = labs,
  `Received other antiviral` = c("No", "Yes"),
) %>%
  mutate(
    Posterior = mdrws$OR,
    Median = sprintf("%.2f", median(Posterior)),
    `95\\% CrI` = sprintf("(%.2f, %.2f)", quantile(Posterior, 0.025), quantile(Posterior, 0.975)),
    `Mean (SD)` = sprintf("%.2f (%.2f)", mean(Posterior), sd(Posterior)),
    `Pr(OR < 1)` = sprintf("%.2f", Pr(Posterior < 1)),
    `Pr(OR > 1/1.1)` = sprintf("%.2f", Pr(Posterior > 1/1.1))
  )
```

```{r}

make_subgroup_summary_table(ordat, "html")
```


```{r}
p <- plot_subgroup_or(ordat, sym("Received other antiviral"))
ggsave(
  file.path("outputs", "figures", "outcomes", "primary", "acs-itt-subgroup-antiviral-hte.pdf"),
  p, height = 3, width = 6)
p
```

#### D-dimer

```{r}
#| tbl-cap: Primary outcome by anti-coagulation intervention by D-dimer out of range.
make_subgroup_ddimer_table <- function(format = "html") {
  tdat <- acs_itt_dat %>%
  dplyr::count(
    ddimer_oor,
    `Anticoagulation intervention` = factor(
      CAssignment, labels = str_replace(intervention_labels()$CAssignment[-1], "<br>", " ")),
    PO) %>%
  complete(ddimer_oor, `Anticoagulation intervention`, PO, fill = list(n = 0)) %>%
  group_by(ddimer_oor, `Anticoagulation intervention`) %>%
  spread(PO, n, fill = 0) %>%
  ungroup() %>%
  mutate(
    Patients = `0` + `1` + `<NA>`,
    Known = `0` + `1`,
    `Primary outcome` = sprintf("%i (%.0f%%)", `1`, 100 * `1` / Known)
  ) %>%
  mutate(`Primary outcome` = str_replace(`Primary outcome`, "0 \\(NaN\\%\\)", "- (-%)")) %>%
  select(-ddimer_oor, -`0`, -`1`, -`<NA>`)
kable(tdat,
      format = format,
    digits = 2,
    align = "lrrr",
    booktabs = TRUE) %>%
  kable_styling(
    font_size = 9,
    bootstrap_options = "striped",
    latex_options = "HOLD_position") %>%
  pack_rows("D-Dimer in range", 1, 4) %>%
  pack_rows("D-Dimer out of range", 5, 8) %>%
  pack_rows("D-Dimer unknown", 9, 12)
}
tab <- make_subgroup_ddimer_table("latex")
save_tex_table(tab, "outcomes/primary/descriptive-acs-itt-subgroup-ddimer-descriptive")
make_subgroup_ddimer_table()
```

```{r}
mdat <- make_stan_data(
  acs_itt_nona_dat %>% mutate(AAssignment = relevel(AAssignment, ref = "A0")),
  c("CAssignment", "AAssignment", "inelgc3", "agegte60", "ddimer_oor", "ctry", "CAssignment:ddimer_oor"),
  "PO",
  beta_sd = c(2.5, rep(1, 5), 10, 2.5, 2.5, 2.5, rep(1, 8)),
  contr.treatment
)
snk <- capture.output(
  mfit <- primary_mod$sample(
    data = mdat,
    seed = 91824,
    refresh = 0,
    iter_warmup = 1000,
    iter_sampling = 2500,
    chains = 8,
    parallel_chains = 8,
    adapt_delta = 0.98
))
mdrws <- as_draws_rvars(mfit$draws(c(
  "beta", 
  "gamma_site", "tau_site", 
  "gamma_epoch", "tau_epoch", 
  "y_ppc")))
names(mdrws$beta) <- colnames(mdat$X)
epoch_map <- acs_itt_nona_dat %>% dplyr::count(epoch, epoch_lab)
site_map <- acs_itt_nona_dat %>% dplyr::count(site_num, site)
names(mdrws$gamma_epoch) <- epoch_map$epoch_lab
names(mdrws$gamma_site) <- site_map$site

labs <- c("Intermediate", "Standard plus aspirin", "Therapeutic")
mdrws$inrange <- setNames(as.vector(mdrws$beta[2:4]), labs)
mdrws$outrange <- setNames(as.vector(mdrws$beta[2:4] + mdrws$beta[13:15]), labs)
mdrws$unknown <- setNames(as.vector(mdrws$beta[2:4] + mdrws$beta[16:18]), labs)
mdrws$OR <- exp(c(mdrws$inrange, mdrws$outrange, mdrws$unknown))
ordat <- expand_grid(
  `D-dimer out of range` = fct_inorder(c("No", "Yes", "Unknown")),
  Contrast = labs
) %>%
  mutate(Posterior = mdrws$OR)
```

```{r}
p <- plot_subgroup_or(ordat, sym("D-dimer out of range"))
ggsave(
  file.path("outputs", "figures", "outcomes", "primary", "acs-itt-subgroup-ddimer-hte.pdf"),
  p, height = 3, width = 6)
p
```

#### Weight

Due to small numbers and zero events this subgroup analysis was not undertaken.

```{r}
#| tbl-cap: Primary outcome by anti-coagulation intervention by aspirin use
make_subgroup_weight_table <- function(format = "html") {
  tdat <- acs_itt_dat %>%
    dplyr::count(
      weightgt120,
      `Anticoagulation intervention` = factor(
        CAssignment, labels = str_replace(intervention_labels()$CAssignment[-1], "<br>", " ")),
      PO) %>%
    complete(weightgt120, `Anticoagulation intervention`, PO, fill = list(n = 0)) %>%
    group_by(weightgt120, `Anticoagulation intervention`) %>%
    spread(PO, n, fill = 0) %>%
    ungroup() %>%
    mutate(
      Patients = `0` + `1` + `<NA>`,
      Known = `0` + `1`,
      `Primary outcome` = sprintf("%i (%.0f%%)", `1`, 100 * `1` / Known)
    ) %>%
    mutate(`Primary outcome` = str_replace(`Primary outcome`, "0 \\(NaN\\%\\)", "- (-%)")) %>%
    select(-weightgt120, -`0`, -`1`, -`<NA>`)
  kable(tdat,
        format = format,
      digits = 2,
      align = "lrrr",
      booktabs = TRUE) %>%
    kable_styling(
      font_size = 9,
      bootstrap_options = "striped",
      latex_options = "HOLD_position") %>%
    pack_rows("Weight $\\leq$ 120 kg", 1, 4) %>%
    pack_rows("Weight > 120 kg", 5, 8) 
}
tab <- make_subgroup_weight_table("latex")
save_tex_table(tab, "outcomes/primary/descriptive-acs-itt-subgroup-weight-descriptive")
make_subgroup_weight_table()
```

#### Aspirin

```{r}
#| tbl-cap: Primary outcome by anti-coagulation intervention by aspirin use
make_subgroup_aspirin_table <- function(format = "html") {
  tdat <- acs_itt_dat %>%
    dplyr::count(
      aspirin,
      `Anticoagulation intervention` = factor(
        CAssignment, labels = str_replace(intervention_labels()$CAssignment[-1], "<br>", " ")),
      PO) %>%
    complete(aspirin, `Anticoagulation intervention`, PO, fill = list(n = 0)) %>%
    group_by(aspirin, `Anticoagulation intervention`) %>%
    spread(PO, n, fill = 0) %>%
    ungroup() %>%
    mutate(
      Patients = `0` + `1` + `<NA>`,
      Known = `0` + `1`,
      `Primary outcome` = sprintf("%i (%.0f%%)", `1`, 100 * `1` / Known)
    ) %>%
    mutate(`Primary outcome` = str_replace(`Primary outcome`, "0 \\(NaN\\%\\)", "- (-%)")) %>%
    select(-aspirin, -`0`, -`1`, -`<NA>`)
  kable(tdat,
        format = format,
      digits = 2,
      align = "lrrr",
      booktabs = TRUE) %>%
    kable_styling(
      font_size = 9,
      bootstrap_options = "striped",
      latex_options = "HOLD_position") %>%
    pack_rows("Patient not taking aspirin", 1, 4) %>%
    pack_rows("Patient taking aspirin", 5, 8)  
}
tab <- make_subgroup_aspirin_table("latex")
save_tex_table(tab, "outcomes/primary/descriptive-acs-itt-subgroup-aspirin-descriptive")
make_subgroup_aspirin_table()
```

```{r}
mdat <- make_stan_data(
  acs_itt_nona_dat %>% mutate(AAssignment = relevel(AAssignment, ref = "A0")),
  c("CAssignment", "AAssignment", "inelgc3", "agegte60", 
    "aspirin", "ctry", "CAssignment:aspirin"),
  "PO",
  beta_sd = c(2.5, rep(1, 5), 10, 2.5, 2.5, rep(1, 5)),
  contr.treatment
)
snk <- capture.output(
  mfit <- primary_mod$sample(
    data = mdat,
    seed = 49173,
    refresh = 0,
    iter_warmup = 1000,
    iter_sampling = 2500,
    chains = 8,
    parallel_chains = 8,
    adapt_delta = 0.98
))
mdrws <- as_draws_rvars(mfit$draws(c(
  "beta", 
  "gamma_site", "tau_site", 
  "gamma_epoch", "tau_epoch", 
  "y_ppc")))
names(mdrws$beta) <- colnames(mdat$X)
epoch_map <- acs_itt_nona_dat %>% dplyr::count(epoch, epoch_lab)
site_map <- acs_itt_nona_dat %>% dplyr::count(site_num, site)
names(mdrws$gamma_epoch) <- epoch_map$epoch_lab
names(mdrws$gamma_site) <- site_map$site

labs <- c("Intermediate", "Standard plus aspirin", "Therapeutic")
mdrws$noAspirin <- setNames(as.vector(mdrws$beta[2:4]), labs)
mdrws$Aspirin <- setNames(as.vector(mdrws$beta[2:4] + mdrws$beta[12:14]), labs)
mdrws$OR <- exp(
  c(mdrws$noAspirin, mdrws$Aspirin)
)
ordat <- expand_grid(
  `Patient taking aspirin` = c("No", "Yes"),
  Contrast = labs
)
ordat$Posterior <- mdrws$OR
```

```{r}
p <- plot_subgroup_or(ordat, sym("Patient taking aspirin"))
ggsave(file.path("outputs", "figures", "outcomes", "primary", "acs-itt-subgroup-aspirin-hte.pdf"),
       p, height = 3, width = 6)
p
```

## Sensitivity Analyses

### Sens: Treatment Contrasts

The pre-specified model encoded priors on the orthonormal contrasts. In this section, the primary model is re-fit using the more standard treatment contrasts for a comparison of results.

```{r}
mdat <- make_primary_model_data(
  acs_itt_nona_dat,
  c("inelgc3", "agegte60", "ctry"),
  c(10, 2.5, 1, 1),
  contr.treatment
)
snk <- capture.output(
  mfit <- primary_mod$sample(
    data = mdat,
    seed = 32915,
    refresh = 0,
    iter_warmup = 1000,
    iter_sampling = 2500,
    chains = 8,
    parallel_chains = 8,
    adapt_delta = 0.99
))
mrvs <- as_draws_rvars(mfit$draws(c(
  "beta", 
  "gamma_site", "tau_site", 
  "gamma_epoch", "tau_epoch", "y_ppc")))

# Transformed samples
epoch_map <- acs_itt_nona_dat %>% dplyr::count(epoch, epoch_lab)
site_map <- acs_itt_nona_dat %>% dplyr::count(site_num, site)
Ca <- mdat$ctrA
Cc <- mdat$ctrC
nC <- ncol(Cc) + 1
Co <- cbind(1, Cc)
Ct <- cbind(1, contr.treatment(nC))

mrvs$eta <- as.vector(Co %**% mrvs$beta[1:nC])
mrvs$beta_uncon <- as.vector(Cc %**% mrvs$beta[2:nC])
mrvs$prob <- 1 / (1 + exp(-mrvs$eta))
mrvs$beta_trt <- as.vector(transform_coding(Co, Ct) %**% mrvs$beta[1:nC])
mrvs$OR <- setNames(
  exp(mrvs$beta_trt[-1]), 
  c("Intermediate", "Standard plus aspirin", "Therapeutic"))
mrvs$OR <- c(mrvs$OR, "Intermediate vs Therapeutic" = mrvs$OR[1] / mrvs$OR[3])
mrvs$OR <- c(mrvs$OR, 
                "Ineligible aspirin" = exp(mrvs$beta[7]), 
                "Age 60+" = exp(mrvs$beta[8]),
             setNames(exp(mrvs$beta[9:10]), c("Australia/New Zealand", "Nepal")))
mrvs$ORepoch <- setNames(exp(mrvs$gamma_epoch), epoch_map$epoch_lab)
mrvs$ORsites <- setNames(exp(mrvs$gamma_site), site_map$site)
```

```{r}
#| tbl-cap: Posterior summaries for model parameters under treatment contrast priors.
odds_ratio_summary_table(mrvs$OR)
```

```{r}
save_tex_table(
  odds_ratio_summary_table(mrvs$OR, "latex"),
  "outcomes/primary/primary-model-acs-itt-trt-ctr-summary-table")
```

```{r}
p <- plot_epoch_site_terms(
  mrvs$ORepoch, 
  mrvs$ORsites, 
  factor(mdat$region_by_site, labels = c("India", "Australia\nNew Zealand", "Nepal")))
pth <- file.path("outputs", "figures", "outcomes", "primary",
                 "primary-model-acs-itt-trt-ctr-epoch-site-terms.pdf")
ggsave(pth, p, width = 6, height = 4.5)
p
```

### Sens: Weakly Informative Priors

As a prior sensitivity assessment, the primary model is re-fit under weakly informative priors (Normal(0, 10)) for all fixed-effect parameters.

```{r}
mdat <- make_primary_model_data(
  acs_itt_nona_dat,
  c("inelgc3", "agegte60", "ctry"),
  c(10, 10, 10, 10),
  contr.treatment
)
mdat$beta_sd <- rep(10, length(mdat$beta_sd))
snk <- capture.output(
  mfit <- primary_mod$sample(
    data = mdat,
    seed = 32915,
    refresh = 0,
    iter_warmup = 1000,
    iter_sampling = 2500,
    chains = 8,
    parallel_chains = 8,
    adapt_delta = 0.99
))
mrvs <- as_draws_rvars(mfit$draws(c(
  "beta", 
  "gamma_site", "tau_site", 
  "gamma_epoch", "tau_epoch", "y_ppc")))
names(mrvs$beta) <- colnames(mdat$X)

# Transformed samples
epoch_map <- acs_itt_nona_dat %>% dplyr::count(epoch, epoch_lab)
site_map <- acs_itt_nona_dat %>% dplyr::count(site_num, site)
Ca <- mdat$ctrA
Cc <- mdat$ctrC
nC <- ncol(Cc) + 1
Co <- cbind(1, Cc)
Ct <- cbind(1, contr.treatment(nC))

mrvs$eta <- as.vector(Co %**% mrvs$beta[1:nC])
mrvs$beta_uncon <- as.vector(Cc %**% mrvs$beta[2:nC])
mrvs$prob <- 1 / (1 + exp(-mrvs$eta))
mrvs$beta_trt <- as.vector(transform_coding(Co, Ct) %**% mrvs$beta[1:nC])
mrvs$OR <- setNames(
  exp(mrvs$beta_trt[-1]), 
  c("Intermediate", "Standard plus aspirin", "Therapeutic"))
mrvs$OR <- c(mrvs$OR, "Intermediate vs Therapeutic" = mrvs$OR[1] / mrvs$OR[3])
mrvs$OR <- c(mrvs$OR, 
             "Ineligible aspirin" = exp(mrvs$beta[7]), 
             "Age 60+" = exp(mrvs$beta[8]),
             "Australia/New Zealand" = exp(mrvs$beta[9]),
             "Nepal" = exp(mrvs$beta[10]))
mrvs$ORepoch <- setNames(exp(mrvs$gamma_epoch), epoch_map$epoch_lab)
mrvs$ORsites <- setNames(exp(mrvs$gamma_site), site_map$site)
```


```{r}
#| tbl-cap: Posterior summaries for model parameters under treatment contrast priors.
odds_ratio_summary_table(mrvs$OR)
```

```{r}
p <- plot_epoch_site_terms(
  mrvs$ORepoch, 
  mrvs$ORsites, 
  factor(mdat$region_by_site, labels = c("India", "Australia\nNew Zealand", "Nepal")))
p
```

### Sens: FAS-ITT

In these analyses, the population is includes all participants who were randomised to the platform, even if not randomised into the anticoagulation domain.

```{r}
#| label: sample-primary-fas-itt-model
mdat <- make_primary_model_data(
  fas_itt_nona_dat,
  c("inelgc3", "agegte60", "ctry"),
  beta_sd_var = c(10, 2.5, 1, 1),
  contr.orthonorm
)
snk <- capture.output(
  mfit <- primary_mod$sample(
    data = mdat,
    seed = 35136,
    refresh = 0,
    iter_sampling = 2500,
    chains = 8,
    parallel_chains = 8,
    adapt_delta = 0.98
))
mrvs <- as_draws_rvars(mfit$draws(c(
  "beta", 
  "gamma_site", "tau_site", 
  "gamma_epoch", "tau_epoch", "y_ppc")))
names(mrvs$beta) <- colnames(mdat$X)

# Transformed samples
epoch_map <- fas_itt_nona_dat %>% dplyr::count(epoch, epoch_lab)
site_map <- fas_itt_nona_dat %>% dplyr::count(site_num, site)
Ca <- mdat$ctrA
Cc <- mdat$ctrC
nC <- ncol(Cc) + 1
Co <- cbind(1, Cc)
Ct <- cbind(1, contr.treatment(nC))

mrvs$Aeta <- as.vector(cbind(1, rbind("A0" = 0, cbind(1, Ca))) %**% mrvs$beta[c(1, 6, 7)])
names(mrvs$Aeta) <- c("A0", "A1", "A2")
mrvs$Acon <- as.vector(Ca %**% mrvs$beta[7])
mrvs$Atrt <- mrvs$Aeta[c(1, 3)] - mrvs$Aeta[2]

mrvs$Ceta <- as.vector(cbind(1, rbind("C0" = 0, cbind(1, Cc))) %**% mrvs$beta[1:5])
names(mrvs$Ceta) <- paste0("C", 0:4)
mrvs$Ccon <- as.vector(Cc %**% mrvs$beta[3:5])
mrvs$Ctrt <- mrvs$Ceta[c(1, 3, 4, 5)] - mrvs$Ceta[2]

mrvs$OR <- c(
  setNames(exp(mrvs$Ctrt[-1]), c("Intermediate", "Standard plus aspirin", "Therapeutic"))
)
mrvs$OR <- c(mrvs$OR, "Intermediate vs Therapeutic" = mrvs$OR[1] / mrvs$OR[3])
mrvs$OR <- c(mrvs$OR, 
                "Ineligible aspirin" = exp(mrvs$beta[8]), 
                "Age 60+" = exp(mrvs$beta[9]),
             setNames(exp(mrvs$beta[10:11]), c("Australia/New Zealand", "Nepal")))
mrvs$ORepoch <- setNames(exp(mrvs$gamma_epoch), epoch_map$epoch_lab)
mrvs$ORsites <- setNames(exp(mrvs$gamma_site), site_map$site)
```

```{r}
#| label: fig-or-densities-primary-fas-itt-model
#| fig-cap: Posterior densities for odds ratio contrasts.
#| echo: false
plot_or_densities(mrvs$OR)
```

```{r}
#| label: tbl-or-densities-primary-fas-itt-model
#| tbl-cap: Posterior summaries for odds ratio contrasts.
#| echo: false
odds_ratio_summary_table(mrvs$OR)
```

```{r}
#| label: odds-ratio-summary-table-primary-model-fas-itt-save
save_tex_table(
  odds_ratio_summary_table(mrvs$OR, "latex"),
  "outcomes/primary/primary-model-fas-itt-summary-table")
```

```{r}
#| label: odds-ratio-summary-primary-model-fas-itt-epoch-site-terms
p <- plot_epoch_site_terms(
  mrvs$ORepoch, 
  mrvs$ORsites,
  factor(mdat$region_by_site, labels = c("India", "Australia\nNew Zealand", "Nepal")))
p
```

```{r}
pth <- file.path("outputs", "figures", "outcomes", "primary", "primary-model-fas-itt-epoch-site-terms.pdf")
ggsave(pth, p, width = 6, height = 4.5)
```

### Sens: Concurrent Randomisation

In the following section, we undertake analyses where the analysis set is restricted to participants who were randomised concurrently amongst the relevant interventions. For example, the standard dose plus aspirin intervention was closed on 2021-09-10. Therefore, we perform a sensitivity analysis where we restrict the analysis set to participants randomised to the anticoagulation domain between trial start and 2021-09-10.

#### Intermediate dose

```{r}
#| label: tbl-acs-itt-c2-summary-table
#| tbl-cap: Primary outcome summary for participants randomised to either
#|   standard dose or intermediate dose arms (ACS-ITT).
save_tex_table(
  make_po_table(
    acs_itt_concurc2_dat,
    "latex"), 
  "outcomes/primary/acs-itt-c2-summary")
make_po_table(acs_itt_concurc2_dat)
```

```{r}
#| label: fit-model-acs-itt-c2
ctr <- contr.orthonorm
X <- model.matrix(
  ~ CAssignment + agegte60 + ctry, 
  data = acs_itt_concurc2_nona_dat,
  contrasts.arg = list(CAssignment = ctr))
y <- acs_itt_concurc2_nona_dat$PO
sdat <- list(
  N = nrow(X),
  K = ncol(X),
  X = X,
  y = y,
  beta_sd = c(2.5, 1, 2.5, 1, 1)
)
snk <- capture.output(
  sfit <- logistic_mod$sample(
    data = sdat,
    seed = 3274,
    chains = 8,
    parallel_chains = 8,
    iter_warmup = 1000,
    iter_sampling = 2500
  )
)
sdrws <- as_draws_rvars(sfit$draws("beta"))
names(sdrws$beta) <- colnames(X)
sdrws$beta_trt <- as.vector(
  transform_coding(cbind(1, ctr(2)), cbind(1, contr.treatment(2))) %**% sdrws$beta[1:2]
)
sdrws$OR <- c(
  "Intermediate dose" = exp(sdrws$beta_trt[2]),
  "Age 60+" = exp(sdrws$beta[3]),
  "Australia/New Zealand" = exp(sdrws$beta[4]),
  "Nepal" = exp(sdrws$beta[5])
)
```

```{r}
#| label: tbl-acs-itt-c2-primary-model-summary
#| tbl-cap: Parameter posterior summaries.
save_tex_table(
  odds_ratio_summary_table(sdrws$OR, "latex"),
  "outcomes/primary/primary-model-acs-itt-c2-summary-table")
odds_ratio_summary_table(sdrws$OR)
```

#### Standard plus aspirin

In what follows, the analysis set is restricted to participants in the ACS-ITT set who were randomised between study start and 2021-09-10. A summary of the number of participants randomised and meeting the primary outcome are provided in @tbl-acs-itt-c3-summary-table, noting that 35 participants were ineligible for the standard dose plus aspirin intervention.

```{r}
#| label: tbl-acs-itt-c3-summary-table
#| tbl-cap: Primary outcome summary for participants randomised whilst the
#|   standard dose plus aspirin arm was available (ACS-ITT).
save_tex_table(
  make_po_table(
    acs_itt_concurc3_dat,
    "latex"), 
  "outcomes/primary/acs-itt-c3-summary")
make_po_table(acs_itt_concurc3_dat)
```

Given there was non RAR activated in the domain, the only factor influencing allocation probabilities are eligibility for the standard dose plus aspirin intervention, and the region of enrolment (antiviral interventions open to Aus/NZ but not India). Therefore, a reduced model is fit to the data where the only terms are:

- anticoagulation intervention group
- ineligibility for aspirin group
- age 60+
- country (India or Aus/NZ)

No terms are included for site, epoch, or for the antiviral intervention received.

```{r}
#| label: fit-model-acs-itt-c3
X <- model.matrix(
  ~ CAssignment + agegte60 + ctry, 
  data = acs_itt_concurc3_nona_dat,
  contrasts.arg = list(CAssignment = contr.orthonorm))
y <- acs_itt_concurc3_nona_dat$PO
sdat <- list(
  N = nrow(X),
  K = ncol(X),
  X = X,
  y = y,
  beta_sd = c(2.5, 1, 1, 2.5, 1)
)
snk <- capture.output(
  sfit <- logistic_mod$sample(
    data = sdat,
    seed = 3274,
    chains = 8,
    parallel_chains = 8,
    iter_warmup = 1000,
    iter_sampling = 2500
  )
)
sdrws <- as_draws_rvars(sfit$draws("beta"))
names(sdrws$beta) <- colnames(X)

sdrws$beta_trt <- as.vector(
  transform_coding(cbind(1, contr.orthonorm(3)), cbind(1, contr.treatment(3))) %**% sdrws$beta[1:3]
)

sdrws$OR <- c(
  "Intermediate dose" = exp(sdrws$beta_trt[2]),
  "Standard dose plus aspirin" = exp(sdrws$beta_trt[3]),
  "Age 60+" = exp(sdrws$beta[4]),
  "Australia/New Zealand" = exp(sdrws$beta[5])
)
```

```{r}
#| label: tbl-acs-itt-c3-primary-model-summary
#| tbl-cap: Parameter posterior summaries.
save_tex_table(
  odds_ratio_summary_table(sdrws$OR, "latex"),
  "outcomes/primary/primary-model-acs-itt-c3-summary-table")
odds_ratio_summary_table(sdrws$OR)
```

#### Therapeutic dose

```{r}
#| label: tbl-acs-itt-c4-summary-table
save_tex_table(
  make_po_table(
    acs_itt_concurc4_dat,
    "latex"), 
  "outcomes/primary/acs-itt-c4-summary")
make_po_table(acs_itt_concurc4_dat)
```

```{r}
#| label: fit-model-acs-itt-c4
X <- model.matrix(
  ~ CAssignment + agegte60 + ctry,
  data = acs_itt_concurc4_nona_dat,
  contrasts.arg = list(CAssignment = contr.orthonorm))
y <- acs_itt_concurc4_nona_dat$PO
sdat <- list(
  N = nrow(X),
  K = ncol(X),
  X = X,
  y = y,
  beta_sd = c(2.5, 1, 1, 2.5, 1, 1)
)
snk <- capture.output(
  sfit <- logistic_mod$sample(
    data = sdat,
    seed = 3274,
    chains = 8,
    parallel_chains = 8,
    iter_warmup = 1000,
    iter_sampling = 2500
  )
)
sdrws <- as_draws_rvars(sfit$draws("beta"))
names(sdrws$beta) <- colnames(X)

sdrws$beta_trt <- as.vector(
  transform_coding(cbind(1, contr.orthonorm(3)), cbind(1, contr.treatment(3))) %**% sdrws$beta[1:3]
)

sdrws$OR <- c(
  "Intermediate dose" = exp(sdrws$beta_trt[2]),
  "Therapeutic dose" = exp(sdrws$beta_trt[3]),
  "Age 60+" = exp(sdrws$beta[4]),
  "Australia/New Zealand" = exp(sdrws$beta[5]),
  "Nepal" = exp(sdrws$beta[6])
)
```

```{r}
#| label: tbl-acs-itt-c4-primary-model-summary
#| tbl-cap: Parameter posterior summaries.
save_tex_table(
  odds_ratio_summary_table(sdrws$OR, "latex"),
  "outcomes/primary/primary-model-acs-itt-c4-summary-table")
odds_ratio_summary_table(sdrws$OR)
```

### Sens:  Worst-Case

Under this scenario, all participants with unknown primary outcome status were were to assumed to have met the primary outcome.

```{r}
make_po_table(acs_itt_wc_dat)
save_tex_table(
  make_po_table(acs_itt_wc_dat, "latex"), 
  "outcomes/primary/acs-itt-worst-case-anticoagulation-summary")
```

```{r}
#| label: sample-primary-acs-itt-wc-model
mdat <- make_primary_model_data(
  acs_itt_wc_dat,
  c("inelgc3", "agegte60", "ctry"),
  c(10, 2.5, 1, 1)
)
snk <- capture.output(
  mfit <- primary_mod$sample(
    data = mdat,
    seed = 71249,
    refresh = 0,
    iter_sampling = 2500,
    chains = 8,
    parallel_chains = 8,
    adapt_delta = 0.98
))
mrvs <- as_draws_rvars(mfit$draws(c(
  "beta", 
  "gamma_site", "tau_site", 
  "gamma_epoch", "tau_epoch", "y_ppc")))
```

```{r}
# Transformed samples
epoch_map <- acs_itt_wc_dat %>% dplyr::count(epoch, epoch_lab)
site_map <- acs_itt_wc_dat %>% dplyr::count(site_num, site)
Ca <- mdat$ctrA
Cc <- mdat$ctrC
nC <- ncol(Cc) + 1
Co <- cbind(1, Cc)
Ct <- cbind(1, contr.treatment(nC))

mrvs$eta <- as.vector(Co %**% mrvs$beta[1:nC])
mrvs$beta_uncon <- as.vector(Cc %**% mrvs$beta[2:nC])
mrvs$prob <- 1 / (1 + exp(-mrvs$eta))
mrvs$beta_trt <- as.vector(transform_coding(Co, Ct) %**% mrvs$beta[1:nC])
mrvs$OR <- setNames(
  exp(mrvs$beta_trt[-1]), 
  c("Intermediate", "Standard plus aspirin", "Therapeutic"))
mrvs$OR <- c(mrvs$OR, "Intermediate vs Therapeutic" = mrvs$OR[1] / mrvs$OR[3])
mrvs$OR <- c(mrvs$OR, 
                "Ineligible aspirin" = exp(mrvs$beta[7]), 
                "Age 60+" = exp(mrvs$beta[8]),
             setNames(exp(mrvs$beta[9:10]), c("Australia/New Zealand", "Nepal")))
mrvs$ORepoch <- setNames(exp(mrvs$gamma_epoch), epoch_map$epoch_lab)
mrvs$ORsites <- setNames(exp(mrvs$gamma_site), site_map$site)
```

```{r}
#| fig-cap: Posterior densities for odds ratio contrasts.
#| echo: false
plot_or_densities(mrvs$OR)
```

```{r}
#| tbl-cap: Posterior summaries for model parameters.
save_tex_table(
  odds_ratio_summary_table(mrvs$OR, "latex"),
  "outcomes/primary/primary-model-acs-itt-worst-case-summary-table")
odds_ratio_summary_table(mrvs$OR)
```

```{r}
p <- plot_epoch_site_terms(
  mrvs$ORepoch, 
  mrvs$ORsites, 
  factor(mdat$region_by_site, labels = c("India", "Australia\nNew Zealand", "Nepal")))
pth <- file.path("outputs", "figures", "outcomes", "primary", 
                 "primary-model-acs-itt-worst-case-epoch-site-terms.pdf")
ggsave(pth, p, width = 6, height = 4.5)
p
```

### Sens:  Best-Case

Under this scenario, all participants with unknown primary outcome status were were to assumed to have **not** met the primary outcome.

```{r}
save_tex_table(
  make_po_table(acs_itt_bc_dat, "latex"), 
  "outcomes/primary/acs-itt-best-case-anticoagulation-summary")
make_po_table(acs_itt_bc_dat)
```

```{r}
#| label: sample-primary-acs-itt-bc-model
mdat <- make_primary_model_data(
  acs_itt_bc_dat,
  c("inelgc3", "agegte60", "ctry"),
  c(10, 2.5, 1, 1)
)
snk <- capture.output(
  mfit <- primary_mod$sample(
    data = mdat,
    seed = 91595,
    refresh = 0,
    iter_sampling = 2500,
    chains = 8,
    parallel_chains = 8,
    adapt_delta = 0.98
))
mrvs <- as_draws_rvars(mfit$draws(c(
  "beta", 
  "gamma_site", "tau_site", 
  "gamma_epoch", "tau_epoch", "y_ppc")))
```

```{r}
# Transformed samples
epoch_map <- acs_itt_bc_dat %>% dplyr::count(epoch, epoch_lab)
site_map <- acs_itt_bc_dat %>% dplyr::count(site_num, site)
Ca <- mdat$ctrA
Cc <- mdat$ctrC
nC <- ncol(Cc) + 1
Co <- cbind(1, Cc)
Ct <- cbind(1, contr.treatment(nC))

mrvs$eta <- as.vector(Co %**% mrvs$beta[1:nC])
mrvs$beta_uncon <- as.vector(Cc %**% mrvs$beta[2:nC])
mrvs$prob <- 1 / (1 + exp(-mrvs$eta))
mrvs$beta_trt <- as.vector(transform_coding(Co, Ct) %**% mrvs$beta[1:nC])
mrvs$OR <- setNames(
  exp(mrvs$beta_trt[-1]), 
  c("Intermediate", "Standard plus aspirin", "Therapeutic"))
mrvs$OR <- c(mrvs$OR, "Intermediate vs Therapeutic" = mrvs$OR[1] / mrvs$OR[3])
mrvs$OR <- c(mrvs$OR, 
                "Ineligible aspirin" = exp(mrvs$beta[7]), 
                "Age 60+" = exp(mrvs$beta[8]),
             setNames(exp(mrvs$beta[9:10]), c("Australia/New Zealand", "Nepal")))
mrvs$ORepoch <- setNames(exp(mrvs$gamma_epoch), epoch_map$epoch_lab)
mrvs$ORsites <- setNames(exp(mrvs$gamma_site), site_map$site)
```

```{r}
#| fig-cap: Posterior densities for odds ratio contrasts.
#| echo: false
plot_or_densities(mrvs$OR)
```

```{r}
#| tbl-cap: Posterior summaries for model parameters.
save_tex_table(
  odds_ratio_summary_table(mrvs$OR, "latex"),
  "outcomes/primary/primary-model-acs-itt-best-case-summary-table")
odds_ratio_summary_table(mrvs$OR)
```

```{r}
p <- plot_epoch_site_terms(
  mrvs$ORepoch, 
  mrvs$ORsites, 
  factor(mdat$region_by_site, labels = c("India", "Australia\nNew Zealand", "Nepal")))
pth <- file.path("outputs", "figures", "outcomes", "primary", 
                 "primary-model-acs-itt-best-case-epoch-site-terms.pdf")
ggsave(pth, p, width = 6, height = 4.5)
p
```

### Sens: Account for timing of adaptations

In light of the fact that response-adaptive randomisation was never activated in the anticoagulation domain, the only adaptations were those which corresponded with the cessation and introduction of interventions. Therefore, an ad-hoc sensitivity analyses was undertaken where, rather than adjust for calendar time in 4 week epochs, a fixed term for each of the 4 recruitment periods:

- trial start to cessation of C3
- cessation of C3 to introduction of antiviral
- introduction of antiviral to introduction of therapeutic
- introduction of therapeutic to closure of anticoagulation domain.

In this analysis, the 4 periods of recruitment are included as a fixed effect in the model.

## Per-Protocol Analysis

In the per-protocol analysis, participants who did not satisfy the intervention protocol (as determined by blinded review) are excluded from the analysis set.

```{r}
all_pp %>%
  filter(ENR_rec == 1) %>%
  dplyr::count(Reason)
```

```{r}
acs_itt_dat %>%
  left_join(pp, by = "StudyPatientID") %>%
  dplyr::count(CAssignment, Reason) %>%
  spread(CAssignment, n, fill = 0)

acs_itt_dat %>%
  left_join(pp, by = "StudyPatientID") %>%
  dplyr::count(country, Reason) %>%
  spread(country, n, fill = 0)
```


```{r}
#| label: tbl-acs-pp-summary-table
#| tbl-cap: Primary outcome summary for ACS-PP set.
save_tex_table(
  make_po_table(
    acs_pp_dat,
    "latex"), 
  "outcomes/primary/acs-pp-outcome-summary")
make_po_table(acs_pp_dat)
```

```{r}
#| label: model-primary-sampling-acs-pp
#| code-summary: Data and sampling primary model
mdat <- make_primary_model_data(
  acs_pp_nona_dat,
  c("inelgc3", "agegte60", "ctry"),
  c(10, 2.5, 1, 1)
)
snk <- capture.output(
  mfit <- primary_mod$sample(
    data = mdat,
    seed = 81241,
    refresh = 0,
    iter_warmup = 1000,
    iter_sampling = 2500,
    chains = 8,
    parallel_chains = 8,
    adapt_delta = 0.99
))
mdrws <- as_draws_rvars(mfit$draws(c(
  "beta", 
  "gamma_site", "tau_site", 
  "gamma_epoch", "tau_epoch", "y_ppc")))
names(mdrws$beta) <- colnames(mdat$X)

# Transformed samples
epoch_map <- acs_pp_nona_dat %>% dplyr::count(epoch, epoch_lab)
site_map <- acs_pp_nona_dat %>% dplyr::count(site_num, site)
site_facet <- factor(mdat$region_by_site, labels = c("India", "Australia\nNew Zealand", "Nepal"))

Ca <- mdat$ctrA
Cc <- mdat$ctrC

mdrws$Acon <- Ca %**% mdrws$beta[grepl("randA[0-9]", names(mdrws$beta))]
mdrws$Ccon <- Cc %**% mdrws$beta[grepl("randC[0-9]", names(mdrws$beta))]
mdrws$Atrt <- mdrws$Acon[-1] - mdrws$Acon[1]
mdrws$Ctrt <- mdrws$Ccon[-1] - mdrws$Ccon[1]

mdrws$OR <- setNames(exp(mdrws$Ctrt), c("Intermediate", "Standard plus aspirin", "Therapeutic"))
mdrws$OR <- c(
  mdrws$OR, 
  "Ineligible aspirin" = exp(mdrws$beta[7]), 
  "Age 60+" = exp(mdrws$beta[8]),
   setNames(exp(mdrws$beta[9:10]), c("Australia/New Zealand", "Nepal")))
mdrws$ORepoch <- setNames(exp(mdrws$gamma_epoch), epoch_map$epoch_lab)
mdrws$ORsites <- setNames(exp(mdrws$gamma_site), site_map$site)
```

```{r}
#| label: tbl-odds-ratio-summary-table-primary-model-acs-pp
#| tbl-cap: Posterior summaries for model parameters.
save_tex_table(
  odds_ratio_summary_table(mdrws$OR, "latex"),
  "outcomes/primary/primary-model-acs-pp-summary-table")
odds_ratio_summary_table(mdrws$OR)
```

```{r}
p <- plot_epoch_site_terms(mdrws$ORepoch, mdrws$ORsites, site_facet)
pth <- file.path("outputs", "figures", "outcomes", "primary", 
                 "primary-model-acs-pp-epoch-site-terms.pdf")
ggsave(pth, p, width = 6, height = 4.5)
p
```

